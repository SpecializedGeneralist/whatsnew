// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package whatsnew

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// WhatsnewClient is the client API for Whatsnew service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WhatsnewClient interface {
	GetFeeds(ctx context.Context, in *GetFeedsRequest, opts ...grpc.CallOption) (*GetFeedsResponse, error)
	CreateFeeds(ctx context.Context, in *CreateFeedsRequest, opts ...grpc.CallOption) (*CreateFeedsResponse, error)
	CreateFeed(ctx context.Context, in *CreateFeedRequest, opts ...grpc.CallOption) (*CreateFeedResponse, error)
	GetFeed(ctx context.Context, in *GetFeedRequest, opts ...grpc.CallOption) (*GetFeedResponse, error)
	UpdateFeed(ctx context.Context, in *UpdateFeedRequest, opts ...grpc.CallOption) (*UpdateFeedResponse, error)
	DeleteFeed(ctx context.Context, in *DeleteFeedRequest, opts ...grpc.CallOption) (*DeleteFeedResponse, error)
	GetUserTwitterSources(ctx context.Context, in *GetUserTwitterSourcesRequest, opts ...grpc.CallOption) (*GetUserTwitterSourcesResponse, error)
	CreateUserTwitterSources(ctx context.Context, in *CreateUserTwitterSourcesRequest, opts ...grpc.CallOption) (*CreateUserTwitterSourcesResponse, error)
	CreateUserTwitterSource(ctx context.Context, in *CreateUserTwitterSourceRequest, opts ...grpc.CallOption) (*CreateUserTwitterSourceResponse, error)
	GetUserTwitterSource(ctx context.Context, in *GetUserTwitterSourceRequest, opts ...grpc.CallOption) (*GetUserTwitterSourceResponse, error)
	UpdateUserTwitterSource(ctx context.Context, in *UpdateUserTwitterSourceRequest, opts ...grpc.CallOption) (*UpdateUserTwitterSourceResponse, error)
	DeleteUserTwitterSource(ctx context.Context, in *DeleteUserTwitterSourceRequest, opts ...grpc.CallOption) (*DeleteUserTwitterSourceResponse, error)
	GetQueryTwitterSources(ctx context.Context, in *GetQueryTwitterSourcesRequest, opts ...grpc.CallOption) (*GetQueryTwitterSourcesResponse, error)
	CreateQueryTwitterSources(ctx context.Context, in *CreateQueryTwitterSourcesRequest, opts ...grpc.CallOption) (*CreateQueryTwitterSourcesResponse, error)
	CreateQueryTwitterSource(ctx context.Context, in *CreateQueryTwitterSourceRequest, opts ...grpc.CallOption) (*CreateQueryTwitterSourceResponse, error)
	GetQueryTwitterSource(ctx context.Context, in *GetQueryTwitterSourceRequest, opts ...grpc.CallOption) (*GetQueryTwitterSourceResponse, error)
	UpdateQueryTwitterSource(ctx context.Context, in *UpdateQueryTwitterSourceRequest, opts ...grpc.CallOption) (*UpdateQueryTwitterSourceResponse, error)
	DeleteQueryTwitterSource(ctx context.Context, in *DeleteQueryTwitterSourceRequest, opts ...grpc.CallOption) (*DeleteQueryTwitterSourceResponse, error)
	GetZeroShotHypothesisTemplates(ctx context.Context, in *GetZeroShotHypothesisTemplatesRequest, opts ...grpc.CallOption) (*GetZeroShotHypothesisTemplatesResponse, error)
	CreateZeroShotHypothesisTemplates(ctx context.Context, in *CreateZeroShotHypothesisTemplatesRequest, opts ...grpc.CallOption) (*CreateZeroShotHypothesisTemplatesResponse, error)
	CreateZeroShotHypothesisTemplate(ctx context.Context, in *CreateZeroShotHypothesisTemplateRequest, opts ...grpc.CallOption) (*CreateZeroShotHypothesisTemplateResponse, error)
	GetZeroShotHypothesisTemplate(ctx context.Context, in *GetZeroShotHypothesisTemplateRequest, opts ...grpc.CallOption) (*GetZeroShotHypothesisTemplateResponse, error)
	UpdateZeroShotHypothesisTemplate(ctx context.Context, in *UpdateZeroShotHypothesisTemplateRequest, opts ...grpc.CallOption) (*UpdateZeroShotHypothesisTemplateResponse, error)
	DeleteZeroShotHypothesisTemplate(ctx context.Context, in *DeleteZeroShotHypothesisTemplateRequest, opts ...grpc.CallOption) (*DeleteZeroShotHypothesisTemplateResponse, error)
	CreateZeroShotHypothesisLabels(ctx context.Context, in *CreateZeroShotHypothesisLabelsRequest, opts ...grpc.CallOption) (*CreateZeroShotHypothesisLabelsResponse, error)
	CreateZeroShotHypothesisLabel(ctx context.Context, in *CreateZeroShotHypothesisLabelRequest, opts ...grpc.CallOption) (*CreateZeroShotHypothesisLabelResponse, error)
	GetZeroShotHypothesisLabel(ctx context.Context, in *GetZeroShotHypothesisLabelRequest, opts ...grpc.CallOption) (*GetZeroShotHypothesisLabelResponse, error)
	UpdateZeroShotHypothesisLabel(ctx context.Context, in *UpdateZeroShotHypothesisLabelRequest, opts ...grpc.CallOption) (*UpdateZeroShotHypothesisLabelResponse, error)
	DeleteZeroShotHypothesisLabel(ctx context.Context, in *DeleteZeroShotHypothesisLabelRequest, opts ...grpc.CallOption) (*DeleteZeroShotHypothesisLabelResponse, error)
	GetInfoExtractionRules(ctx context.Context, in *GetInfoExtractionRulesRequest, opts ...grpc.CallOption) (*GetInfoExtractionRulesResponse, error)
	CreateInfoExtractionRules(ctx context.Context, in *CreateInfoExtractionRulesRequest, opts ...grpc.CallOption) (*CreateInfoExtractionRulesResponse, error)
	CreateInfoExtractionRule(ctx context.Context, in *CreateInfoExtractionRuleRequest, opts ...grpc.CallOption) (*CreateInfoExtractionRuleResponse, error)
	GetInfoExtractionRule(ctx context.Context, in *GetInfoExtractionRuleRequest, opts ...grpc.CallOption) (*GetInfoExtractionRuleResponse, error)
	UpdateInfoExtractionRule(ctx context.Context, in *UpdateInfoExtractionRuleRequest, opts ...grpc.CallOption) (*UpdateInfoExtractionRuleResponse, error)
	DeleteInfoExtractionRule(ctx context.Context, in *DeleteInfoExtractionRuleRequest, opts ...grpc.CallOption) (*DeleteInfoExtractionRuleResponse, error)
}

type whatsnewClient struct {
	cc grpc.ClientConnInterface
}

func NewWhatsnewClient(cc grpc.ClientConnInterface) WhatsnewClient {
	return &whatsnewClient{cc}
}

func (c *whatsnewClient) GetFeeds(ctx context.Context, in *GetFeedsRequest, opts ...grpc.CallOption) (*GetFeedsResponse, error) {
	out := new(GetFeedsResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/GetFeeds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) CreateFeeds(ctx context.Context, in *CreateFeedsRequest, opts ...grpc.CallOption) (*CreateFeedsResponse, error) {
	out := new(CreateFeedsResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/CreateFeeds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) CreateFeed(ctx context.Context, in *CreateFeedRequest, opts ...grpc.CallOption) (*CreateFeedResponse, error) {
	out := new(CreateFeedResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/CreateFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) GetFeed(ctx context.Context, in *GetFeedRequest, opts ...grpc.CallOption) (*GetFeedResponse, error) {
	out := new(GetFeedResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/GetFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) UpdateFeed(ctx context.Context, in *UpdateFeedRequest, opts ...grpc.CallOption) (*UpdateFeedResponse, error) {
	out := new(UpdateFeedResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/UpdateFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) DeleteFeed(ctx context.Context, in *DeleteFeedRequest, opts ...grpc.CallOption) (*DeleteFeedResponse, error) {
	out := new(DeleteFeedResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/DeleteFeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) GetUserTwitterSources(ctx context.Context, in *GetUserTwitterSourcesRequest, opts ...grpc.CallOption) (*GetUserTwitterSourcesResponse, error) {
	out := new(GetUserTwitterSourcesResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/GetUserTwitterSources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) CreateUserTwitterSources(ctx context.Context, in *CreateUserTwitterSourcesRequest, opts ...grpc.CallOption) (*CreateUserTwitterSourcesResponse, error) {
	out := new(CreateUserTwitterSourcesResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/CreateUserTwitterSources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) CreateUserTwitterSource(ctx context.Context, in *CreateUserTwitterSourceRequest, opts ...grpc.CallOption) (*CreateUserTwitterSourceResponse, error) {
	out := new(CreateUserTwitterSourceResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/CreateUserTwitterSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) GetUserTwitterSource(ctx context.Context, in *GetUserTwitterSourceRequest, opts ...grpc.CallOption) (*GetUserTwitterSourceResponse, error) {
	out := new(GetUserTwitterSourceResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/GetUserTwitterSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) UpdateUserTwitterSource(ctx context.Context, in *UpdateUserTwitterSourceRequest, opts ...grpc.CallOption) (*UpdateUserTwitterSourceResponse, error) {
	out := new(UpdateUserTwitterSourceResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/UpdateUserTwitterSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) DeleteUserTwitterSource(ctx context.Context, in *DeleteUserTwitterSourceRequest, opts ...grpc.CallOption) (*DeleteUserTwitterSourceResponse, error) {
	out := new(DeleteUserTwitterSourceResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/DeleteUserTwitterSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) GetQueryTwitterSources(ctx context.Context, in *GetQueryTwitterSourcesRequest, opts ...grpc.CallOption) (*GetQueryTwitterSourcesResponse, error) {
	out := new(GetQueryTwitterSourcesResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/GetQueryTwitterSources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) CreateQueryTwitterSources(ctx context.Context, in *CreateQueryTwitterSourcesRequest, opts ...grpc.CallOption) (*CreateQueryTwitterSourcesResponse, error) {
	out := new(CreateQueryTwitterSourcesResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/CreateQueryTwitterSources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) CreateQueryTwitterSource(ctx context.Context, in *CreateQueryTwitterSourceRequest, opts ...grpc.CallOption) (*CreateQueryTwitterSourceResponse, error) {
	out := new(CreateQueryTwitterSourceResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/CreateQueryTwitterSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) GetQueryTwitterSource(ctx context.Context, in *GetQueryTwitterSourceRequest, opts ...grpc.CallOption) (*GetQueryTwitterSourceResponse, error) {
	out := new(GetQueryTwitterSourceResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/GetQueryTwitterSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) UpdateQueryTwitterSource(ctx context.Context, in *UpdateQueryTwitterSourceRequest, opts ...grpc.CallOption) (*UpdateQueryTwitterSourceResponse, error) {
	out := new(UpdateQueryTwitterSourceResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/UpdateQueryTwitterSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) DeleteQueryTwitterSource(ctx context.Context, in *DeleteQueryTwitterSourceRequest, opts ...grpc.CallOption) (*DeleteQueryTwitterSourceResponse, error) {
	out := new(DeleteQueryTwitterSourceResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/DeleteQueryTwitterSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) GetZeroShotHypothesisTemplates(ctx context.Context, in *GetZeroShotHypothesisTemplatesRequest, opts ...grpc.CallOption) (*GetZeroShotHypothesisTemplatesResponse, error) {
	out := new(GetZeroShotHypothesisTemplatesResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/GetZeroShotHypothesisTemplates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) CreateZeroShotHypothesisTemplates(ctx context.Context, in *CreateZeroShotHypothesisTemplatesRequest, opts ...grpc.CallOption) (*CreateZeroShotHypothesisTemplatesResponse, error) {
	out := new(CreateZeroShotHypothesisTemplatesResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/CreateZeroShotHypothesisTemplates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) CreateZeroShotHypothesisTemplate(ctx context.Context, in *CreateZeroShotHypothesisTemplateRequest, opts ...grpc.CallOption) (*CreateZeroShotHypothesisTemplateResponse, error) {
	out := new(CreateZeroShotHypothesisTemplateResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/CreateZeroShotHypothesisTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) GetZeroShotHypothesisTemplate(ctx context.Context, in *GetZeroShotHypothesisTemplateRequest, opts ...grpc.CallOption) (*GetZeroShotHypothesisTemplateResponse, error) {
	out := new(GetZeroShotHypothesisTemplateResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/GetZeroShotHypothesisTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) UpdateZeroShotHypothesisTemplate(ctx context.Context, in *UpdateZeroShotHypothesisTemplateRequest, opts ...grpc.CallOption) (*UpdateZeroShotHypothesisTemplateResponse, error) {
	out := new(UpdateZeroShotHypothesisTemplateResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/UpdateZeroShotHypothesisTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) DeleteZeroShotHypothesisTemplate(ctx context.Context, in *DeleteZeroShotHypothesisTemplateRequest, opts ...grpc.CallOption) (*DeleteZeroShotHypothesisTemplateResponse, error) {
	out := new(DeleteZeroShotHypothesisTemplateResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/DeleteZeroShotHypothesisTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) CreateZeroShotHypothesisLabels(ctx context.Context, in *CreateZeroShotHypothesisLabelsRequest, opts ...grpc.CallOption) (*CreateZeroShotHypothesisLabelsResponse, error) {
	out := new(CreateZeroShotHypothesisLabelsResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/CreateZeroShotHypothesisLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) CreateZeroShotHypothesisLabel(ctx context.Context, in *CreateZeroShotHypothesisLabelRequest, opts ...grpc.CallOption) (*CreateZeroShotHypothesisLabelResponse, error) {
	out := new(CreateZeroShotHypothesisLabelResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/CreateZeroShotHypothesisLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) GetZeroShotHypothesisLabel(ctx context.Context, in *GetZeroShotHypothesisLabelRequest, opts ...grpc.CallOption) (*GetZeroShotHypothesisLabelResponse, error) {
	out := new(GetZeroShotHypothesisLabelResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/GetZeroShotHypothesisLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) UpdateZeroShotHypothesisLabel(ctx context.Context, in *UpdateZeroShotHypothesisLabelRequest, opts ...grpc.CallOption) (*UpdateZeroShotHypothesisLabelResponse, error) {
	out := new(UpdateZeroShotHypothesisLabelResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/UpdateZeroShotHypothesisLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) DeleteZeroShotHypothesisLabel(ctx context.Context, in *DeleteZeroShotHypothesisLabelRequest, opts ...grpc.CallOption) (*DeleteZeroShotHypothesisLabelResponse, error) {
	out := new(DeleteZeroShotHypothesisLabelResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/DeleteZeroShotHypothesisLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) GetInfoExtractionRules(ctx context.Context, in *GetInfoExtractionRulesRequest, opts ...grpc.CallOption) (*GetInfoExtractionRulesResponse, error) {
	out := new(GetInfoExtractionRulesResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/GetInfoExtractionRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) CreateInfoExtractionRules(ctx context.Context, in *CreateInfoExtractionRulesRequest, opts ...grpc.CallOption) (*CreateInfoExtractionRulesResponse, error) {
	out := new(CreateInfoExtractionRulesResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/CreateInfoExtractionRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) CreateInfoExtractionRule(ctx context.Context, in *CreateInfoExtractionRuleRequest, opts ...grpc.CallOption) (*CreateInfoExtractionRuleResponse, error) {
	out := new(CreateInfoExtractionRuleResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/CreateInfoExtractionRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) GetInfoExtractionRule(ctx context.Context, in *GetInfoExtractionRuleRequest, opts ...grpc.CallOption) (*GetInfoExtractionRuleResponse, error) {
	out := new(GetInfoExtractionRuleResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/GetInfoExtractionRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) UpdateInfoExtractionRule(ctx context.Context, in *UpdateInfoExtractionRuleRequest, opts ...grpc.CallOption) (*UpdateInfoExtractionRuleResponse, error) {
	out := new(UpdateInfoExtractionRuleResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/UpdateInfoExtractionRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whatsnewClient) DeleteInfoExtractionRule(ctx context.Context, in *DeleteInfoExtractionRuleRequest, opts ...grpc.CallOption) (*DeleteInfoExtractionRuleResponse, error) {
	out := new(DeleteInfoExtractionRuleResponse)
	err := c.cc.Invoke(ctx, "/whatsnew.Whatsnew/DeleteInfoExtractionRule", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WhatsnewServer is the server API for Whatsnew service.
// All implementations must embed UnimplementedWhatsnewServer
// for forward compatibility
type WhatsnewServer interface {
	GetFeeds(context.Context, *GetFeedsRequest) (*GetFeedsResponse, error)
	CreateFeeds(context.Context, *CreateFeedsRequest) (*CreateFeedsResponse, error)
	CreateFeed(context.Context, *CreateFeedRequest) (*CreateFeedResponse, error)
	GetFeed(context.Context, *GetFeedRequest) (*GetFeedResponse, error)
	UpdateFeed(context.Context, *UpdateFeedRequest) (*UpdateFeedResponse, error)
	DeleteFeed(context.Context, *DeleteFeedRequest) (*DeleteFeedResponse, error)
	GetUserTwitterSources(context.Context, *GetUserTwitterSourcesRequest) (*GetUserTwitterSourcesResponse, error)
	CreateUserTwitterSources(context.Context, *CreateUserTwitterSourcesRequest) (*CreateUserTwitterSourcesResponse, error)
	CreateUserTwitterSource(context.Context, *CreateUserTwitterSourceRequest) (*CreateUserTwitterSourceResponse, error)
	GetUserTwitterSource(context.Context, *GetUserTwitterSourceRequest) (*GetUserTwitterSourceResponse, error)
	UpdateUserTwitterSource(context.Context, *UpdateUserTwitterSourceRequest) (*UpdateUserTwitterSourceResponse, error)
	DeleteUserTwitterSource(context.Context, *DeleteUserTwitterSourceRequest) (*DeleteUserTwitterSourceResponse, error)
	GetQueryTwitterSources(context.Context, *GetQueryTwitterSourcesRequest) (*GetQueryTwitterSourcesResponse, error)
	CreateQueryTwitterSources(context.Context, *CreateQueryTwitterSourcesRequest) (*CreateQueryTwitterSourcesResponse, error)
	CreateQueryTwitterSource(context.Context, *CreateQueryTwitterSourceRequest) (*CreateQueryTwitterSourceResponse, error)
	GetQueryTwitterSource(context.Context, *GetQueryTwitterSourceRequest) (*GetQueryTwitterSourceResponse, error)
	UpdateQueryTwitterSource(context.Context, *UpdateQueryTwitterSourceRequest) (*UpdateQueryTwitterSourceResponse, error)
	DeleteQueryTwitterSource(context.Context, *DeleteQueryTwitterSourceRequest) (*DeleteQueryTwitterSourceResponse, error)
	GetZeroShotHypothesisTemplates(context.Context, *GetZeroShotHypothesisTemplatesRequest) (*GetZeroShotHypothesisTemplatesResponse, error)
	CreateZeroShotHypothesisTemplates(context.Context, *CreateZeroShotHypothesisTemplatesRequest) (*CreateZeroShotHypothesisTemplatesResponse, error)
	CreateZeroShotHypothesisTemplate(context.Context, *CreateZeroShotHypothesisTemplateRequest) (*CreateZeroShotHypothesisTemplateResponse, error)
	GetZeroShotHypothesisTemplate(context.Context, *GetZeroShotHypothesisTemplateRequest) (*GetZeroShotHypothesisTemplateResponse, error)
	UpdateZeroShotHypothesisTemplate(context.Context, *UpdateZeroShotHypothesisTemplateRequest) (*UpdateZeroShotHypothesisTemplateResponse, error)
	DeleteZeroShotHypothesisTemplate(context.Context, *DeleteZeroShotHypothesisTemplateRequest) (*DeleteZeroShotHypothesisTemplateResponse, error)
	CreateZeroShotHypothesisLabels(context.Context, *CreateZeroShotHypothesisLabelsRequest) (*CreateZeroShotHypothesisLabelsResponse, error)
	CreateZeroShotHypothesisLabel(context.Context, *CreateZeroShotHypothesisLabelRequest) (*CreateZeroShotHypothesisLabelResponse, error)
	GetZeroShotHypothesisLabel(context.Context, *GetZeroShotHypothesisLabelRequest) (*GetZeroShotHypothesisLabelResponse, error)
	UpdateZeroShotHypothesisLabel(context.Context, *UpdateZeroShotHypothesisLabelRequest) (*UpdateZeroShotHypothesisLabelResponse, error)
	DeleteZeroShotHypothesisLabel(context.Context, *DeleteZeroShotHypothesisLabelRequest) (*DeleteZeroShotHypothesisLabelResponse, error)
	GetInfoExtractionRules(context.Context, *GetInfoExtractionRulesRequest) (*GetInfoExtractionRulesResponse, error)
	CreateInfoExtractionRules(context.Context, *CreateInfoExtractionRulesRequest) (*CreateInfoExtractionRulesResponse, error)
	CreateInfoExtractionRule(context.Context, *CreateInfoExtractionRuleRequest) (*CreateInfoExtractionRuleResponse, error)
	GetInfoExtractionRule(context.Context, *GetInfoExtractionRuleRequest) (*GetInfoExtractionRuleResponse, error)
	UpdateInfoExtractionRule(context.Context, *UpdateInfoExtractionRuleRequest) (*UpdateInfoExtractionRuleResponse, error)
	DeleteInfoExtractionRule(context.Context, *DeleteInfoExtractionRuleRequest) (*DeleteInfoExtractionRuleResponse, error)
	mustEmbedUnimplementedWhatsnewServer()
}

// UnimplementedWhatsnewServer must be embedded to have forward compatible implementations.
type UnimplementedWhatsnewServer struct {
}

func (UnimplementedWhatsnewServer) GetFeeds(context.Context, *GetFeedsRequest) (*GetFeedsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeeds not implemented")
}
func (UnimplementedWhatsnewServer) CreateFeeds(context.Context, *CreateFeedsRequest) (*CreateFeedsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFeeds not implemented")
}
func (UnimplementedWhatsnewServer) CreateFeed(context.Context, *CreateFeedRequest) (*CreateFeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFeed not implemented")
}
func (UnimplementedWhatsnewServer) GetFeed(context.Context, *GetFeedRequest) (*GetFeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFeed not implemented")
}
func (UnimplementedWhatsnewServer) UpdateFeed(context.Context, *UpdateFeedRequest) (*UpdateFeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFeed not implemented")
}
func (UnimplementedWhatsnewServer) DeleteFeed(context.Context, *DeleteFeedRequest) (*DeleteFeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFeed not implemented")
}
func (UnimplementedWhatsnewServer) GetUserTwitterSources(context.Context, *GetUserTwitterSourcesRequest) (*GetUserTwitterSourcesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTwitterSources not implemented")
}
func (UnimplementedWhatsnewServer) CreateUserTwitterSources(context.Context, *CreateUserTwitterSourcesRequest) (*CreateUserTwitterSourcesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserTwitterSources not implemented")
}
func (UnimplementedWhatsnewServer) CreateUserTwitterSource(context.Context, *CreateUserTwitterSourceRequest) (*CreateUserTwitterSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserTwitterSource not implemented")
}
func (UnimplementedWhatsnewServer) GetUserTwitterSource(context.Context, *GetUserTwitterSourceRequest) (*GetUserTwitterSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTwitterSource not implemented")
}
func (UnimplementedWhatsnewServer) UpdateUserTwitterSource(context.Context, *UpdateUserTwitterSourceRequest) (*UpdateUserTwitterSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserTwitterSource not implemented")
}
func (UnimplementedWhatsnewServer) DeleteUserTwitterSource(context.Context, *DeleteUserTwitterSourceRequest) (*DeleteUserTwitterSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserTwitterSource not implemented")
}
func (UnimplementedWhatsnewServer) GetQueryTwitterSources(context.Context, *GetQueryTwitterSourcesRequest) (*GetQueryTwitterSourcesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQueryTwitterSources not implemented")
}
func (UnimplementedWhatsnewServer) CreateQueryTwitterSources(context.Context, *CreateQueryTwitterSourcesRequest) (*CreateQueryTwitterSourcesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQueryTwitterSources not implemented")
}
func (UnimplementedWhatsnewServer) CreateQueryTwitterSource(context.Context, *CreateQueryTwitterSourceRequest) (*CreateQueryTwitterSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQueryTwitterSource not implemented")
}
func (UnimplementedWhatsnewServer) GetQueryTwitterSource(context.Context, *GetQueryTwitterSourceRequest) (*GetQueryTwitterSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQueryTwitterSource not implemented")
}
func (UnimplementedWhatsnewServer) UpdateQueryTwitterSource(context.Context, *UpdateQueryTwitterSourceRequest) (*UpdateQueryTwitterSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateQueryTwitterSource not implemented")
}
func (UnimplementedWhatsnewServer) DeleteQueryTwitterSource(context.Context, *DeleteQueryTwitterSourceRequest) (*DeleteQueryTwitterSourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteQueryTwitterSource not implemented")
}
func (UnimplementedWhatsnewServer) GetZeroShotHypothesisTemplates(context.Context, *GetZeroShotHypothesisTemplatesRequest) (*GetZeroShotHypothesisTemplatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetZeroShotHypothesisTemplates not implemented")
}
func (UnimplementedWhatsnewServer) CreateZeroShotHypothesisTemplates(context.Context, *CreateZeroShotHypothesisTemplatesRequest) (*CreateZeroShotHypothesisTemplatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateZeroShotHypothesisTemplates not implemented")
}
func (UnimplementedWhatsnewServer) CreateZeroShotHypothesisTemplate(context.Context, *CreateZeroShotHypothesisTemplateRequest) (*CreateZeroShotHypothesisTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateZeroShotHypothesisTemplate not implemented")
}
func (UnimplementedWhatsnewServer) GetZeroShotHypothesisTemplate(context.Context, *GetZeroShotHypothesisTemplateRequest) (*GetZeroShotHypothesisTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetZeroShotHypothesisTemplate not implemented")
}
func (UnimplementedWhatsnewServer) UpdateZeroShotHypothesisTemplate(context.Context, *UpdateZeroShotHypothesisTemplateRequest) (*UpdateZeroShotHypothesisTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateZeroShotHypothesisTemplate not implemented")
}
func (UnimplementedWhatsnewServer) DeleteZeroShotHypothesisTemplate(context.Context, *DeleteZeroShotHypothesisTemplateRequest) (*DeleteZeroShotHypothesisTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteZeroShotHypothesisTemplate not implemented")
}
func (UnimplementedWhatsnewServer) CreateZeroShotHypothesisLabels(context.Context, *CreateZeroShotHypothesisLabelsRequest) (*CreateZeroShotHypothesisLabelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateZeroShotHypothesisLabels not implemented")
}
func (UnimplementedWhatsnewServer) CreateZeroShotHypothesisLabel(context.Context, *CreateZeroShotHypothesisLabelRequest) (*CreateZeroShotHypothesisLabelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateZeroShotHypothesisLabel not implemented")
}
func (UnimplementedWhatsnewServer) GetZeroShotHypothesisLabel(context.Context, *GetZeroShotHypothesisLabelRequest) (*GetZeroShotHypothesisLabelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetZeroShotHypothesisLabel not implemented")
}
func (UnimplementedWhatsnewServer) UpdateZeroShotHypothesisLabel(context.Context, *UpdateZeroShotHypothesisLabelRequest) (*UpdateZeroShotHypothesisLabelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateZeroShotHypothesisLabel not implemented")
}
func (UnimplementedWhatsnewServer) DeleteZeroShotHypothesisLabel(context.Context, *DeleteZeroShotHypothesisLabelRequest) (*DeleteZeroShotHypothesisLabelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteZeroShotHypothesisLabel not implemented")
}
func (UnimplementedWhatsnewServer) GetInfoExtractionRules(context.Context, *GetInfoExtractionRulesRequest) (*GetInfoExtractionRulesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfoExtractionRules not implemented")
}
func (UnimplementedWhatsnewServer) CreateInfoExtractionRules(context.Context, *CreateInfoExtractionRulesRequest) (*CreateInfoExtractionRulesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateInfoExtractionRules not implemented")
}
func (UnimplementedWhatsnewServer) CreateInfoExtractionRule(context.Context, *CreateInfoExtractionRuleRequest) (*CreateInfoExtractionRuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateInfoExtractionRule not implemented")
}
func (UnimplementedWhatsnewServer) GetInfoExtractionRule(context.Context, *GetInfoExtractionRuleRequest) (*GetInfoExtractionRuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfoExtractionRule not implemented")
}
func (UnimplementedWhatsnewServer) UpdateInfoExtractionRule(context.Context, *UpdateInfoExtractionRuleRequest) (*UpdateInfoExtractionRuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInfoExtractionRule not implemented")
}
func (UnimplementedWhatsnewServer) DeleteInfoExtractionRule(context.Context, *DeleteInfoExtractionRuleRequest) (*DeleteInfoExtractionRuleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInfoExtractionRule not implemented")
}
func (UnimplementedWhatsnewServer) mustEmbedUnimplementedWhatsnewServer() {}

// UnsafeWhatsnewServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WhatsnewServer will
// result in compilation errors.
type UnsafeWhatsnewServer interface {
	mustEmbedUnimplementedWhatsnewServer()
}

func RegisterWhatsnewServer(s grpc.ServiceRegistrar, srv WhatsnewServer) {
	s.RegisterService(&Whatsnew_ServiceDesc, srv)
}

func _Whatsnew_GetFeeds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFeedsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).GetFeeds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/GetFeeds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).GetFeeds(ctx, req.(*GetFeedsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_CreateFeeds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFeedsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).CreateFeeds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/CreateFeeds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).CreateFeeds(ctx, req.(*CreateFeedsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_CreateFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).CreateFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/CreateFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).CreateFeed(ctx, req.(*CreateFeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_GetFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).GetFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/GetFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).GetFeed(ctx, req.(*GetFeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_UpdateFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).UpdateFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/UpdateFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).UpdateFeed(ctx, req.(*UpdateFeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_DeleteFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).DeleteFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/DeleteFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).DeleteFeed(ctx, req.(*DeleteFeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_GetUserTwitterSources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserTwitterSourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).GetUserTwitterSources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/GetUserTwitterSources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).GetUserTwitterSources(ctx, req.(*GetUserTwitterSourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_CreateUserTwitterSources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserTwitterSourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).CreateUserTwitterSources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/CreateUserTwitterSources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).CreateUserTwitterSources(ctx, req.(*CreateUserTwitterSourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_CreateUserTwitterSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserTwitterSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).CreateUserTwitterSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/CreateUserTwitterSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).CreateUserTwitterSource(ctx, req.(*CreateUserTwitterSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_GetUserTwitterSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserTwitterSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).GetUserTwitterSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/GetUserTwitterSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).GetUserTwitterSource(ctx, req.(*GetUserTwitterSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_UpdateUserTwitterSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserTwitterSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).UpdateUserTwitterSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/UpdateUserTwitterSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).UpdateUserTwitterSource(ctx, req.(*UpdateUserTwitterSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_DeleteUserTwitterSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserTwitterSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).DeleteUserTwitterSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/DeleteUserTwitterSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).DeleteUserTwitterSource(ctx, req.(*DeleteUserTwitterSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_GetQueryTwitterSources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQueryTwitterSourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).GetQueryTwitterSources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/GetQueryTwitterSources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).GetQueryTwitterSources(ctx, req.(*GetQueryTwitterSourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_CreateQueryTwitterSources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateQueryTwitterSourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).CreateQueryTwitterSources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/CreateQueryTwitterSources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).CreateQueryTwitterSources(ctx, req.(*CreateQueryTwitterSourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_CreateQueryTwitterSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateQueryTwitterSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).CreateQueryTwitterSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/CreateQueryTwitterSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).CreateQueryTwitterSource(ctx, req.(*CreateQueryTwitterSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_GetQueryTwitterSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQueryTwitterSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).GetQueryTwitterSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/GetQueryTwitterSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).GetQueryTwitterSource(ctx, req.(*GetQueryTwitterSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_UpdateQueryTwitterSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateQueryTwitterSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).UpdateQueryTwitterSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/UpdateQueryTwitterSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).UpdateQueryTwitterSource(ctx, req.(*UpdateQueryTwitterSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_DeleteQueryTwitterSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteQueryTwitterSourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).DeleteQueryTwitterSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/DeleteQueryTwitterSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).DeleteQueryTwitterSource(ctx, req.(*DeleteQueryTwitterSourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_GetZeroShotHypothesisTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetZeroShotHypothesisTemplatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).GetZeroShotHypothesisTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/GetZeroShotHypothesisTemplates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).GetZeroShotHypothesisTemplates(ctx, req.(*GetZeroShotHypothesisTemplatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_CreateZeroShotHypothesisTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateZeroShotHypothesisTemplatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).CreateZeroShotHypothesisTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/CreateZeroShotHypothesisTemplates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).CreateZeroShotHypothesisTemplates(ctx, req.(*CreateZeroShotHypothesisTemplatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_CreateZeroShotHypothesisTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateZeroShotHypothesisTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).CreateZeroShotHypothesisTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/CreateZeroShotHypothesisTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).CreateZeroShotHypothesisTemplate(ctx, req.(*CreateZeroShotHypothesisTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_GetZeroShotHypothesisTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetZeroShotHypothesisTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).GetZeroShotHypothesisTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/GetZeroShotHypothesisTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).GetZeroShotHypothesisTemplate(ctx, req.(*GetZeroShotHypothesisTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_UpdateZeroShotHypothesisTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateZeroShotHypothesisTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).UpdateZeroShotHypothesisTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/UpdateZeroShotHypothesisTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).UpdateZeroShotHypothesisTemplate(ctx, req.(*UpdateZeroShotHypothesisTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_DeleteZeroShotHypothesisTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteZeroShotHypothesisTemplateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).DeleteZeroShotHypothesisTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/DeleteZeroShotHypothesisTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).DeleteZeroShotHypothesisTemplate(ctx, req.(*DeleteZeroShotHypothesisTemplateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_CreateZeroShotHypothesisLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateZeroShotHypothesisLabelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).CreateZeroShotHypothesisLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/CreateZeroShotHypothesisLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).CreateZeroShotHypothesisLabels(ctx, req.(*CreateZeroShotHypothesisLabelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_CreateZeroShotHypothesisLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateZeroShotHypothesisLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).CreateZeroShotHypothesisLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/CreateZeroShotHypothesisLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).CreateZeroShotHypothesisLabel(ctx, req.(*CreateZeroShotHypothesisLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_GetZeroShotHypothesisLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetZeroShotHypothesisLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).GetZeroShotHypothesisLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/GetZeroShotHypothesisLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).GetZeroShotHypothesisLabel(ctx, req.(*GetZeroShotHypothesisLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_UpdateZeroShotHypothesisLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateZeroShotHypothesisLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).UpdateZeroShotHypothesisLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/UpdateZeroShotHypothesisLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).UpdateZeroShotHypothesisLabel(ctx, req.(*UpdateZeroShotHypothesisLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_DeleteZeroShotHypothesisLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteZeroShotHypothesisLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).DeleteZeroShotHypothesisLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/DeleteZeroShotHypothesisLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).DeleteZeroShotHypothesisLabel(ctx, req.(*DeleteZeroShotHypothesisLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_GetInfoExtractionRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoExtractionRulesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).GetInfoExtractionRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/GetInfoExtractionRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).GetInfoExtractionRules(ctx, req.(*GetInfoExtractionRulesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_CreateInfoExtractionRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInfoExtractionRulesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).CreateInfoExtractionRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/CreateInfoExtractionRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).CreateInfoExtractionRules(ctx, req.(*CreateInfoExtractionRulesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_CreateInfoExtractionRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInfoExtractionRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).CreateInfoExtractionRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/CreateInfoExtractionRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).CreateInfoExtractionRule(ctx, req.(*CreateInfoExtractionRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_GetInfoExtractionRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoExtractionRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).GetInfoExtractionRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/GetInfoExtractionRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).GetInfoExtractionRule(ctx, req.(*GetInfoExtractionRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_UpdateInfoExtractionRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInfoExtractionRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).UpdateInfoExtractionRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/UpdateInfoExtractionRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).UpdateInfoExtractionRule(ctx, req.(*UpdateInfoExtractionRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whatsnew_DeleteInfoExtractionRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInfoExtractionRuleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhatsnewServer).DeleteInfoExtractionRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whatsnew.Whatsnew/DeleteInfoExtractionRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhatsnewServer).DeleteInfoExtractionRule(ctx, req.(*DeleteInfoExtractionRuleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Whatsnew_ServiceDesc is the grpc.ServiceDesc for Whatsnew service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Whatsnew_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "whatsnew.Whatsnew",
	HandlerType: (*WhatsnewServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFeeds",
			Handler:    _Whatsnew_GetFeeds_Handler,
		},
		{
			MethodName: "CreateFeeds",
			Handler:    _Whatsnew_CreateFeeds_Handler,
		},
		{
			MethodName: "CreateFeed",
			Handler:    _Whatsnew_CreateFeed_Handler,
		},
		{
			MethodName: "GetFeed",
			Handler:    _Whatsnew_GetFeed_Handler,
		},
		{
			MethodName: "UpdateFeed",
			Handler:    _Whatsnew_UpdateFeed_Handler,
		},
		{
			MethodName: "DeleteFeed",
			Handler:    _Whatsnew_DeleteFeed_Handler,
		},
		{
			MethodName: "GetUserTwitterSources",
			Handler:    _Whatsnew_GetUserTwitterSources_Handler,
		},
		{
			MethodName: "CreateUserTwitterSources",
			Handler:    _Whatsnew_CreateUserTwitterSources_Handler,
		},
		{
			MethodName: "CreateUserTwitterSource",
			Handler:    _Whatsnew_CreateUserTwitterSource_Handler,
		},
		{
			MethodName: "GetUserTwitterSource",
			Handler:    _Whatsnew_GetUserTwitterSource_Handler,
		},
		{
			MethodName: "UpdateUserTwitterSource",
			Handler:    _Whatsnew_UpdateUserTwitterSource_Handler,
		},
		{
			MethodName: "DeleteUserTwitterSource",
			Handler:    _Whatsnew_DeleteUserTwitterSource_Handler,
		},
		{
			MethodName: "GetQueryTwitterSources",
			Handler:    _Whatsnew_GetQueryTwitterSources_Handler,
		},
		{
			MethodName: "CreateQueryTwitterSources",
			Handler:    _Whatsnew_CreateQueryTwitterSources_Handler,
		},
		{
			MethodName: "CreateQueryTwitterSource",
			Handler:    _Whatsnew_CreateQueryTwitterSource_Handler,
		},
		{
			MethodName: "GetQueryTwitterSource",
			Handler:    _Whatsnew_GetQueryTwitterSource_Handler,
		},
		{
			MethodName: "UpdateQueryTwitterSource",
			Handler:    _Whatsnew_UpdateQueryTwitterSource_Handler,
		},
		{
			MethodName: "DeleteQueryTwitterSource",
			Handler:    _Whatsnew_DeleteQueryTwitterSource_Handler,
		},
		{
			MethodName: "GetZeroShotHypothesisTemplates",
			Handler:    _Whatsnew_GetZeroShotHypothesisTemplates_Handler,
		},
		{
			MethodName: "CreateZeroShotHypothesisTemplates",
			Handler:    _Whatsnew_CreateZeroShotHypothesisTemplates_Handler,
		},
		{
			MethodName: "CreateZeroShotHypothesisTemplate",
			Handler:    _Whatsnew_CreateZeroShotHypothesisTemplate_Handler,
		},
		{
			MethodName: "GetZeroShotHypothesisTemplate",
			Handler:    _Whatsnew_GetZeroShotHypothesisTemplate_Handler,
		},
		{
			MethodName: "UpdateZeroShotHypothesisTemplate",
			Handler:    _Whatsnew_UpdateZeroShotHypothesisTemplate_Handler,
		},
		{
			MethodName: "DeleteZeroShotHypothesisTemplate",
			Handler:    _Whatsnew_DeleteZeroShotHypothesisTemplate_Handler,
		},
		{
			MethodName: "CreateZeroShotHypothesisLabels",
			Handler:    _Whatsnew_CreateZeroShotHypothesisLabels_Handler,
		},
		{
			MethodName: "CreateZeroShotHypothesisLabel",
			Handler:    _Whatsnew_CreateZeroShotHypothesisLabel_Handler,
		},
		{
			MethodName: "GetZeroShotHypothesisLabel",
			Handler:    _Whatsnew_GetZeroShotHypothesisLabel_Handler,
		},
		{
			MethodName: "UpdateZeroShotHypothesisLabel",
			Handler:    _Whatsnew_UpdateZeroShotHypothesisLabel_Handler,
		},
		{
			MethodName: "DeleteZeroShotHypothesisLabel",
			Handler:    _Whatsnew_DeleteZeroShotHypothesisLabel_Handler,
		},
		{
			MethodName: "GetInfoExtractionRules",
			Handler:    _Whatsnew_GetInfoExtractionRules_Handler,
		},
		{
			MethodName: "CreateInfoExtractionRules",
			Handler:    _Whatsnew_CreateInfoExtractionRules_Handler,
		},
		{
			MethodName: "CreateInfoExtractionRule",
			Handler:    _Whatsnew_CreateInfoExtractionRule_Handler,
		},
		{
			MethodName: "GetInfoExtractionRule",
			Handler:    _Whatsnew_GetInfoExtractionRule_Handler,
		},
		{
			MethodName: "UpdateInfoExtractionRule",
			Handler:    _Whatsnew_UpdateInfoExtractionRule_Handler,
		},
		{
			MethodName: "DeleteInfoExtractionRule",
			Handler:    _Whatsnew_DeleteInfoExtractionRule_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "whatsnew.proto",
}
