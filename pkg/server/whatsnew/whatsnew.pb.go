// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: whatsnew.proto

package whatsnew

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResponseErrors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []*ResponseError `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
}

func (x *ResponseErrors) Reset() {
	*x = ResponseErrors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseErrors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseErrors) ProtoMessage() {}

func (x *ResponseErrors) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseErrors.ProtoReflect.Descriptor instead.
func (*ResponseErrors) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{0}
}

func (x *ResponseErrors) GetValue() []*ResponseError {
	if x != nil {
		return x.Value
	}
	return nil
}

type ResponseError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ResponseError) Reset() {
	*x = ResponseError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseError) ProtoMessage() {}

func (x *ResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseError.ProtoReflect.Descriptor instead.
func (*ResponseError) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type NewFeeds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feeds []*NewFeed `protobuf:"bytes,1,rep,name=feeds,proto3" json:"feeds,omitempty"`
}

func (x *NewFeeds) Reset() {
	*x = NewFeeds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewFeeds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewFeeds) ProtoMessage() {}

func (x *NewFeeds) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewFeeds.ProtoReflect.Descriptor instead.
func (*NewFeeds) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{2}
}

func (x *NewFeeds) GetFeeds() []*NewFeed {
	if x != nil {
		return x.Feeds
	}
	return nil
}

type NewFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *NewFeed) Reset() {
	*x = NewFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewFeed) ProtoMessage() {}

func (x *NewFeed) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewFeed.ProtoReflect.Descriptor instead.
func (*NewFeed) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{3}
}

func (x *NewFeed) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CreateFeedsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateFeedsData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors  `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CreateFeedsResponse) Reset() {
	*x = CreateFeedsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedsResponse) ProtoMessage() {}

func (x *CreateFeedsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedsResponse.ProtoReflect.Descriptor instead.
func (*CreateFeedsResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{4}
}

func (x *CreateFeedsResponse) GetData() *CreateFeedsData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateFeedsResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CreateFeedsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedIds []string `protobuf:"bytes,1,rep,name=feed_ids,json=feedIds,proto3" json:"feed_ids,omitempty"`
}

func (x *CreateFeedsData) Reset() {
	*x = CreateFeedsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedsData) ProtoMessage() {}

func (x *CreateFeedsData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedsData.ProtoReflect.Descriptor instead.
func (*CreateFeedsData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{5}
}

func (x *CreateFeedsData) GetFeedIds() []string {
	if x != nil {
		return x.FeedIds
	}
	return nil
}

type GetFeedsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *GetFeedsData   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetFeedsResponse) Reset() {
	*x = GetFeedsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeedsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedsResponse) ProtoMessage() {}

func (x *GetFeedsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedsResponse.ProtoReflect.Descriptor instead.
func (*GetFeedsResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{6}
}

func (x *GetFeedsResponse) GetData() *GetFeedsData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetFeedsResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetFeedsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feeds []*Feed `protobuf:"bytes,1,rep,name=feeds,proto3" json:"feeds,omitempty"`
}

func (x *GetFeedsData) Reset() {
	*x = GetFeedsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeedsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedsData) ProtoMessage() {}

func (x *GetFeedsData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedsData.ProtoReflect.Descriptor instead.
func (*GetFeedsData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{7}
}

func (x *GetFeedsData) GetFeeds() []*Feed {
	if x != nil {
		return x.Feeds
	}
	return nil
}

type CreateFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateFeedData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CreateFeedResponse) Reset() {
	*x = CreateFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedResponse) ProtoMessage() {}

func (x *CreateFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedResponse.ProtoReflect.Descriptor instead.
func (*CreateFeedResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{8}
}

func (x *CreateFeedResponse) GetData() *CreateFeedData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateFeedResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CreateFeedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedId string `protobuf:"bytes,1,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
}

func (x *CreateFeedData) Reset() {
	*x = CreateFeedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedData) ProtoMessage() {}

func (x *CreateFeedData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedData.ProtoReflect.Descriptor instead.
func (*CreateFeedData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{9}
}

func (x *CreateFeedData) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

type GetFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *GetFeedData    `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetFeedResponse) Reset() {
	*x = GetFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedResponse) ProtoMessage() {}

func (x *GetFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedResponse.ProtoReflect.Descriptor instead.
func (*GetFeedResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{10}
}

func (x *GetFeedResponse) GetData() *GetFeedData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetFeedResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetFeedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feed *Feed `protobuf:"bytes,1,opt,name=feed,proto3" json:"feed,omitempty"`
}

func (x *GetFeedData) Reset() {
	*x = GetFeedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedData) ProtoMessage() {}

func (x *GetFeedData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedData.ProtoReflect.Descriptor instead.
func (*GetFeedData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{11}
}

func (x *GetFeedData) GetFeed() *Feed {
	if x != nil {
		return x.Feed
	}
	return nil
}

type UpdatedFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url             string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Enabled         bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	LastRetrievedAt string `protobuf:"bytes,3,opt,name=last_retrieved_at,json=lastRetrievedAt,proto3" json:"last_retrieved_at,omitempty"`
	FailuresCount   int64  `protobuf:"varint,4,opt,name=failures_count,json=failuresCount,proto3" json:"failures_count,omitempty"`
	LastError       string `protobuf:"bytes,5,opt,name=last_error,json=lastError,proto3" json:"last_error,omitempty"`
}

func (x *UpdatedFeed) Reset() {
	*x = UpdatedFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedFeed) ProtoMessage() {}

func (x *UpdatedFeed) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedFeed.ProtoReflect.Descriptor instead.
func (*UpdatedFeed) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{12}
}

func (x *UpdatedFeed) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdatedFeed) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdatedFeed) GetLastRetrievedAt() string {
	if x != nil {
		return x.LastRetrievedAt
	}
	return ""
}

func (x *UpdatedFeed) GetFailuresCount() int64 {
	if x != nil {
		return x.FailuresCount
	}
	return 0
}

func (x *UpdatedFeed) GetLastError() string {
	if x != nil {
		return x.LastError
	}
	return ""
}

type UpdateFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *UpdateFeedData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *UpdateFeedResponse) Reset() {
	*x = UpdateFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeedResponse) ProtoMessage() {}

func (x *UpdateFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeedResponse.ProtoReflect.Descriptor instead.
func (*UpdateFeedResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateFeedResponse) GetData() *UpdateFeedData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateFeedResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type UpdateFeedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feed *Feed `protobuf:"bytes,1,opt,name=feed,proto3" json:"feed,omitempty"`
}

func (x *UpdateFeedData) Reset() {
	*x = UpdateFeedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeedData) ProtoMessage() {}

func (x *UpdateFeedData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeedData.ProtoReflect.Descriptor instead.
func (*UpdateFeedData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateFeedData) GetFeed() *Feed {
	if x != nil {
		return x.Feed
	}
	return nil
}

type DeleteFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *DeleteFeedData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *DeleteFeedResponse) Reset() {
	*x = DeleteFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedResponse) ProtoMessage() {}

func (x *DeleteFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedResponse.ProtoReflect.Descriptor instead.
func (*DeleteFeedResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteFeedResponse) GetData() *DeleteFeedData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DeleteFeedResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type DeleteFeedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedFeedId string `protobuf:"bytes,1,opt,name=deleted_feed_id,json=deletedFeedId,proto3" json:"deleted_feed_id,omitempty"`
}

func (x *DeleteFeedData) Reset() {
	*x = DeleteFeedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedData) ProtoMessage() {}

func (x *DeleteFeedData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedData.ProtoReflect.Descriptor instead.
func (*DeleteFeedData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteFeedData) GetDeletedFeedId() string {
	if x != nil {
		return x.DeletedFeedId
	}
	return ""
}

type GetUserTwitterSourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *GetUserTwitterSourcesData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors            `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetUserTwitterSourcesResponse) Reset() {
	*x = GetUserTwitterSourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTwitterSourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTwitterSourcesResponse) ProtoMessage() {}

func (x *GetUserTwitterSourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTwitterSourcesResponse.ProtoReflect.Descriptor instead.
func (*GetUserTwitterSourcesResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserTwitterSourcesResponse) GetData() *GetUserTwitterSourcesData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetUserTwitterSourcesResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetUserTwitterSourcesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTwitterSources []*UserTwitterSource `protobuf:"bytes,1,rep,name=user_twitter_sources,json=userTwitterSources,proto3" json:"user_twitter_sources,omitempty"`
}

func (x *GetUserTwitterSourcesData) Reset() {
	*x = GetUserTwitterSourcesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTwitterSourcesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTwitterSourcesData) ProtoMessage() {}

func (x *GetUserTwitterSourcesData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTwitterSourcesData.ProtoReflect.Descriptor instead.
func (*GetUserTwitterSourcesData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserTwitterSourcesData) GetUserTwitterSources() []*UserTwitterSource {
	if x != nil {
		return x.UserTwitterSources
	}
	return nil
}

type NewUserTwitterSources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTwitterSources []*NewUserTwitterSource `protobuf:"bytes,1,rep,name=user_twitter_sources,json=userTwitterSources,proto3" json:"user_twitter_sources,omitempty"`
}

func (x *NewUserTwitterSources) Reset() {
	*x = NewUserTwitterSources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewUserTwitterSources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewUserTwitterSources) ProtoMessage() {}

func (x *NewUserTwitterSources) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewUserTwitterSources.ProtoReflect.Descriptor instead.
func (*NewUserTwitterSources) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{19}
}

func (x *NewUserTwitterSources) GetUserTwitterSources() []*NewUserTwitterSource {
	if x != nil {
		return x.UserTwitterSources
	}
	return nil
}

type CreateUserTwitterSourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateUserTwitterSourcesData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors               `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CreateUserTwitterSourcesResponse) Reset() {
	*x = CreateUserTwitterSourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserTwitterSourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserTwitterSourcesResponse) ProtoMessage() {}

func (x *CreateUserTwitterSourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserTwitterSourcesResponse.ProtoReflect.Descriptor instead.
func (*CreateUserTwitterSourcesResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{20}
}

func (x *CreateUserTwitterSourcesResponse) GetData() *CreateUserTwitterSourcesData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateUserTwitterSourcesResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CreateUserTwitterSourcesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTwitterSourceIds []string `protobuf:"bytes,1,rep,name=user_twitter_source_ids,json=userTwitterSourceIds,proto3" json:"user_twitter_source_ids,omitempty"`
}

func (x *CreateUserTwitterSourcesData) Reset() {
	*x = CreateUserTwitterSourcesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserTwitterSourcesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserTwitterSourcesData) ProtoMessage() {}

func (x *CreateUserTwitterSourcesData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserTwitterSourcesData.ProtoReflect.Descriptor instead.
func (*CreateUserTwitterSourcesData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{21}
}

func (x *CreateUserTwitterSourcesData) GetUserTwitterSourceIds() []string {
	if x != nil {
		return x.UserTwitterSourceIds
	}
	return nil
}

type NewUserTwitterSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *NewUserTwitterSource) Reset() {
	*x = NewUserTwitterSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewUserTwitterSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewUserTwitterSource) ProtoMessage() {}

func (x *NewUserTwitterSource) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewUserTwitterSource.ProtoReflect.Descriptor instead.
func (*NewUserTwitterSource) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{22}
}

func (x *NewUserTwitterSource) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type CreateUserTwitterSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateUserTwitterSourceData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors              `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CreateUserTwitterSourceResponse) Reset() {
	*x = CreateUserTwitterSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserTwitterSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserTwitterSourceResponse) ProtoMessage() {}

func (x *CreateUserTwitterSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserTwitterSourceResponse.ProtoReflect.Descriptor instead.
func (*CreateUserTwitterSourceResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{23}
}

func (x *CreateUserTwitterSourceResponse) GetData() *CreateUserTwitterSourceData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateUserTwitterSourceResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CreateUserTwitterSourceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTwitterSourceId string `protobuf:"bytes,1,opt,name=user_twitter_source_id,json=userTwitterSourceId,proto3" json:"user_twitter_source_id,omitempty"`
}

func (x *CreateUserTwitterSourceData) Reset() {
	*x = CreateUserTwitterSourceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserTwitterSourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserTwitterSourceData) ProtoMessage() {}

func (x *CreateUserTwitterSourceData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserTwitterSourceData.ProtoReflect.Descriptor instead.
func (*CreateUserTwitterSourceData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{24}
}

func (x *CreateUserTwitterSourceData) GetUserTwitterSourceId() string {
	if x != nil {
		return x.UserTwitterSourceId
	}
	return ""
}

type GetUserTwitterSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *GetUserTwitterSourceData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors           `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetUserTwitterSourceResponse) Reset() {
	*x = GetUserTwitterSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTwitterSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTwitterSourceResponse) ProtoMessage() {}

func (x *GetUserTwitterSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTwitterSourceResponse.ProtoReflect.Descriptor instead.
func (*GetUserTwitterSourceResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{25}
}

func (x *GetUserTwitterSourceResponse) GetData() *GetUserTwitterSourceData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetUserTwitterSourceResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetUserTwitterSourceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTwitterSource *UserTwitterSource `protobuf:"bytes,1,opt,name=user_twitter_source,json=userTwitterSource,proto3" json:"user_twitter_source,omitempty"`
}

func (x *GetUserTwitterSourceData) Reset() {
	*x = GetUserTwitterSourceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTwitterSourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTwitterSourceData) ProtoMessage() {}

func (x *GetUserTwitterSourceData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTwitterSourceData.ProtoReflect.Descriptor instead.
func (*GetUserTwitterSourceData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{26}
}

func (x *GetUserTwitterSourceData) GetUserTwitterSource() *UserTwitterSource {
	if x != nil {
		return x.UserTwitterSource
	}
	return nil
}

type UpdatedUserTwitterSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username        string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Enabled         bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	LastRetrievedAt string `protobuf:"bytes,3,opt,name=last_retrieved_at,json=lastRetrievedAt,proto3" json:"last_retrieved_at,omitempty"`
	FailuresCount   int64  `protobuf:"varint,4,opt,name=failures_count,json=failuresCount,proto3" json:"failures_count,omitempty"`
	LastError       string `protobuf:"bytes,5,opt,name=last_error,json=lastError,proto3" json:"last_error,omitempty"`
}

func (x *UpdatedUserTwitterSource) Reset() {
	*x = UpdatedUserTwitterSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedUserTwitterSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedUserTwitterSource) ProtoMessage() {}

func (x *UpdatedUserTwitterSource) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedUserTwitterSource.ProtoReflect.Descriptor instead.
func (*UpdatedUserTwitterSource) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{27}
}

func (x *UpdatedUserTwitterSource) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdatedUserTwitterSource) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdatedUserTwitterSource) GetLastRetrievedAt() string {
	if x != nil {
		return x.LastRetrievedAt
	}
	return ""
}

func (x *UpdatedUserTwitterSource) GetFailuresCount() int64 {
	if x != nil {
		return x.FailuresCount
	}
	return 0
}

func (x *UpdatedUserTwitterSource) GetLastError() string {
	if x != nil {
		return x.LastError
	}
	return ""
}

type UpdateUserTwitterSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *UpdateUserTwitterSourceData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors              `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *UpdateUserTwitterSourceResponse) Reset() {
	*x = UpdateUserTwitterSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserTwitterSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserTwitterSourceResponse) ProtoMessage() {}

func (x *UpdateUserTwitterSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserTwitterSourceResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserTwitterSourceResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateUserTwitterSourceResponse) GetData() *UpdateUserTwitterSourceData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateUserTwitterSourceResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type UpdateUserTwitterSourceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserTwitterSource *UserTwitterSource `protobuf:"bytes,1,opt,name=user_twitter_source,json=userTwitterSource,proto3" json:"user_twitter_source,omitempty"`
}

func (x *UpdateUserTwitterSourceData) Reset() {
	*x = UpdateUserTwitterSourceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserTwitterSourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserTwitterSourceData) ProtoMessage() {}

func (x *UpdateUserTwitterSourceData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserTwitterSourceData.ProtoReflect.Descriptor instead.
func (*UpdateUserTwitterSourceData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateUserTwitterSourceData) GetUserTwitterSource() *UserTwitterSource {
	if x != nil {
		return x.UserTwitterSource
	}
	return nil
}

type DeleteUserTwitterSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *DeleteUserTwitterSourceData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors              `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *DeleteUserTwitterSourceResponse) Reset() {
	*x = DeleteUserTwitterSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserTwitterSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserTwitterSourceResponse) ProtoMessage() {}

func (x *DeleteUserTwitterSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserTwitterSourceResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserTwitterSourceResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteUserTwitterSourceResponse) GetData() *DeleteUserTwitterSourceData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DeleteUserTwitterSourceResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type DeleteUserTwitterSourceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedUserTwitterSourceId string `protobuf:"bytes,1,opt,name=deleted_user_twitter_source_id,json=deletedUserTwitterSourceId,proto3" json:"deleted_user_twitter_source_id,omitempty"`
}

func (x *DeleteUserTwitterSourceData) Reset() {
	*x = DeleteUserTwitterSourceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserTwitterSourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserTwitterSourceData) ProtoMessage() {}

func (x *DeleteUserTwitterSourceData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserTwitterSourceData.ProtoReflect.Descriptor instead.
func (*DeleteUserTwitterSourceData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteUserTwitterSourceData) GetDeletedUserTwitterSourceId() string {
	if x != nil {
		return x.DeletedUserTwitterSourceId
	}
	return ""
}

type GetQueryTwitterSourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *GetQueryTwitterSourcesData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors             `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetQueryTwitterSourcesResponse) Reset() {
	*x = GetQueryTwitterSourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryTwitterSourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryTwitterSourcesResponse) ProtoMessage() {}

func (x *GetQueryTwitterSourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryTwitterSourcesResponse.ProtoReflect.Descriptor instead.
func (*GetQueryTwitterSourcesResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{32}
}

func (x *GetQueryTwitterSourcesResponse) GetData() *GetQueryTwitterSourcesData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetQueryTwitterSourcesResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetQueryTwitterSourcesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTwitterSources []*QueryTwitterSource `protobuf:"bytes,1,rep,name=query_twitter_sources,json=queryTwitterSources,proto3" json:"query_twitter_sources,omitempty"`
}

func (x *GetQueryTwitterSourcesData) Reset() {
	*x = GetQueryTwitterSourcesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryTwitterSourcesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryTwitterSourcesData) ProtoMessage() {}

func (x *GetQueryTwitterSourcesData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryTwitterSourcesData.ProtoReflect.Descriptor instead.
func (*GetQueryTwitterSourcesData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{33}
}

func (x *GetQueryTwitterSourcesData) GetQueryTwitterSources() []*QueryTwitterSource {
	if x != nil {
		return x.QueryTwitterSources
	}
	return nil
}

type NewQueryTwitterSources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTwitterSources []*NewQueryTwitterSource `protobuf:"bytes,1,rep,name=query_twitter_sources,json=queryTwitterSources,proto3" json:"query_twitter_sources,omitempty"`
}

func (x *NewQueryTwitterSources) Reset() {
	*x = NewQueryTwitterSources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewQueryTwitterSources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewQueryTwitterSources) ProtoMessage() {}

func (x *NewQueryTwitterSources) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewQueryTwitterSources.ProtoReflect.Descriptor instead.
func (*NewQueryTwitterSources) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{34}
}

func (x *NewQueryTwitterSources) GetQueryTwitterSources() []*NewQueryTwitterSource {
	if x != nil {
		return x.QueryTwitterSources
	}
	return nil
}

type CreateQueryTwitterSourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateQueryTwitterSourcesData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors                `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CreateQueryTwitterSourcesResponse) Reset() {
	*x = CreateQueryTwitterSourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueryTwitterSourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueryTwitterSourcesResponse) ProtoMessage() {}

func (x *CreateQueryTwitterSourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueryTwitterSourcesResponse.ProtoReflect.Descriptor instead.
func (*CreateQueryTwitterSourcesResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{35}
}

func (x *CreateQueryTwitterSourcesResponse) GetData() *CreateQueryTwitterSourcesData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateQueryTwitterSourcesResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CreateQueryTwitterSourcesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTwitterSourceIds []string `protobuf:"bytes,1,rep,name=query_twitter_source_ids,json=queryTwitterSourceIds,proto3" json:"query_twitter_source_ids,omitempty"`
}

func (x *CreateQueryTwitterSourcesData) Reset() {
	*x = CreateQueryTwitterSourcesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueryTwitterSourcesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueryTwitterSourcesData) ProtoMessage() {}

func (x *CreateQueryTwitterSourcesData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueryTwitterSourcesData.ProtoReflect.Descriptor instead.
func (*CreateQueryTwitterSourcesData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{36}
}

func (x *CreateQueryTwitterSourcesData) GetQueryTwitterSourceIds() []string {
	if x != nil {
		return x.QueryTwitterSourceIds
	}
	return nil
}

type NewQueryTwitterSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *NewQueryTwitterSource) Reset() {
	*x = NewQueryTwitterSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewQueryTwitterSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewQueryTwitterSource) ProtoMessage() {}

func (x *NewQueryTwitterSource) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewQueryTwitterSource.ProtoReflect.Descriptor instead.
func (*NewQueryTwitterSource) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{37}
}

func (x *NewQueryTwitterSource) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type CreateQueryTwitterSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateQueryTwitterSourceData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors               `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CreateQueryTwitterSourceResponse) Reset() {
	*x = CreateQueryTwitterSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueryTwitterSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueryTwitterSourceResponse) ProtoMessage() {}

func (x *CreateQueryTwitterSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueryTwitterSourceResponse.ProtoReflect.Descriptor instead.
func (*CreateQueryTwitterSourceResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{38}
}

func (x *CreateQueryTwitterSourceResponse) GetData() *CreateQueryTwitterSourceData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateQueryTwitterSourceResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CreateQueryTwitterSourceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTwitterSourceId string `protobuf:"bytes,1,opt,name=query_twitter_source_id,json=queryTwitterSourceId,proto3" json:"query_twitter_source_id,omitempty"`
}

func (x *CreateQueryTwitterSourceData) Reset() {
	*x = CreateQueryTwitterSourceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueryTwitterSourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueryTwitterSourceData) ProtoMessage() {}

func (x *CreateQueryTwitterSourceData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueryTwitterSourceData.ProtoReflect.Descriptor instead.
func (*CreateQueryTwitterSourceData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{39}
}

func (x *CreateQueryTwitterSourceData) GetQueryTwitterSourceId() string {
	if x != nil {
		return x.QueryTwitterSourceId
	}
	return ""
}

type GetQueryTwitterSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *GetQueryTwitterSourceData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors            `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetQueryTwitterSourceResponse) Reset() {
	*x = GetQueryTwitterSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryTwitterSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryTwitterSourceResponse) ProtoMessage() {}

func (x *GetQueryTwitterSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryTwitterSourceResponse.ProtoReflect.Descriptor instead.
func (*GetQueryTwitterSourceResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{40}
}

func (x *GetQueryTwitterSourceResponse) GetData() *GetQueryTwitterSourceData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetQueryTwitterSourceResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetQueryTwitterSourceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTwitterSource *QueryTwitterSource `protobuf:"bytes,1,opt,name=query_twitter_source,json=queryTwitterSource,proto3" json:"query_twitter_source,omitempty"`
}

func (x *GetQueryTwitterSourceData) Reset() {
	*x = GetQueryTwitterSourceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryTwitterSourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryTwitterSourceData) ProtoMessage() {}

func (x *GetQueryTwitterSourceData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryTwitterSourceData.ProtoReflect.Descriptor instead.
func (*GetQueryTwitterSourceData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{41}
}

func (x *GetQueryTwitterSourceData) GetQueryTwitterSource() *QueryTwitterSource {
	if x != nil {
		return x.QueryTwitterSource
	}
	return nil
}

type UpdatedQueryTwitterSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query           string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Enabled         bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	LastRetrievedAt string `protobuf:"bytes,3,opt,name=last_retrieved_at,json=lastRetrievedAt,proto3" json:"last_retrieved_at,omitempty"`
	FailuresCount   int64  `protobuf:"varint,4,opt,name=failures_count,json=failuresCount,proto3" json:"failures_count,omitempty"`
	LastError       string `protobuf:"bytes,5,opt,name=last_error,json=lastError,proto3" json:"last_error,omitempty"`
}

func (x *UpdatedQueryTwitterSource) Reset() {
	*x = UpdatedQueryTwitterSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedQueryTwitterSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedQueryTwitterSource) ProtoMessage() {}

func (x *UpdatedQueryTwitterSource) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedQueryTwitterSource.ProtoReflect.Descriptor instead.
func (*UpdatedQueryTwitterSource) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{42}
}

func (x *UpdatedQueryTwitterSource) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *UpdatedQueryTwitterSource) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdatedQueryTwitterSource) GetLastRetrievedAt() string {
	if x != nil {
		return x.LastRetrievedAt
	}
	return ""
}

func (x *UpdatedQueryTwitterSource) GetFailuresCount() int64 {
	if x != nil {
		return x.FailuresCount
	}
	return 0
}

func (x *UpdatedQueryTwitterSource) GetLastError() string {
	if x != nil {
		return x.LastError
	}
	return ""
}

type UpdateQueryTwitterSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *UpdateQueryTwitterSourceData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors               `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *UpdateQueryTwitterSourceResponse) Reset() {
	*x = UpdateQueryTwitterSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQueryTwitterSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQueryTwitterSourceResponse) ProtoMessage() {}

func (x *UpdateQueryTwitterSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQueryTwitterSourceResponse.ProtoReflect.Descriptor instead.
func (*UpdateQueryTwitterSourceResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateQueryTwitterSourceResponse) GetData() *UpdateQueryTwitterSourceData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateQueryTwitterSourceResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type UpdateQueryTwitterSourceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryTwitterSource *QueryTwitterSource `protobuf:"bytes,1,opt,name=query_twitter_source,json=queryTwitterSource,proto3" json:"query_twitter_source,omitempty"`
}

func (x *UpdateQueryTwitterSourceData) Reset() {
	*x = UpdateQueryTwitterSourceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQueryTwitterSourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQueryTwitterSourceData) ProtoMessage() {}

func (x *UpdateQueryTwitterSourceData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQueryTwitterSourceData.ProtoReflect.Descriptor instead.
func (*UpdateQueryTwitterSourceData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateQueryTwitterSourceData) GetQueryTwitterSource() *QueryTwitterSource {
	if x != nil {
		return x.QueryTwitterSource
	}
	return nil
}

type DeleteQueryTwitterSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *DeleteQueryTwitterSourceData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors               `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *DeleteQueryTwitterSourceResponse) Reset() {
	*x = DeleteQueryTwitterSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQueryTwitterSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueryTwitterSourceResponse) ProtoMessage() {}

func (x *DeleteQueryTwitterSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueryTwitterSourceResponse.ProtoReflect.Descriptor instead.
func (*DeleteQueryTwitterSourceResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteQueryTwitterSourceResponse) GetData() *DeleteQueryTwitterSourceData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DeleteQueryTwitterSourceResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type DeleteQueryTwitterSourceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedQueryTwitterSourceId string `protobuf:"bytes,1,opt,name=deleted_query_twitter_source_id,json=deletedQueryTwitterSourceId,proto3" json:"deleted_query_twitter_source_id,omitempty"`
}

func (x *DeleteQueryTwitterSourceData) Reset() {
	*x = DeleteQueryTwitterSourceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQueryTwitterSourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueryTwitterSourceData) ProtoMessage() {}

func (x *DeleteQueryTwitterSourceData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueryTwitterSourceData.ProtoReflect.Descriptor instead.
func (*DeleteQueryTwitterSourceData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{46}
}

func (x *DeleteQueryTwitterSourceData) GetDeletedQueryTwitterSourceId() string {
	if x != nil {
		return x.DeletedQueryTwitterSourceId
	}
	return ""
}

type GetZeroShotHypothesisTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *GetZeroShotHypothesisTemplatesData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors                     `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetZeroShotHypothesisTemplatesResponse) Reset() {
	*x = GetZeroShotHypothesisTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZeroShotHypothesisTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZeroShotHypothesisTemplatesResponse) ProtoMessage() {}

func (x *GetZeroShotHypothesisTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZeroShotHypothesisTemplatesResponse.ProtoReflect.Descriptor instead.
func (*GetZeroShotHypothesisTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{47}
}

func (x *GetZeroShotHypothesisTemplatesResponse) GetData() *GetZeroShotHypothesisTemplatesData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetZeroShotHypothesisTemplatesResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetZeroShotHypothesisTemplatesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZeroShotHypothesisTemplates []*ZeroShotHypothesisTemplate `protobuf:"bytes,1,rep,name=zero_shot_hypothesis_templates,json=zeroShotHypothesisTemplates,proto3" json:"zero_shot_hypothesis_templates,omitempty"`
}

func (x *GetZeroShotHypothesisTemplatesData) Reset() {
	*x = GetZeroShotHypothesisTemplatesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZeroShotHypothesisTemplatesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZeroShotHypothesisTemplatesData) ProtoMessage() {}

func (x *GetZeroShotHypothesisTemplatesData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZeroShotHypothesisTemplatesData.ProtoReflect.Descriptor instead.
func (*GetZeroShotHypothesisTemplatesData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{48}
}

func (x *GetZeroShotHypothesisTemplatesData) GetZeroShotHypothesisTemplates() []*ZeroShotHypothesisTemplate {
	if x != nil {
		return x.ZeroShotHypothesisTemplates
	}
	return nil
}

type NewZeroShotHypothesisTemplates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZeroShotHypothesisTemplates []*NewZeroShotHypothesisTemplate `protobuf:"bytes,1,rep,name=zero_shot_hypothesis_templates,json=zeroShotHypothesisTemplates,proto3" json:"zero_shot_hypothesis_templates,omitempty"`
}

func (x *NewZeroShotHypothesisTemplates) Reset() {
	*x = NewZeroShotHypothesisTemplates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewZeroShotHypothesisTemplates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewZeroShotHypothesisTemplates) ProtoMessage() {}

func (x *NewZeroShotHypothesisTemplates) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewZeroShotHypothesisTemplates.ProtoReflect.Descriptor instead.
func (*NewZeroShotHypothesisTemplates) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{49}
}

func (x *NewZeroShotHypothesisTemplates) GetZeroShotHypothesisTemplates() []*NewZeroShotHypothesisTemplate {
	if x != nil {
		return x.ZeroShotHypothesisTemplates
	}
	return nil
}

type NewZeroShotHypothesisTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled    bool                                  `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Text       string                                `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	MultiClass bool                                  `protobuf:"varint,3,opt,name=multi_class,json=multiClass,proto3" json:"multi_class,omitempty"`
	Labels     []*NewZeroShotHypothesisTemplateLabel `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *NewZeroShotHypothesisTemplate) Reset() {
	*x = NewZeroShotHypothesisTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewZeroShotHypothesisTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewZeroShotHypothesisTemplate) ProtoMessage() {}

func (x *NewZeroShotHypothesisTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewZeroShotHypothesisTemplate.ProtoReflect.Descriptor instead.
func (*NewZeroShotHypothesisTemplate) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{50}
}

func (x *NewZeroShotHypothesisTemplate) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *NewZeroShotHypothesisTemplate) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *NewZeroShotHypothesisTemplate) GetMultiClass() bool {
	if x != nil {
		return x.MultiClass
	}
	return false
}

func (x *NewZeroShotHypothesisTemplate) GetLabels() []*NewZeroShotHypothesisTemplateLabel {
	if x != nil {
		return x.Labels
	}
	return nil
}

type NewZeroShotHypothesisTemplateLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Text    string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *NewZeroShotHypothesisTemplateLabel) Reset() {
	*x = NewZeroShotHypothesisTemplateLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewZeroShotHypothesisTemplateLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewZeroShotHypothesisTemplateLabel) ProtoMessage() {}

func (x *NewZeroShotHypothesisTemplateLabel) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewZeroShotHypothesisTemplateLabel.ProtoReflect.Descriptor instead.
func (*NewZeroShotHypothesisTemplateLabel) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{51}
}

func (x *NewZeroShotHypothesisTemplateLabel) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *NewZeroShotHypothesisTemplateLabel) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CreateZeroShotHypothesisTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateZeroShotHypothesisTemplatesData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors                        `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CreateZeroShotHypothesisTemplatesResponse) Reset() {
	*x = CreateZeroShotHypothesisTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateZeroShotHypothesisTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateZeroShotHypothesisTemplatesResponse) ProtoMessage() {}

func (x *CreateZeroShotHypothesisTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateZeroShotHypothesisTemplatesResponse.ProtoReflect.Descriptor instead.
func (*CreateZeroShotHypothesisTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{52}
}

func (x *CreateZeroShotHypothesisTemplatesResponse) GetData() *CreateZeroShotHypothesisTemplatesData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateZeroShotHypothesisTemplatesResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CreateZeroShotHypothesisTemplatesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZeroShotHypothesisTemplateIds []string `protobuf:"bytes,1,rep,name=zero_shot_hypothesis_template_ids,json=zeroShotHypothesisTemplateIds,proto3" json:"zero_shot_hypothesis_template_ids,omitempty"`
}

func (x *CreateZeroShotHypothesisTemplatesData) Reset() {
	*x = CreateZeroShotHypothesisTemplatesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateZeroShotHypothesisTemplatesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateZeroShotHypothesisTemplatesData) ProtoMessage() {}

func (x *CreateZeroShotHypothesisTemplatesData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateZeroShotHypothesisTemplatesData.ProtoReflect.Descriptor instead.
func (*CreateZeroShotHypothesisTemplatesData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{53}
}

func (x *CreateZeroShotHypothesisTemplatesData) GetZeroShotHypothesisTemplateIds() []string {
	if x != nil {
		return x.ZeroShotHypothesisTemplateIds
	}
	return nil
}

type CreateZeroShotHypothesisTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateZeroShotHypothesisTemplateData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors                       `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CreateZeroShotHypothesisTemplateResponse) Reset() {
	*x = CreateZeroShotHypothesisTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateZeroShotHypothesisTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateZeroShotHypothesisTemplateResponse) ProtoMessage() {}

func (x *CreateZeroShotHypothesisTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateZeroShotHypothesisTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateZeroShotHypothesisTemplateResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{54}
}

func (x *CreateZeroShotHypothesisTemplateResponse) GetData() *CreateZeroShotHypothesisTemplateData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateZeroShotHypothesisTemplateResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CreateZeroShotHypothesisTemplateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZeroShotHypothesisTemplateId string `protobuf:"bytes,1,opt,name=zero_shot_hypothesis_template_id,json=zeroShotHypothesisTemplateId,proto3" json:"zero_shot_hypothesis_template_id,omitempty"`
}

func (x *CreateZeroShotHypothesisTemplateData) Reset() {
	*x = CreateZeroShotHypothesisTemplateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateZeroShotHypothesisTemplateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateZeroShotHypothesisTemplateData) ProtoMessage() {}

func (x *CreateZeroShotHypothesisTemplateData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateZeroShotHypothesisTemplateData.ProtoReflect.Descriptor instead.
func (*CreateZeroShotHypothesisTemplateData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{55}
}

func (x *CreateZeroShotHypothesisTemplateData) GetZeroShotHypothesisTemplateId() string {
	if x != nil {
		return x.ZeroShotHypothesisTemplateId
	}
	return ""
}

type GetZeroShotHypothesisTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *GetZeroShotHypothesisTemplateData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors                    `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetZeroShotHypothesisTemplateResponse) Reset() {
	*x = GetZeroShotHypothesisTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZeroShotHypothesisTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZeroShotHypothesisTemplateResponse) ProtoMessage() {}

func (x *GetZeroShotHypothesisTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZeroShotHypothesisTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetZeroShotHypothesisTemplateResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{56}
}

func (x *GetZeroShotHypothesisTemplateResponse) GetData() *GetZeroShotHypothesisTemplateData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetZeroShotHypothesisTemplateResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetZeroShotHypothesisTemplateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZeroShotHypothesisTemplate *ZeroShotHypothesisTemplate `protobuf:"bytes,1,opt,name=zero_shot_hypothesis_template,json=zeroShotHypothesisTemplate,proto3" json:"zero_shot_hypothesis_template,omitempty"`
}

func (x *GetZeroShotHypothesisTemplateData) Reset() {
	*x = GetZeroShotHypothesisTemplateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZeroShotHypothesisTemplateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZeroShotHypothesisTemplateData) ProtoMessage() {}

func (x *GetZeroShotHypothesisTemplateData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZeroShotHypothesisTemplateData.ProtoReflect.Descriptor instead.
func (*GetZeroShotHypothesisTemplateData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{57}
}

func (x *GetZeroShotHypothesisTemplateData) GetZeroShotHypothesisTemplate() *ZeroShotHypothesisTemplate {
	if x != nil {
		return x.ZeroShotHypothesisTemplate
	}
	return nil
}

type UpdatedZeroShotHypothesisTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled    bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Text       string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	MultiClass bool   `protobuf:"varint,3,opt,name=multi_class,json=multiClass,proto3" json:"multi_class,omitempty"`
}

func (x *UpdatedZeroShotHypothesisTemplate) Reset() {
	*x = UpdatedZeroShotHypothesisTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedZeroShotHypothesisTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedZeroShotHypothesisTemplate) ProtoMessage() {}

func (x *UpdatedZeroShotHypothesisTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedZeroShotHypothesisTemplate.ProtoReflect.Descriptor instead.
func (*UpdatedZeroShotHypothesisTemplate) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{58}
}

func (x *UpdatedZeroShotHypothesisTemplate) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdatedZeroShotHypothesisTemplate) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *UpdatedZeroShotHypothesisTemplate) GetMultiClass() bool {
	if x != nil {
		return x.MultiClass
	}
	return false
}

type UpdateZeroShotHypothesisTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *UpdateZeroShotHypothesisTemplateData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors                       `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *UpdateZeroShotHypothesisTemplateResponse) Reset() {
	*x = UpdateZeroShotHypothesisTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateZeroShotHypothesisTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateZeroShotHypothesisTemplateResponse) ProtoMessage() {}

func (x *UpdateZeroShotHypothesisTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateZeroShotHypothesisTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateZeroShotHypothesisTemplateResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{59}
}

func (x *UpdateZeroShotHypothesisTemplateResponse) GetData() *UpdateZeroShotHypothesisTemplateData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateZeroShotHypothesisTemplateResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type UpdateZeroShotHypothesisTemplateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZeroShotHypothesisTemplate *ZeroShotHypothesisTemplate `protobuf:"bytes,1,opt,name=zero_shot_hypothesis_template,json=zeroShotHypothesisTemplate,proto3" json:"zero_shot_hypothesis_template,omitempty"`
}

func (x *UpdateZeroShotHypothesisTemplateData) Reset() {
	*x = UpdateZeroShotHypothesisTemplateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateZeroShotHypothesisTemplateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateZeroShotHypothesisTemplateData) ProtoMessage() {}

func (x *UpdateZeroShotHypothesisTemplateData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateZeroShotHypothesisTemplateData.ProtoReflect.Descriptor instead.
func (*UpdateZeroShotHypothesisTemplateData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{60}
}

func (x *UpdateZeroShotHypothesisTemplateData) GetZeroShotHypothesisTemplate() *ZeroShotHypothesisTemplate {
	if x != nil {
		return x.ZeroShotHypothesisTemplate
	}
	return nil
}

type DeleteZeroShotHypothesisTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *DeleteZeroShotHypothesisTemplateData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors                       `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *DeleteZeroShotHypothesisTemplateResponse) Reset() {
	*x = DeleteZeroShotHypothesisTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteZeroShotHypothesisTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteZeroShotHypothesisTemplateResponse) ProtoMessage() {}

func (x *DeleteZeroShotHypothesisTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteZeroShotHypothesisTemplateResponse.ProtoReflect.Descriptor instead.
func (*DeleteZeroShotHypothesisTemplateResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{61}
}

func (x *DeleteZeroShotHypothesisTemplateResponse) GetData() *DeleteZeroShotHypothesisTemplateData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DeleteZeroShotHypothesisTemplateResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type DeleteZeroShotHypothesisTemplateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedZeroShotHypothesisTemplateId string `protobuf:"bytes,1,opt,name=deleted_zero_shot_hypothesis_template_id,json=deletedZeroShotHypothesisTemplateId,proto3" json:"deleted_zero_shot_hypothesis_template_id,omitempty"`
}

func (x *DeleteZeroShotHypothesisTemplateData) Reset() {
	*x = DeleteZeroShotHypothesisTemplateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteZeroShotHypothesisTemplateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteZeroShotHypothesisTemplateData) ProtoMessage() {}

func (x *DeleteZeroShotHypothesisTemplateData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteZeroShotHypothesisTemplateData.ProtoReflect.Descriptor instead.
func (*DeleteZeroShotHypothesisTemplateData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{62}
}

func (x *DeleteZeroShotHypothesisTemplateData) GetDeletedZeroShotHypothesisTemplateId() string {
	if x != nil {
		return x.DeletedZeroShotHypothesisTemplateId
	}
	return ""
}

type NewZeroShotHypothesisLabels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZeroShotHypothesisLabels []*NewZeroShotHypothesisLabel `protobuf:"bytes,1,rep,name=zero_shot_hypothesis_labels,json=zeroShotHypothesisLabels,proto3" json:"zero_shot_hypothesis_labels,omitempty"`
}

func (x *NewZeroShotHypothesisLabels) Reset() {
	*x = NewZeroShotHypothesisLabels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewZeroShotHypothesisLabels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewZeroShotHypothesisLabels) ProtoMessage() {}

func (x *NewZeroShotHypothesisLabels) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewZeroShotHypothesisLabels.ProtoReflect.Descriptor instead.
func (*NewZeroShotHypothesisLabels) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{63}
}

func (x *NewZeroShotHypothesisLabels) GetZeroShotHypothesisLabels() []*NewZeroShotHypothesisLabel {
	if x != nil {
		return x.ZeroShotHypothesisLabels
	}
	return nil
}

type NewZeroShotHypothesisLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Text    string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *NewZeroShotHypothesisLabel) Reset() {
	*x = NewZeroShotHypothesisLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewZeroShotHypothesisLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewZeroShotHypothesisLabel) ProtoMessage() {}

func (x *NewZeroShotHypothesisLabel) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewZeroShotHypothesisLabel.ProtoReflect.Descriptor instead.
func (*NewZeroShotHypothesisLabel) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{64}
}

func (x *NewZeroShotHypothesisLabel) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *NewZeroShotHypothesisLabel) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CreateZeroShotHypothesisLabelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateZeroShotHypothesisLabelsData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors                     `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CreateZeroShotHypothesisLabelsResponse) Reset() {
	*x = CreateZeroShotHypothesisLabelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateZeroShotHypothesisLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateZeroShotHypothesisLabelsResponse) ProtoMessage() {}

func (x *CreateZeroShotHypothesisLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateZeroShotHypothesisLabelsResponse.ProtoReflect.Descriptor instead.
func (*CreateZeroShotHypothesisLabelsResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{65}
}

func (x *CreateZeroShotHypothesisLabelsResponse) GetData() *CreateZeroShotHypothesisLabelsData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateZeroShotHypothesisLabelsResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CreateZeroShotHypothesisLabelsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZeroShotHypothesisLabelIds []string `protobuf:"bytes,1,rep,name=zero_shot_hypothesis_label_ids,json=zeroShotHypothesisLabelIds,proto3" json:"zero_shot_hypothesis_label_ids,omitempty"`
}

func (x *CreateZeroShotHypothesisLabelsData) Reset() {
	*x = CreateZeroShotHypothesisLabelsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateZeroShotHypothesisLabelsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateZeroShotHypothesisLabelsData) ProtoMessage() {}

func (x *CreateZeroShotHypothesisLabelsData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateZeroShotHypothesisLabelsData.ProtoReflect.Descriptor instead.
func (*CreateZeroShotHypothesisLabelsData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{66}
}

func (x *CreateZeroShotHypothesisLabelsData) GetZeroShotHypothesisLabelIds() []string {
	if x != nil {
		return x.ZeroShotHypothesisLabelIds
	}
	return nil
}

type CreateZeroShotHypothesisLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateZeroShotHypothesisLabelData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors                    `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CreateZeroShotHypothesisLabelResponse) Reset() {
	*x = CreateZeroShotHypothesisLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateZeroShotHypothesisLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateZeroShotHypothesisLabelResponse) ProtoMessage() {}

func (x *CreateZeroShotHypothesisLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateZeroShotHypothesisLabelResponse.ProtoReflect.Descriptor instead.
func (*CreateZeroShotHypothesisLabelResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{67}
}

func (x *CreateZeroShotHypothesisLabelResponse) GetData() *CreateZeroShotHypothesisLabelData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateZeroShotHypothesisLabelResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CreateZeroShotHypothesisLabelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZeroShotHypothesisLabelId string `protobuf:"bytes,1,opt,name=zero_shot_hypothesis_label_id,json=zeroShotHypothesisLabelId,proto3" json:"zero_shot_hypothesis_label_id,omitempty"`
}

func (x *CreateZeroShotHypothesisLabelData) Reset() {
	*x = CreateZeroShotHypothesisLabelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateZeroShotHypothesisLabelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateZeroShotHypothesisLabelData) ProtoMessage() {}

func (x *CreateZeroShotHypothesisLabelData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateZeroShotHypothesisLabelData.ProtoReflect.Descriptor instead.
func (*CreateZeroShotHypothesisLabelData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{68}
}

func (x *CreateZeroShotHypothesisLabelData) GetZeroShotHypothesisLabelId() string {
	if x != nil {
		return x.ZeroShotHypothesisLabelId
	}
	return ""
}

type GetZeroShotHypothesisLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *GetZeroShotHypothesisLabelData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors                 `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetZeroShotHypothesisLabelResponse) Reset() {
	*x = GetZeroShotHypothesisLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZeroShotHypothesisLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZeroShotHypothesisLabelResponse) ProtoMessage() {}

func (x *GetZeroShotHypothesisLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZeroShotHypothesisLabelResponse.ProtoReflect.Descriptor instead.
func (*GetZeroShotHypothesisLabelResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{69}
}

func (x *GetZeroShotHypothesisLabelResponse) GetData() *GetZeroShotHypothesisLabelData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetZeroShotHypothesisLabelResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetZeroShotHypothesisLabelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZeroShotHypothesisLabel *ZeroShotHypothesisLabel `protobuf:"bytes,1,opt,name=zero_shot_hypothesis_label,json=zeroShotHypothesisLabel,proto3" json:"zero_shot_hypothesis_label,omitempty"`
}

func (x *GetZeroShotHypothesisLabelData) Reset() {
	*x = GetZeroShotHypothesisLabelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZeroShotHypothesisLabelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZeroShotHypothesisLabelData) ProtoMessage() {}

func (x *GetZeroShotHypothesisLabelData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZeroShotHypothesisLabelData.ProtoReflect.Descriptor instead.
func (*GetZeroShotHypothesisLabelData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{70}
}

func (x *GetZeroShotHypothesisLabelData) GetZeroShotHypothesisLabel() *ZeroShotHypothesisLabel {
	if x != nil {
		return x.ZeroShotHypothesisLabel
	}
	return nil
}

type UpdatedZeroShotHypothesisLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Text    string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *UpdatedZeroShotHypothesisLabel) Reset() {
	*x = UpdatedZeroShotHypothesisLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedZeroShotHypothesisLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedZeroShotHypothesisLabel) ProtoMessage() {}

func (x *UpdatedZeroShotHypothesisLabel) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedZeroShotHypothesisLabel.ProtoReflect.Descriptor instead.
func (*UpdatedZeroShotHypothesisLabel) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{71}
}

func (x *UpdatedZeroShotHypothesisLabel) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdatedZeroShotHypothesisLabel) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type UpdateZeroShotHypothesisLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *UpdateZeroShotHypothesisLabelData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors                    `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *UpdateZeroShotHypothesisLabelResponse) Reset() {
	*x = UpdateZeroShotHypothesisLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateZeroShotHypothesisLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateZeroShotHypothesisLabelResponse) ProtoMessage() {}

func (x *UpdateZeroShotHypothesisLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateZeroShotHypothesisLabelResponse.ProtoReflect.Descriptor instead.
func (*UpdateZeroShotHypothesisLabelResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{72}
}

func (x *UpdateZeroShotHypothesisLabelResponse) GetData() *UpdateZeroShotHypothesisLabelData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateZeroShotHypothesisLabelResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type UpdateZeroShotHypothesisLabelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZeroShotHypothesisLabel *ZeroShotHypothesisLabel `protobuf:"bytes,1,opt,name=zero_shot_hypothesis_label,json=zeroShotHypothesisLabel,proto3" json:"zero_shot_hypothesis_label,omitempty"`
}

func (x *UpdateZeroShotHypothesisLabelData) Reset() {
	*x = UpdateZeroShotHypothesisLabelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateZeroShotHypothesisLabelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateZeroShotHypothesisLabelData) ProtoMessage() {}

func (x *UpdateZeroShotHypothesisLabelData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateZeroShotHypothesisLabelData.ProtoReflect.Descriptor instead.
func (*UpdateZeroShotHypothesisLabelData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{73}
}

func (x *UpdateZeroShotHypothesisLabelData) GetZeroShotHypothesisLabel() *ZeroShotHypothesisLabel {
	if x != nil {
		return x.ZeroShotHypothesisLabel
	}
	return nil
}

type DeleteZeroShotHypothesisLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *DeleteZeroShotHypothesisLabelData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors                    `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *DeleteZeroShotHypothesisLabelResponse) Reset() {
	*x = DeleteZeroShotHypothesisLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteZeroShotHypothesisLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteZeroShotHypothesisLabelResponse) ProtoMessage() {}

func (x *DeleteZeroShotHypothesisLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteZeroShotHypothesisLabelResponse.ProtoReflect.Descriptor instead.
func (*DeleteZeroShotHypothesisLabelResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{74}
}

func (x *DeleteZeroShotHypothesisLabelResponse) GetData() *DeleteZeroShotHypothesisLabelData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DeleteZeroShotHypothesisLabelResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type DeleteZeroShotHypothesisLabelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedZeroShotHypothesisLabelId string `protobuf:"bytes,1,opt,name=deleted_zero_shot_hypothesis_label_id,json=deletedZeroShotHypothesisLabelId,proto3" json:"deleted_zero_shot_hypothesis_label_id,omitempty"`
}

func (x *DeleteZeroShotHypothesisLabelData) Reset() {
	*x = DeleteZeroShotHypothesisLabelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteZeroShotHypothesisLabelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteZeroShotHypothesisLabelData) ProtoMessage() {}

func (x *DeleteZeroShotHypothesisLabelData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteZeroShotHypothesisLabelData.ProtoReflect.Descriptor instead.
func (*DeleteZeroShotHypothesisLabelData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{75}
}

func (x *DeleteZeroShotHypothesisLabelData) GetDeletedZeroShotHypothesisLabelId() string {
	if x != nil {
		return x.DeletedZeroShotHypothesisLabelId
	}
	return ""
}

type NewInfoExtractionRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoExtractionRules []*NewInfoExtractionRule `protobuf:"bytes,1,rep,name=info_extraction_rules,json=infoExtractionRules,proto3" json:"info_extraction_rules,omitempty"`
}

func (x *NewInfoExtractionRules) Reset() {
	*x = NewInfoExtractionRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewInfoExtractionRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewInfoExtractionRules) ProtoMessage() {}

func (x *NewInfoExtractionRules) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewInfoExtractionRules.ProtoReflect.Descriptor instead.
func (*NewInfoExtractionRules) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{76}
}

func (x *NewInfoExtractionRules) GetInfoExtractionRules() []*NewInfoExtractionRule {
	if x != nil {
		return x.InfoExtractionRules
	}
	return nil
}

type NewInfoExtractionRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label        string  `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Question     string  `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	AnswerRegexp string  `protobuf:"bytes,3,opt,name=answer_regexp,json=answerRegexp,proto3" json:"answer_regexp,omitempty"`
	Threshold    float32 `protobuf:"fixed32,4,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Enabled      bool    `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *NewInfoExtractionRule) Reset() {
	*x = NewInfoExtractionRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewInfoExtractionRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewInfoExtractionRule) ProtoMessage() {}

func (x *NewInfoExtractionRule) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewInfoExtractionRule.ProtoReflect.Descriptor instead.
func (*NewInfoExtractionRule) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{77}
}

func (x *NewInfoExtractionRule) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *NewInfoExtractionRule) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *NewInfoExtractionRule) GetAnswerRegexp() string {
	if x != nil {
		return x.AnswerRegexp
	}
	return ""
}

func (x *NewInfoExtractionRule) GetThreshold() float32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *NewInfoExtractionRule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type CreateInfoExtractionRulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateInfoExtractionRulesData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors                `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CreateInfoExtractionRulesResponse) Reset() {
	*x = CreateInfoExtractionRulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInfoExtractionRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInfoExtractionRulesResponse) ProtoMessage() {}

func (x *CreateInfoExtractionRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInfoExtractionRulesResponse.ProtoReflect.Descriptor instead.
func (*CreateInfoExtractionRulesResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{78}
}

func (x *CreateInfoExtractionRulesResponse) GetData() *CreateInfoExtractionRulesData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateInfoExtractionRulesResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CreateInfoExtractionRulesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoExtractionRuleIds []string `protobuf:"bytes,1,rep,name=info_extraction_rule_ids,json=infoExtractionRuleIds,proto3" json:"info_extraction_rule_ids,omitempty"`
}

func (x *CreateInfoExtractionRulesData) Reset() {
	*x = CreateInfoExtractionRulesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInfoExtractionRulesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInfoExtractionRulesData) ProtoMessage() {}

func (x *CreateInfoExtractionRulesData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInfoExtractionRulesData.ProtoReflect.Descriptor instead.
func (*CreateInfoExtractionRulesData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{79}
}

func (x *CreateInfoExtractionRulesData) GetInfoExtractionRuleIds() []string {
	if x != nil {
		return x.InfoExtractionRuleIds
	}
	return nil
}

type GetInfoExtractionRulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *GetInfoExtractionRulesData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors             `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetInfoExtractionRulesResponse) Reset() {
	*x = GetInfoExtractionRulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoExtractionRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoExtractionRulesResponse) ProtoMessage() {}

func (x *GetInfoExtractionRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoExtractionRulesResponse.ProtoReflect.Descriptor instead.
func (*GetInfoExtractionRulesResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{80}
}

func (x *GetInfoExtractionRulesResponse) GetData() *GetInfoExtractionRulesData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetInfoExtractionRulesResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetInfoExtractionRulesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoExtractionRules []*InfoExtractionRule `protobuf:"bytes,1,rep,name=info_extraction_rules,json=infoExtractionRules,proto3" json:"info_extraction_rules,omitempty"`
}

func (x *GetInfoExtractionRulesData) Reset() {
	*x = GetInfoExtractionRulesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoExtractionRulesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoExtractionRulesData) ProtoMessage() {}

func (x *GetInfoExtractionRulesData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoExtractionRulesData.ProtoReflect.Descriptor instead.
func (*GetInfoExtractionRulesData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{81}
}

func (x *GetInfoExtractionRulesData) GetInfoExtractionRules() []*InfoExtractionRule {
	if x != nil {
		return x.InfoExtractionRules
	}
	return nil
}

type CreateInfoExtractionRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *CreateInfoExtractionRuleData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors               `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CreateInfoExtractionRuleResponse) Reset() {
	*x = CreateInfoExtractionRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInfoExtractionRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInfoExtractionRuleResponse) ProtoMessage() {}

func (x *CreateInfoExtractionRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInfoExtractionRuleResponse.ProtoReflect.Descriptor instead.
func (*CreateInfoExtractionRuleResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{82}
}

func (x *CreateInfoExtractionRuleResponse) GetData() *CreateInfoExtractionRuleData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateInfoExtractionRuleResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CreateInfoExtractionRuleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoExtractionRuleId string `protobuf:"bytes,1,opt,name=info_extraction_rule_id,json=infoExtractionRuleId,proto3" json:"info_extraction_rule_id,omitempty"`
}

func (x *CreateInfoExtractionRuleData) Reset() {
	*x = CreateInfoExtractionRuleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInfoExtractionRuleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInfoExtractionRuleData) ProtoMessage() {}

func (x *CreateInfoExtractionRuleData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInfoExtractionRuleData.ProtoReflect.Descriptor instead.
func (*CreateInfoExtractionRuleData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{83}
}

func (x *CreateInfoExtractionRuleData) GetInfoExtractionRuleId() string {
	if x != nil {
		return x.InfoExtractionRuleId
	}
	return ""
}

type GetInfoExtractionRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *GetInfoExtractionRuleData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors            `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetInfoExtractionRuleResponse) Reset() {
	*x = GetInfoExtractionRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoExtractionRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoExtractionRuleResponse) ProtoMessage() {}

func (x *GetInfoExtractionRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoExtractionRuleResponse.ProtoReflect.Descriptor instead.
func (*GetInfoExtractionRuleResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{84}
}

func (x *GetInfoExtractionRuleResponse) GetData() *GetInfoExtractionRuleData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetInfoExtractionRuleResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetInfoExtractionRuleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoExtractionRule *InfoExtractionRule `protobuf:"bytes,1,opt,name=info_extraction_rule,json=infoExtractionRule,proto3" json:"info_extraction_rule,omitempty"`
}

func (x *GetInfoExtractionRuleData) Reset() {
	*x = GetInfoExtractionRuleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoExtractionRuleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoExtractionRuleData) ProtoMessage() {}

func (x *GetInfoExtractionRuleData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoExtractionRuleData.ProtoReflect.Descriptor instead.
func (*GetInfoExtractionRuleData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{85}
}

func (x *GetInfoExtractionRuleData) GetInfoExtractionRule() *InfoExtractionRule {
	if x != nil {
		return x.InfoExtractionRule
	}
	return nil
}

type UpdatedInfoExtractionRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label        string  `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Question     string  `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	AnswerRegexp string  `protobuf:"bytes,3,opt,name=answer_regexp,json=answerRegexp,proto3" json:"answer_regexp,omitempty"`
	Threshold    float32 `protobuf:"fixed32,4,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Enabled      bool    `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *UpdatedInfoExtractionRule) Reset() {
	*x = UpdatedInfoExtractionRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedInfoExtractionRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedInfoExtractionRule) ProtoMessage() {}

func (x *UpdatedInfoExtractionRule) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedInfoExtractionRule.ProtoReflect.Descriptor instead.
func (*UpdatedInfoExtractionRule) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{86}
}

func (x *UpdatedInfoExtractionRule) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *UpdatedInfoExtractionRule) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *UpdatedInfoExtractionRule) GetAnswerRegexp() string {
	if x != nil {
		return x.AnswerRegexp
	}
	return ""
}

func (x *UpdatedInfoExtractionRule) GetThreshold() float32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *UpdatedInfoExtractionRule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type UpdateInfoExtractionRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *UpdateInfoExtractionRuleData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors               `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *UpdateInfoExtractionRuleResponse) Reset() {
	*x = UpdateInfoExtractionRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInfoExtractionRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInfoExtractionRuleResponse) ProtoMessage() {}

func (x *UpdateInfoExtractionRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInfoExtractionRuleResponse.ProtoReflect.Descriptor instead.
func (*UpdateInfoExtractionRuleResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{87}
}

func (x *UpdateInfoExtractionRuleResponse) GetData() *UpdateInfoExtractionRuleData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateInfoExtractionRuleResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type UpdateInfoExtractionRuleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoExtractionRule *InfoExtractionRule `protobuf:"bytes,1,opt,name=info_extraction_rule,json=infoExtractionRule,proto3" json:"info_extraction_rule,omitempty"`
}

func (x *UpdateInfoExtractionRuleData) Reset() {
	*x = UpdateInfoExtractionRuleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInfoExtractionRuleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInfoExtractionRuleData) ProtoMessage() {}

func (x *UpdateInfoExtractionRuleData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInfoExtractionRuleData.ProtoReflect.Descriptor instead.
func (*UpdateInfoExtractionRuleData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{88}
}

func (x *UpdateInfoExtractionRuleData) GetInfoExtractionRule() *InfoExtractionRule {
	if x != nil {
		return x.InfoExtractionRule
	}
	return nil
}

type DeleteInfoExtractionRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   *DeleteInfoExtractionRuleData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Errors *ResponseErrors               `protobuf:"bytes,2,opt,name=errors,proto3" json:"errors,omitempty"`
}

func (x *DeleteInfoExtractionRuleResponse) Reset() {
	*x = DeleteInfoExtractionRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInfoExtractionRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInfoExtractionRuleResponse) ProtoMessage() {}

func (x *DeleteInfoExtractionRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInfoExtractionRuleResponse.ProtoReflect.Descriptor instead.
func (*DeleteInfoExtractionRuleResponse) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{89}
}

func (x *DeleteInfoExtractionRuleResponse) GetData() *DeleteInfoExtractionRuleData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DeleteInfoExtractionRuleResponse) GetErrors() *ResponseErrors {
	if x != nil {
		return x.Errors
	}
	return nil
}

type DeleteInfoExtractionRuleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedInfoExtractionRuleId string `protobuf:"bytes,1,opt,name=deleted_info_extraction_rule_id,json=deletedInfoExtractionRuleId,proto3" json:"deleted_info_extraction_rule_id,omitempty"`
}

func (x *DeleteInfoExtractionRuleData) Reset() {
	*x = DeleteInfoExtractionRuleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInfoExtractionRuleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInfoExtractionRuleData) ProtoMessage() {}

func (x *DeleteInfoExtractionRuleData) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInfoExtractionRuleData.ProtoReflect.Descriptor instead.
func (*DeleteInfoExtractionRuleData) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{90}
}

func (x *DeleteInfoExtractionRuleData) GetDeletedInfoExtractionRuleId() string {
	if x != nil {
		return x.DeletedInfoExtractionRuleId
	}
	return ""
}

type Feed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt       string `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Url             string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Enabled         bool   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	LastRetrievedAt string `protobuf:"bytes,6,opt,name=last_retrieved_at,json=lastRetrievedAt,proto3" json:"last_retrieved_at,omitempty"`
	FailuresCount   int64  `protobuf:"varint,7,opt,name=failures_count,json=failuresCount,proto3" json:"failures_count,omitempty"`
	LastError       string `protobuf:"bytes,8,opt,name=last_error,json=lastError,proto3" json:"last_error,omitempty"`
}

func (x *Feed) Reset() {
	*x = Feed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed) ProtoMessage() {}

func (x *Feed) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed.ProtoReflect.Descriptor instead.
func (*Feed) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{91}
}

func (x *Feed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Feed) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Feed) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Feed) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Feed) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Feed) GetLastRetrievedAt() string {
	if x != nil {
		return x.LastRetrievedAt
	}
	return ""
}

func (x *Feed) GetFailuresCount() int64 {
	if x != nil {
		return x.FailuresCount
	}
	return 0
}

func (x *Feed) GetLastError() string {
	if x != nil {
		return x.LastError
	}
	return ""
}

type UserTwitterSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt       string `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Username        string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Enabled         bool   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	LastRetrievedAt string `protobuf:"bytes,6,opt,name=last_retrieved_at,json=lastRetrievedAt,proto3" json:"last_retrieved_at,omitempty"`
	FailuresCount   int64  `protobuf:"varint,7,opt,name=failures_count,json=failuresCount,proto3" json:"failures_count,omitempty"`
	LastError       string `protobuf:"bytes,8,opt,name=last_error,json=lastError,proto3" json:"last_error,omitempty"`
}

func (x *UserTwitterSource) Reset() {
	*x = UserTwitterSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTwitterSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTwitterSource) ProtoMessage() {}

func (x *UserTwitterSource) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTwitterSource.ProtoReflect.Descriptor instead.
func (*UserTwitterSource) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{92}
}

func (x *UserTwitterSource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserTwitterSource) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UserTwitterSource) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *UserTwitterSource) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserTwitterSource) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UserTwitterSource) GetLastRetrievedAt() string {
	if x != nil {
		return x.LastRetrievedAt
	}
	return ""
}

func (x *UserTwitterSource) GetFailuresCount() int64 {
	if x != nil {
		return x.FailuresCount
	}
	return 0
}

func (x *UserTwitterSource) GetLastError() string {
	if x != nil {
		return x.LastError
	}
	return ""
}

type QueryTwitterSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt       string `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Query           string `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	Enabled         bool   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	LastRetrievedAt string `protobuf:"bytes,6,opt,name=last_retrieved_at,json=lastRetrievedAt,proto3" json:"last_retrieved_at,omitempty"`
	FailuresCount   int64  `protobuf:"varint,7,opt,name=failures_count,json=failuresCount,proto3" json:"failures_count,omitempty"`
	LastError       string `protobuf:"bytes,8,opt,name=last_error,json=lastError,proto3" json:"last_error,omitempty"`
}

func (x *QueryTwitterSource) Reset() {
	*x = QueryTwitterSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTwitterSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTwitterSource) ProtoMessage() {}

func (x *QueryTwitterSource) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTwitterSource.ProtoReflect.Descriptor instead.
func (*QueryTwitterSource) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{93}
}

func (x *QueryTwitterSource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueryTwitterSource) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *QueryTwitterSource) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *QueryTwitterSource) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *QueryTwitterSource) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *QueryTwitterSource) GetLastRetrievedAt() string {
	if x != nil {
		return x.LastRetrievedAt
	}
	return ""
}

func (x *QueryTwitterSource) GetFailuresCount() int64 {
	if x != nil {
		return x.FailuresCount
	}
	return 0
}

func (x *QueryTwitterSource) GetLastError() string {
	if x != nil {
		return x.LastError
	}
	return ""
}

type ZeroShotHypothesisTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt  string                     `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  string                     `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Enabled    bool                       `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Text       string                     `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	MultiClass bool                       `protobuf:"varint,6,opt,name=multi_class,json=multiClass,proto3" json:"multi_class,omitempty"`
	Labels     []*ZeroShotHypothesisLabel `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *ZeroShotHypothesisTemplate) Reset() {
	*x = ZeroShotHypothesisTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZeroShotHypothesisTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZeroShotHypothesisTemplate) ProtoMessage() {}

func (x *ZeroShotHypothesisTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZeroShotHypothesisTemplate.ProtoReflect.Descriptor instead.
func (*ZeroShotHypothesisTemplate) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{94}
}

func (x *ZeroShotHypothesisTemplate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ZeroShotHypothesisTemplate) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ZeroShotHypothesisTemplate) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ZeroShotHypothesisTemplate) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ZeroShotHypothesisTemplate) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ZeroShotHypothesisTemplate) GetMultiClass() bool {
	if x != nil {
		return x.MultiClass
	}
	return false
}

func (x *ZeroShotHypothesisTemplate) GetLabels() []*ZeroShotHypothesisLabel {
	if x != nil {
		return x.Labels
	}
	return nil
}

type ZeroShotHypothesisLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt string `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Enabled   bool   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Text      string `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ZeroShotHypothesisLabel) Reset() {
	*x = ZeroShotHypothesisLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZeroShotHypothesisLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZeroShotHypothesisLabel) ProtoMessage() {}

func (x *ZeroShotHypothesisLabel) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZeroShotHypothesisLabel.ProtoReflect.Descriptor instead.
func (*ZeroShotHypothesisLabel) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{95}
}

func (x *ZeroShotHypothesisLabel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ZeroShotHypothesisLabel) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ZeroShotHypothesisLabel) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ZeroShotHypothesisLabel) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ZeroShotHypothesisLabel) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type InfoExtractionRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt    string  `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    string  `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Label        string  `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Question     string  `protobuf:"bytes,5,opt,name=question,proto3" json:"question,omitempty"`
	AnswerRegexp string  `protobuf:"bytes,6,opt,name=answer_regexp,json=answerRegexp,proto3" json:"answer_regexp,omitempty"`
	Threshold    float32 `protobuf:"fixed32,7,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Enabled      bool    `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *InfoExtractionRule) Reset() {
	*x = InfoExtractionRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoExtractionRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoExtractionRule) ProtoMessage() {}

func (x *InfoExtractionRule) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoExtractionRule.ProtoReflect.Descriptor instead.
func (*InfoExtractionRule) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{96}
}

func (x *InfoExtractionRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InfoExtractionRule) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *InfoExtractionRule) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *InfoExtractionRule) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *InfoExtractionRule) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *InfoExtractionRule) GetAnswerRegexp() string {
	if x != nil {
		return x.AnswerRegexp
	}
	return ""
}

func (x *InfoExtractionRule) GetThreshold() float32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *InfoExtractionRule) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

//GetFeedsParameters holds parameters to GetFeeds
type GetFeedsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First int64  `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	After string `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *GetFeedsRequest) Reset() {
	*x = GetFeedsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeedsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedsRequest) ProtoMessage() {}

func (x *GetFeedsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedsRequest.ProtoReflect.Descriptor instead.
func (*GetFeedsRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{97}
}

func (x *GetFeedsRequest) GetFirst() int64 {
	if x != nil {
		return x.First
	}
	return 0
}

func (x *GetFeedsRequest) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

//CreateFeedsParameters holds parameters to CreateFeeds
type CreateFeedsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewFeeds *NewFeeds `protobuf:"bytes,1,opt,name=new_feeds,json=newFeeds,proto3" json:"new_feeds,omitempty"`
}

func (x *CreateFeedsRequest) Reset() {
	*x = CreateFeedsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedsRequest) ProtoMessage() {}

func (x *CreateFeedsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedsRequest.ProtoReflect.Descriptor instead.
func (*CreateFeedsRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{98}
}

func (x *CreateFeedsRequest) GetNewFeeds() *NewFeeds {
	if x != nil {
		return x.NewFeeds
	}
	return nil
}

//CreateFeedParameters holds parameters to CreateFeed
type CreateFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewFeed *NewFeed `protobuf:"bytes,1,opt,name=new_feed,json=newFeed,proto3" json:"new_feed,omitempty"`
}

func (x *CreateFeedRequest) Reset() {
	*x = CreateFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedRequest) ProtoMessage() {}

func (x *CreateFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedRequest.ProtoReflect.Descriptor instead.
func (*CreateFeedRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{99}
}

func (x *CreateFeedRequest) GetNewFeed() *NewFeed {
	if x != nil {
		return x.NewFeed
	}
	return nil
}

//GetFeedParameters holds parameters to GetFeed
type GetFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetFeedRequest) Reset() {
	*x = GetFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedRequest) ProtoMessage() {}

func (x *GetFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedRequest.ProtoReflect.Descriptor instead.
func (*GetFeedRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{100}
}

func (x *GetFeedRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//UpdateFeedParameters holds parameters to UpdateFeed
type UpdateFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdatedFeed *UpdatedFeed `protobuf:"bytes,2,opt,name=updated_feed,json=updatedFeed,proto3" json:"updated_feed,omitempty"`
}

func (x *UpdateFeedRequest) Reset() {
	*x = UpdateFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeedRequest) ProtoMessage() {}

func (x *UpdateFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeedRequest.ProtoReflect.Descriptor instead.
func (*UpdateFeedRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{101}
}

func (x *UpdateFeedRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFeedRequest) GetUpdatedFeed() *UpdatedFeed {
	if x != nil {
		return x.UpdatedFeed
	}
	return nil
}

//DeleteFeedParameters holds parameters to DeleteFeed
type DeleteFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteFeedRequest) Reset() {
	*x = DeleteFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedRequest) ProtoMessage() {}

func (x *DeleteFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedRequest.ProtoReflect.Descriptor instead.
func (*DeleteFeedRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{102}
}

func (x *DeleteFeedRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//GetUserTwitterSourcesParameters holds parameters to GetUserTwitterSources
type GetUserTwitterSourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First int64  `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	After string `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *GetUserTwitterSourcesRequest) Reset() {
	*x = GetUserTwitterSourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTwitterSourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTwitterSourcesRequest) ProtoMessage() {}

func (x *GetUserTwitterSourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTwitterSourcesRequest.ProtoReflect.Descriptor instead.
func (*GetUserTwitterSourcesRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{103}
}

func (x *GetUserTwitterSourcesRequest) GetFirst() int64 {
	if x != nil {
		return x.First
	}
	return 0
}

func (x *GetUserTwitterSourcesRequest) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

//CreateUserTwitterSourcesParameters holds parameters to CreateUserTwitterSources
type CreateUserTwitterSourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewUserTwitterSources *NewUserTwitterSources `protobuf:"bytes,1,opt,name=new_user_twitter_sources,json=newUserTwitterSources,proto3" json:"new_user_twitter_sources,omitempty"`
}

func (x *CreateUserTwitterSourcesRequest) Reset() {
	*x = CreateUserTwitterSourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserTwitterSourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserTwitterSourcesRequest) ProtoMessage() {}

func (x *CreateUserTwitterSourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserTwitterSourcesRequest.ProtoReflect.Descriptor instead.
func (*CreateUserTwitterSourcesRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{104}
}

func (x *CreateUserTwitterSourcesRequest) GetNewUserTwitterSources() *NewUserTwitterSources {
	if x != nil {
		return x.NewUserTwitterSources
	}
	return nil
}

//CreateUserTwitterSourceParameters holds parameters to CreateUserTwitterSource
type CreateUserTwitterSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewUserTwitterSource *NewUserTwitterSource `protobuf:"bytes,1,opt,name=new_user_twitter_source,json=newUserTwitterSource,proto3" json:"new_user_twitter_source,omitempty"`
}

func (x *CreateUserTwitterSourceRequest) Reset() {
	*x = CreateUserTwitterSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserTwitterSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserTwitterSourceRequest) ProtoMessage() {}

func (x *CreateUserTwitterSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserTwitterSourceRequest.ProtoReflect.Descriptor instead.
func (*CreateUserTwitterSourceRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{105}
}

func (x *CreateUserTwitterSourceRequest) GetNewUserTwitterSource() *NewUserTwitterSource {
	if x != nil {
		return x.NewUserTwitterSource
	}
	return nil
}

//GetUserTwitterSourceParameters holds parameters to GetUserTwitterSource
type GetUserTwitterSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetUserTwitterSourceRequest) Reset() {
	*x = GetUserTwitterSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTwitterSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTwitterSourceRequest) ProtoMessage() {}

func (x *GetUserTwitterSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTwitterSourceRequest.ProtoReflect.Descriptor instead.
func (*GetUserTwitterSourceRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{106}
}

func (x *GetUserTwitterSourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//UpdateUserTwitterSourceParameters holds parameters to UpdateUserTwitterSource
type UpdateUserTwitterSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdatedUserTwitterSource *UpdatedUserTwitterSource `protobuf:"bytes,2,opt,name=updated_user_twitter_source,json=updatedUserTwitterSource,proto3" json:"updated_user_twitter_source,omitempty"`
}

func (x *UpdateUserTwitterSourceRequest) Reset() {
	*x = UpdateUserTwitterSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserTwitterSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserTwitterSourceRequest) ProtoMessage() {}

func (x *UpdateUserTwitterSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserTwitterSourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserTwitterSourceRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{107}
}

func (x *UpdateUserTwitterSourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateUserTwitterSourceRequest) GetUpdatedUserTwitterSource() *UpdatedUserTwitterSource {
	if x != nil {
		return x.UpdatedUserTwitterSource
	}
	return nil
}

//DeleteUserTwitterSourceParameters holds parameters to DeleteUserTwitterSource
type DeleteUserTwitterSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteUserTwitterSourceRequest) Reset() {
	*x = DeleteUserTwitterSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserTwitterSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserTwitterSourceRequest) ProtoMessage() {}

func (x *DeleteUserTwitterSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserTwitterSourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserTwitterSourceRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{108}
}

func (x *DeleteUserTwitterSourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//GetQueryTwitterSourcesParameters holds parameters to GetQueryTwitterSources
type GetQueryTwitterSourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First int64  `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	After string `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *GetQueryTwitterSourcesRequest) Reset() {
	*x = GetQueryTwitterSourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryTwitterSourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryTwitterSourcesRequest) ProtoMessage() {}

func (x *GetQueryTwitterSourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryTwitterSourcesRequest.ProtoReflect.Descriptor instead.
func (*GetQueryTwitterSourcesRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{109}
}

func (x *GetQueryTwitterSourcesRequest) GetFirst() int64 {
	if x != nil {
		return x.First
	}
	return 0
}

func (x *GetQueryTwitterSourcesRequest) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

//CreateQueryTwitterSourcesParameters holds parameters to CreateQueryTwitterSources
type CreateQueryTwitterSourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewQueryTwitterSources *NewQueryTwitterSources `protobuf:"bytes,1,opt,name=new_query_twitter_sources,json=newQueryTwitterSources,proto3" json:"new_query_twitter_sources,omitempty"`
}

func (x *CreateQueryTwitterSourcesRequest) Reset() {
	*x = CreateQueryTwitterSourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueryTwitterSourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueryTwitterSourcesRequest) ProtoMessage() {}

func (x *CreateQueryTwitterSourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueryTwitterSourcesRequest.ProtoReflect.Descriptor instead.
func (*CreateQueryTwitterSourcesRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{110}
}

func (x *CreateQueryTwitterSourcesRequest) GetNewQueryTwitterSources() *NewQueryTwitterSources {
	if x != nil {
		return x.NewQueryTwitterSources
	}
	return nil
}

//CreateQueryTwitterSourceParameters holds parameters to CreateQueryTwitterSource
type CreateQueryTwitterSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewQueryTwitterSource *NewQueryTwitterSource `protobuf:"bytes,1,opt,name=new_query_twitter_source,json=newQueryTwitterSource,proto3" json:"new_query_twitter_source,omitempty"`
}

func (x *CreateQueryTwitterSourceRequest) Reset() {
	*x = CreateQueryTwitterSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQueryTwitterSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueryTwitterSourceRequest) ProtoMessage() {}

func (x *CreateQueryTwitterSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueryTwitterSourceRequest.ProtoReflect.Descriptor instead.
func (*CreateQueryTwitterSourceRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{111}
}

func (x *CreateQueryTwitterSourceRequest) GetNewQueryTwitterSource() *NewQueryTwitterSource {
	if x != nil {
		return x.NewQueryTwitterSource
	}
	return nil
}

//GetQueryTwitterSourceParameters holds parameters to GetQueryTwitterSource
type GetQueryTwitterSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetQueryTwitterSourceRequest) Reset() {
	*x = GetQueryTwitterSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryTwitterSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryTwitterSourceRequest) ProtoMessage() {}

func (x *GetQueryTwitterSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryTwitterSourceRequest.ProtoReflect.Descriptor instead.
func (*GetQueryTwitterSourceRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{112}
}

func (x *GetQueryTwitterSourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//UpdateQueryTwitterSourceParameters holds parameters to UpdateQueryTwitterSource
type UpdateQueryTwitterSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdatedQueryTwitterSource *UpdatedQueryTwitterSource `protobuf:"bytes,2,opt,name=updated_query_twitter_source,json=updatedQueryTwitterSource,proto3" json:"updated_query_twitter_source,omitempty"`
}

func (x *UpdateQueryTwitterSourceRequest) Reset() {
	*x = UpdateQueryTwitterSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQueryTwitterSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQueryTwitterSourceRequest) ProtoMessage() {}

func (x *UpdateQueryTwitterSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQueryTwitterSourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateQueryTwitterSourceRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{113}
}

func (x *UpdateQueryTwitterSourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateQueryTwitterSourceRequest) GetUpdatedQueryTwitterSource() *UpdatedQueryTwitterSource {
	if x != nil {
		return x.UpdatedQueryTwitterSource
	}
	return nil
}

//DeleteQueryTwitterSourceParameters holds parameters to DeleteQueryTwitterSource
type DeleteQueryTwitterSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteQueryTwitterSourceRequest) Reset() {
	*x = DeleteQueryTwitterSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQueryTwitterSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueryTwitterSourceRequest) ProtoMessage() {}

func (x *DeleteQueryTwitterSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueryTwitterSourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteQueryTwitterSourceRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{114}
}

func (x *DeleteQueryTwitterSourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//GetZeroShotHypothesisTemplatesParameters holds parameters to GetZeroShotHypothesisTemplates
type GetZeroShotHypothesisTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First int64  `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	After string `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *GetZeroShotHypothesisTemplatesRequest) Reset() {
	*x = GetZeroShotHypothesisTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZeroShotHypothesisTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZeroShotHypothesisTemplatesRequest) ProtoMessage() {}

func (x *GetZeroShotHypothesisTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZeroShotHypothesisTemplatesRequest.ProtoReflect.Descriptor instead.
func (*GetZeroShotHypothesisTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{115}
}

func (x *GetZeroShotHypothesisTemplatesRequest) GetFirst() int64 {
	if x != nil {
		return x.First
	}
	return 0
}

func (x *GetZeroShotHypothesisTemplatesRequest) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

//CreateZeroShotHypothesisTemplatesParameters holds parameters to CreateZeroShotHypothesisTemplates
type CreateZeroShotHypothesisTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewZeroShotHypothesisTemplates *NewZeroShotHypothesisTemplates `protobuf:"bytes,1,opt,name=new_zero_shot_hypothesis_templates,json=newZeroShotHypothesisTemplates,proto3" json:"new_zero_shot_hypothesis_templates,omitempty"`
}

func (x *CreateZeroShotHypothesisTemplatesRequest) Reset() {
	*x = CreateZeroShotHypothesisTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateZeroShotHypothesisTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateZeroShotHypothesisTemplatesRequest) ProtoMessage() {}

func (x *CreateZeroShotHypothesisTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateZeroShotHypothesisTemplatesRequest.ProtoReflect.Descriptor instead.
func (*CreateZeroShotHypothesisTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{116}
}

func (x *CreateZeroShotHypothesisTemplatesRequest) GetNewZeroShotHypothesisTemplates() *NewZeroShotHypothesisTemplates {
	if x != nil {
		return x.NewZeroShotHypothesisTemplates
	}
	return nil
}

//CreateZeroShotHypothesisTemplateParameters holds parameters to CreateZeroShotHypothesisTemplate
type CreateZeroShotHypothesisTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewZeroShotHypothesisTemplate *NewZeroShotHypothesisTemplate `protobuf:"bytes,1,opt,name=new_zero_shot_hypothesis_template,json=newZeroShotHypothesisTemplate,proto3" json:"new_zero_shot_hypothesis_template,omitempty"`
}

func (x *CreateZeroShotHypothesisTemplateRequest) Reset() {
	*x = CreateZeroShotHypothesisTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateZeroShotHypothesisTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateZeroShotHypothesisTemplateRequest) ProtoMessage() {}

func (x *CreateZeroShotHypothesisTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateZeroShotHypothesisTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateZeroShotHypothesisTemplateRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{117}
}

func (x *CreateZeroShotHypothesisTemplateRequest) GetNewZeroShotHypothesisTemplate() *NewZeroShotHypothesisTemplate {
	if x != nil {
		return x.NewZeroShotHypothesisTemplate
	}
	return nil
}

//GetZeroShotHypothesisTemplateParameters holds parameters to GetZeroShotHypothesisTemplate
type GetZeroShotHypothesisTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetZeroShotHypothesisTemplateRequest) Reset() {
	*x = GetZeroShotHypothesisTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZeroShotHypothesisTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZeroShotHypothesisTemplateRequest) ProtoMessage() {}

func (x *GetZeroShotHypothesisTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZeroShotHypothesisTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetZeroShotHypothesisTemplateRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{118}
}

func (x *GetZeroShotHypothesisTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//UpdateZeroShotHypothesisTemplateParameters holds parameters to UpdateZeroShotHypothesisTemplate
type UpdateZeroShotHypothesisTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                                string                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdatedZeroShotHypothesisTemplate *UpdatedZeroShotHypothesisTemplate `protobuf:"bytes,2,opt,name=updated_zero_shot_hypothesis_template,json=updatedZeroShotHypothesisTemplate,proto3" json:"updated_zero_shot_hypothesis_template,omitempty"`
}

func (x *UpdateZeroShotHypothesisTemplateRequest) Reset() {
	*x = UpdateZeroShotHypothesisTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateZeroShotHypothesisTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateZeroShotHypothesisTemplateRequest) ProtoMessage() {}

func (x *UpdateZeroShotHypothesisTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateZeroShotHypothesisTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateZeroShotHypothesisTemplateRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{119}
}

func (x *UpdateZeroShotHypothesisTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateZeroShotHypothesisTemplateRequest) GetUpdatedZeroShotHypothesisTemplate() *UpdatedZeroShotHypothesisTemplate {
	if x != nil {
		return x.UpdatedZeroShotHypothesisTemplate
	}
	return nil
}

//DeleteZeroShotHypothesisTemplateParameters holds parameters to DeleteZeroShotHypothesisTemplate
type DeleteZeroShotHypothesisTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteZeroShotHypothesisTemplateRequest) Reset() {
	*x = DeleteZeroShotHypothesisTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteZeroShotHypothesisTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteZeroShotHypothesisTemplateRequest) ProtoMessage() {}

func (x *DeleteZeroShotHypothesisTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteZeroShotHypothesisTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteZeroShotHypothesisTemplateRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{120}
}

func (x *DeleteZeroShotHypothesisTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//CreateZeroShotHypothesisLabelsParameters holds parameters to CreateZeroShotHypothesisLabels
type CreateZeroShotHypothesisLabelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId                  string                       `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	NewZeroShotHypothesisLabels *NewZeroShotHypothesisLabels `protobuf:"bytes,2,opt,name=new_zero_shot_hypothesis_labels,json=newZeroShotHypothesisLabels,proto3" json:"new_zero_shot_hypothesis_labels,omitempty"`
}

func (x *CreateZeroShotHypothesisLabelsRequest) Reset() {
	*x = CreateZeroShotHypothesisLabelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateZeroShotHypothesisLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateZeroShotHypothesisLabelsRequest) ProtoMessage() {}

func (x *CreateZeroShotHypothesisLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateZeroShotHypothesisLabelsRequest.ProtoReflect.Descriptor instead.
func (*CreateZeroShotHypothesisLabelsRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{121}
}

func (x *CreateZeroShotHypothesisLabelsRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *CreateZeroShotHypothesisLabelsRequest) GetNewZeroShotHypothesisLabels() *NewZeroShotHypothesisLabels {
	if x != nil {
		return x.NewZeroShotHypothesisLabels
	}
	return nil
}

//CreateZeroShotHypothesisLabelParameters holds parameters to CreateZeroShotHypothesisLabel
type CreateZeroShotHypothesisLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId                 string                      `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	NewZeroShotHypothesisLabel *NewZeroShotHypothesisLabel `protobuf:"bytes,2,opt,name=new_zero_shot_hypothesis_label,json=newZeroShotHypothesisLabel,proto3" json:"new_zero_shot_hypothesis_label,omitempty"`
}

func (x *CreateZeroShotHypothesisLabelRequest) Reset() {
	*x = CreateZeroShotHypothesisLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateZeroShotHypothesisLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateZeroShotHypothesisLabelRequest) ProtoMessage() {}

func (x *CreateZeroShotHypothesisLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateZeroShotHypothesisLabelRequest.ProtoReflect.Descriptor instead.
func (*CreateZeroShotHypothesisLabelRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{122}
}

func (x *CreateZeroShotHypothesisLabelRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *CreateZeroShotHypothesisLabelRequest) GetNewZeroShotHypothesisLabel() *NewZeroShotHypothesisLabel {
	if x != nil {
		return x.NewZeroShotHypothesisLabel
	}
	return nil
}

//GetZeroShotHypothesisLabelParameters holds parameters to GetZeroShotHypothesisLabel
type GetZeroShotHypothesisLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId string `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	LabelId    string `protobuf:"bytes,2,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
}

func (x *GetZeroShotHypothesisLabelRequest) Reset() {
	*x = GetZeroShotHypothesisLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZeroShotHypothesisLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZeroShotHypothesisLabelRequest) ProtoMessage() {}

func (x *GetZeroShotHypothesisLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZeroShotHypothesisLabelRequest.ProtoReflect.Descriptor instead.
func (*GetZeroShotHypothesisLabelRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{123}
}

func (x *GetZeroShotHypothesisLabelRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *GetZeroShotHypothesisLabelRequest) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

//UpdateZeroShotHypothesisLabelParameters holds parameters to UpdateZeroShotHypothesisLabel
type UpdateZeroShotHypothesisLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId                     string                          `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	LabelId                        string                          `protobuf:"bytes,2,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	UpdatedZeroShotHypothesisLabel *UpdatedZeroShotHypothesisLabel `protobuf:"bytes,3,opt,name=updated_zero_shot_hypothesis_label,json=updatedZeroShotHypothesisLabel,proto3" json:"updated_zero_shot_hypothesis_label,omitempty"`
}

func (x *UpdateZeroShotHypothesisLabelRequest) Reset() {
	*x = UpdateZeroShotHypothesisLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateZeroShotHypothesisLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateZeroShotHypothesisLabelRequest) ProtoMessage() {}

func (x *UpdateZeroShotHypothesisLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateZeroShotHypothesisLabelRequest.ProtoReflect.Descriptor instead.
func (*UpdateZeroShotHypothesisLabelRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{124}
}

func (x *UpdateZeroShotHypothesisLabelRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *UpdateZeroShotHypothesisLabelRequest) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

func (x *UpdateZeroShotHypothesisLabelRequest) GetUpdatedZeroShotHypothesisLabel() *UpdatedZeroShotHypothesisLabel {
	if x != nil {
		return x.UpdatedZeroShotHypothesisLabel
	}
	return nil
}

//DeleteZeroShotHypothesisLabelParameters holds parameters to DeleteZeroShotHypothesisLabel
type DeleteZeroShotHypothesisLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId string `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	LabelId    string `protobuf:"bytes,2,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
}

func (x *DeleteZeroShotHypothesisLabelRequest) Reset() {
	*x = DeleteZeroShotHypothesisLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteZeroShotHypothesisLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteZeroShotHypothesisLabelRequest) ProtoMessage() {}

func (x *DeleteZeroShotHypothesisLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteZeroShotHypothesisLabelRequest.ProtoReflect.Descriptor instead.
func (*DeleteZeroShotHypothesisLabelRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{125}
}

func (x *DeleteZeroShotHypothesisLabelRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *DeleteZeroShotHypothesisLabelRequest) GetLabelId() string {
	if x != nil {
		return x.LabelId
	}
	return ""
}

//GetInfoExtractionRulesParameters holds parameters to GetInfoExtractionRules
type GetInfoExtractionRulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First int64  `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	After string `protobuf:"bytes,2,opt,name=after,proto3" json:"after,omitempty"`
}

func (x *GetInfoExtractionRulesRequest) Reset() {
	*x = GetInfoExtractionRulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoExtractionRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoExtractionRulesRequest) ProtoMessage() {}

func (x *GetInfoExtractionRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoExtractionRulesRequest.ProtoReflect.Descriptor instead.
func (*GetInfoExtractionRulesRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{126}
}

func (x *GetInfoExtractionRulesRequest) GetFirst() int64 {
	if x != nil {
		return x.First
	}
	return 0
}

func (x *GetInfoExtractionRulesRequest) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

//CreateInfoExtractionRulesParameters holds parameters to CreateInfoExtractionRules
type CreateInfoExtractionRulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewInfoExtractionRules *NewInfoExtractionRules `protobuf:"bytes,1,opt,name=new_info_extraction_rules,json=newInfoExtractionRules,proto3" json:"new_info_extraction_rules,omitempty"`
}

func (x *CreateInfoExtractionRulesRequest) Reset() {
	*x = CreateInfoExtractionRulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInfoExtractionRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInfoExtractionRulesRequest) ProtoMessage() {}

func (x *CreateInfoExtractionRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInfoExtractionRulesRequest.ProtoReflect.Descriptor instead.
func (*CreateInfoExtractionRulesRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{127}
}

func (x *CreateInfoExtractionRulesRequest) GetNewInfoExtractionRules() *NewInfoExtractionRules {
	if x != nil {
		return x.NewInfoExtractionRules
	}
	return nil
}

//CreateInfoExtractionRuleParameters holds parameters to CreateInfoExtractionRule
type CreateInfoExtractionRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewInfoExtractionRule *NewInfoExtractionRule `protobuf:"bytes,1,opt,name=new_info_extraction_rule,json=newInfoExtractionRule,proto3" json:"new_info_extraction_rule,omitempty"`
}

func (x *CreateInfoExtractionRuleRequest) Reset() {
	*x = CreateInfoExtractionRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInfoExtractionRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInfoExtractionRuleRequest) ProtoMessage() {}

func (x *CreateInfoExtractionRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInfoExtractionRuleRequest.ProtoReflect.Descriptor instead.
func (*CreateInfoExtractionRuleRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{128}
}

func (x *CreateInfoExtractionRuleRequest) GetNewInfoExtractionRule() *NewInfoExtractionRule {
	if x != nil {
		return x.NewInfoExtractionRule
	}
	return nil
}

//GetInfoExtractionRuleParameters holds parameters to GetInfoExtractionRule
type GetInfoExtractionRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetInfoExtractionRuleRequest) Reset() {
	*x = GetInfoExtractionRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoExtractionRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoExtractionRuleRequest) ProtoMessage() {}

func (x *GetInfoExtractionRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoExtractionRuleRequest.ProtoReflect.Descriptor instead.
func (*GetInfoExtractionRuleRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{129}
}

func (x *GetInfoExtractionRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//UpdateInfoExtractionRuleParameters holds parameters to UpdateInfoExtractionRule
type UpdateInfoExtractionRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UpdatedInfoExtractionRule *UpdatedInfoExtractionRule `protobuf:"bytes,2,opt,name=updated_info_extraction_rule,json=updatedInfoExtractionRule,proto3" json:"updated_info_extraction_rule,omitempty"`
}

func (x *UpdateInfoExtractionRuleRequest) Reset() {
	*x = UpdateInfoExtractionRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateInfoExtractionRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateInfoExtractionRuleRequest) ProtoMessage() {}

func (x *UpdateInfoExtractionRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateInfoExtractionRuleRequest.ProtoReflect.Descriptor instead.
func (*UpdateInfoExtractionRuleRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{130}
}

func (x *UpdateInfoExtractionRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateInfoExtractionRuleRequest) GetUpdatedInfoExtractionRule() *UpdatedInfoExtractionRule {
	if x != nil {
		return x.UpdatedInfoExtractionRule
	}
	return nil
}

//DeleteInfoExtractionRuleParameters holds parameters to DeleteInfoExtractionRule
type DeleteInfoExtractionRuleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteInfoExtractionRuleRequest) Reset() {
	*x = DeleteInfoExtractionRuleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whatsnew_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInfoExtractionRuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInfoExtractionRuleRequest) ProtoMessage() {}

func (x *DeleteInfoExtractionRuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_whatsnew_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInfoExtractionRuleRequest.ProtoReflect.Descriptor instead.
func (*DeleteInfoExtractionRuleRequest) Descriptor() ([]byte, []int) {
	return file_whatsnew_proto_rawDescGZIP(), []int{131}
}

func (x *DeleteInfoExtractionRuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_whatsnew_proto protoreflect.FileDescriptor

var file_whatsnew_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x33, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x46, 0x65, 0x65, 0x64, 0x73, 0x12,
	0x27, 0x0a, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x4e, 0x65, 0x77, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x22, 0x1b, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x46,
	0x65, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x76, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x68, 0x61,
	0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x2c, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x73, 0x22, 0x70, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x34, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a,
	0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x05, 0x66, 0x65,
	0x65, 0x64, 0x73, 0x22, 0x74, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e,
	0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e,
	0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x29, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x66,
	0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x65,
	0x65, 0x64, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x22, 0x31, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x04, 0x66, 0x65, 0x65, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x46, 0x65, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x74, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x34, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a,
	0x04, 0x66, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x04, 0x66, 0x65, 0x65,
	0x64, 0x22, 0x74, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52,
	0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x38, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x46, 0x65, 0x65, 0x64, 0x49,
	0x64, 0x22, 0x8a, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x6a,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x14, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x15, 0x4e, 0x65,
	0x77, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x4e, 0x65, 0x77,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65,
	0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x55, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22,
	0x32, 0x0a, 0x14, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65,
	0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x22, 0x52, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e,
	0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65,
	0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x22, 0x67, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x4b, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xc2, 0x01, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x8e, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x22, 0x6a, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x4b, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65,
	0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x11, 0x75, 0x73, 0x65,
	0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x8e,
	0x01, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a,
	0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22,
	0x61, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x42,
	0x0a, 0x1e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x22, 0x6e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x50, 0x0a, 0x15, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x13, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x22, 0x6d, 0x0a, 0x16, 0x4e, 0x65, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x15, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x68, 0x61,
	0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x4e, 0x65, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x13, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x22, 0x92, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x58, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x18, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22,
	0x2d, 0x0a, 0x15, 0x4e, 0x65, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x90,
	0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x22, 0x55, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x35, 0x0a, 0x17, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x77, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x6b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x4e, 0x0a, 0x14, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x12,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x90, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x6e, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4e, 0x0a, 0x14, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x12, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x6e, 0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65,
	0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x64, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x1f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65,
	0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x9c,
	0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79,
	0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e,
	0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79,
	0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x8f, 0x01,
	0x0a, 0x22, 0x47, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70,
	0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x69, 0x0a, 0x1e, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f,
	0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74,
	0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x1b, 0x7a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x22,
	0x8e, 0x01, 0x0a, 0x1e, 0x4e, 0x65, 0x77, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48,
	0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x6c, 0x0a, 0x1e, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f,
	0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x77, 0x68, 0x61,
	0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x4e, 0x65, 0x77, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f,
	0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x1b, 0x7a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70,
	0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x22, 0xb4, 0x01, 0x0a, 0x1d, 0x4e, 0x65, 0x77, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74,
	0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x44, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x4e, 0x65, 0x77,
	0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x52, 0x0a, 0x22, 0x4e, 0x65, 0x77, 0x5a, 0x65,
	0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x29,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79,
	0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e,
	0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f,
	0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x22, 0x71, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68,
	0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x21, 0x7a, 0x65, 0x72,
	0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x1d, 0x7a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79,
	0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x28, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65,
	0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x6e, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x46,
	0x0a, 0x20, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x7a, 0x65, 0x72, 0x6f, 0x53, 0x68,
	0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x5a, 0x65,
	0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x5a, 0x65, 0x72,
	0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53,
	0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x67, 0x0a, 0x1d, 0x7a, 0x65, 0x72,
	0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x5a, 0x65, 0x72, 0x6f,
	0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x1a, 0x7a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74,
	0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x22, 0x72, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5a, 0x65, 0x72,
	0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x28, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74,
	0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e,
	0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x24, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x67, 0x0a, 0x1d, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f,
	0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x6e, 0x65, 0x77, 0x2e, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70,
	0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x1a, 0x7a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x28,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79,
	0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65,
	0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74,
	0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x7d,
	0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74,
	0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x55, 0x0a, 0x28, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x23, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x82, 0x01,
	0x0a, 0x1b, 0x4e, 0x65, 0x77, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70,
	0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x63, 0x0a,
	0x1b, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74,
	0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x4e, 0x65,
	0x77, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x18, 0x7a, 0x65, 0x72, 0x6f, 0x53, 0x68,
	0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x22, 0x4a, 0x0a, 0x1a, 0x4e, 0x65, 0x77, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f,
	0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x9c,
	0x01, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f,
	0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e,
	0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f,
	0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x68, 0x0a,
	0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48,
	0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x1e, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74,
	0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1a, 0x7a, 0x65, 0x72,
	0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68,
	0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x22, 0x65, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65,
	0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x1d, 0x7a, 0x65, 0x72,
	0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x19, 0x7a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68,
	0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x22,
	0x47, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74,
	0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x5a,
	0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68,
	0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5e, 0x0a, 0x1a, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68,
	0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x6e, 0x65, 0x77, 0x2e, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70,
	0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x17, 0x7a, 0x65,
	0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x4e, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5a,
	0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72,
	0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5e, 0x0a, 0x1a, 0x7a, 0x65, 0x72, 0x6f,
	0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74,
	0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52,
	0x17, 0x7a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x9a, 0x01, 0x0a, 0x25, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74,
	0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68,
	0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x74, 0x0a, 0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a,
	0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x25, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f,
	0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68,
	0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x16, 0x4e,
	0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x15, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e,
	0x4e, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x13, 0x69, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x15, 0x4e,
	0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x67, 0x65, 0x78, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e,
	0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65,
	0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x58, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x69, 0x6e, 0x66,
	0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x22, 0x6e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x50, 0x0a, 0x15, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x13, 0x69, 0x6e,
	0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x22, 0x90, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x22, 0x55, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65,
	0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x6b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4e, 0x0a, 0x14, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x12, 0x69, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x67, 0x65, 0x78, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x6e, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4e, 0x0a, 0x14, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x12, 0x69, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x6e, 0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65,
	0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x64, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x1f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xf2,
	0x01, 0x0a, 0x04, 0x46, 0x65, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x89, 0x02, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x84, 0x02, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xf4, 0x01, 0x0a, 0x1a, 0x5a, 0x65, 0x72, 0x6f, 0x53,
	0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x5a, 0x65,
	0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x95, 0x01,
	0x0a, 0x17, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68,
	0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xf1, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x67, 0x65, 0x78,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x3d, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f,
	0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x4e, 0x65, 0x77,
	0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x46, 0x65, 0x65, 0x64, 0x73, 0x22,
	0x41, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x66, 0x65, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65,
	0x77, 0x2e, 0x4e, 0x65, 0x77, 0x46, 0x65, 0x65, 0x64, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x46, 0x65,
	0x65, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x0c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x46, 0x65, 0x65, 0x64, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x46,
	0x65, 0x65, 0x64, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x22, 0x7b, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x18, 0x6e, 0x65, 0x77, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x6e, 0x65, 0x77, 0x2e, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x15, 0x6e, 0x65, 0x77, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x22, 0x77, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x17, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e,
	0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x14, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x93, 0x01, 0x0a, 0x1e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x61, 0x0a, 0x1b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x30, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x4b, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x22, 0x7f,
	0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x5b, 0x0a, 0x19, 0x6e, 0x65, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77,
	0x2e, 0x4e, 0x65, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x16, 0x6e, 0x65, 0x77, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22,
	0x7b, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x58, 0x0a, 0x18, 0x6e, 0x65, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e,
	0x4e, 0x65, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x15, 0x6e, 0x65, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x2e, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x97, 0x01, 0x0a,
	0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x64, 0x0a, 0x1c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65,
	0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x19, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x31, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x25, 0x47, 0x65, 0x74,
	0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x22, 0xa0,
	0x01, 0x0a, 0x28, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f,
	0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x74, 0x0a, 0x22, 0x6e,
	0x65, 0x77, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70,
	0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e,
	0x65, 0x77, 0x2e, 0x4e, 0x65, 0x77, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79,
	0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x1e, 0x6e, 0x65, 0x77, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79,
	0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x22, 0x9c, 0x01, 0x0a, 0x27, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f,
	0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x71, 0x0a,
	0x21, 0x6e, 0x65, 0x77, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68,
	0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x6e, 0x65, 0x77, 0x2e, 0x4e, 0x65, 0x77, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48,
	0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x1d, 0x6e, 0x65, 0x77, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79,
	0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x22, 0x36, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48,
	0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x27, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74,
	0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x7d, 0x0a, 0x25, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68,
	0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79,
	0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x21, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f,
	0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x22, 0x39, 0x0a, 0x27, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a, 0x65, 0x72,
	0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb5,
	0x01, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f,
	0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x6b, 0x0a, 0x1f, 0x6e, 0x65, 0x77,
	0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74,
	0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x4e, 0x65,
	0x77, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x1b, 0x6e, 0x65, 0x77, 0x5a, 0x65,
	0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x68, 0x0a, 0x1e, 0x6e, 0x65, 0x77, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f,
	0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x6e, 0x65, 0x77, 0x2e, 0x4e, 0x65, 0x77, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48,
	0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x1a,
	0x6e, 0x65, 0x77, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74,
	0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x5f, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x22, 0xd8, 0x01, 0x0a, 0x24,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79,
	0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x74, 0x0a, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x7a, 0x65, 0x72, 0x6f,
	0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5a,
	0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x1e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5a,
	0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x62, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x22, 0x7f, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x19, 0x6e,
	0x65, 0x77, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x52, 0x16, 0x6e, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x7b, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x18, 0x6e,
	0x65, 0x77, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x15,
	0x6e, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x22, 0x2e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x64, 0x0a, 0x1c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x19, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x22,
	0x31, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x32, 0xfa, 0x2c, 0x0a, 0x08, 0x57, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x12,
	0x51, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x73, 0x12, 0x19, 0x2e, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65,
	0x77, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x0e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x08, 0x12, 0x06, 0x2f, 0x66, 0x65, 0x65,
	0x64, 0x73, 0x12, 0x65, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64,
	0x73, 0x12, 0x1c, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x06, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x73, 0x3a, 0x09,
	0x6e, 0x65, 0x77, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x73, 0x12, 0x60, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x1b, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e,
	0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x05, 0x2f, 0x66, 0x65, 0x65,
	0x64, 0x3a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x12, 0x18, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65,
	0x77, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x69, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x1b, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x68, 0x61,
	0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a,
	0x1a, 0x0a, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x0c, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x12, 0x5b, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x1b, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x6e, 0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x2a, 0x0a, 0x2f, 0x66, 0x65,
	0x65, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x88, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x26, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x74, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x12, 0xab, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x29, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x77, 0x68, 0x61,
	0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x22, 0x16,
	0x2f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x3a, 0x18, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0xa6, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65,
	0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x22, 0x15, 0x2f, 0x74, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x3a, 0x17, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x77, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x25, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x74, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xaf, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x28, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x1a, 0x1a,
	0x2f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x1b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x28, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c,
	0x2a, 0x1a, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8d, 0x01, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e,
	0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x12, 0x18, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0xb1, 0x01, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x77, 0x68, 0x61,
	0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65,
	0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x22, 0x18, 0x2f, 0x74, 0x77,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x71, 0x75,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x3a, 0x19, 0x6e, 0x65, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0xab, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x22, 0x16, 0x2f, 0x74,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x3a, 0x18, 0x6e, 0x65, 0x77, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x8d,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x12, 0x1b, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xb4,
	0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65,
	0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x1a, 0x1b, 0x2f, 0x74, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x1c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x29, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x2a, 0x1b, 0x2f, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xac,
	0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79,
	0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x2f, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74,
	0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65,
	0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x7a,
	0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0xd9, 0x01,
	0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74,
	0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x32, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70,
	0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e,
	0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f,
	0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x45, 0x22, 0x1f, 0x2f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74,
	0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x3a, 0x22, 0x6e, 0x65, 0x77, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f,
	0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0xd4, 0x01, 0x0a, 0x20, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x31,
	0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74,
	0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x43, 0x22, 0x1e, 0x2f,
	0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68,
	0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x3a, 0x21, 0x6e,
	0x65, 0x77, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70,
	0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0xad, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74,
	0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x2e, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65,
	0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65,
	0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x7a, 0x65,
	0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0xdd, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53,
	0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48,
	0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68,
	0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x4c, 0x1a, 0x23, 0x2f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74,
	0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x25, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70,
	0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0xb6, 0x01, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53,
	0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48,
	0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x6e, 0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68,
	0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x25, 0x2a, 0x23, 0x2f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74,
	0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xe1, 0x01, 0x0a, 0x1e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2f, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65,
	0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a,
	0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x5c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x56, 0x22, 0x33, 0x2f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73,
	0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x3a, 0x1f, 0x6e, 0x65,
	0x77, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0xdc, 0x01,
	0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74,
	0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x2e, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x5a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x54, 0x22, 0x32, 0x2f, 0x7a, 0x65, 0x72, 0x6f, 0x5f,
	0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x3a, 0x1e, 0x6e, 0x65,
	0x77, 0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0xbe, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f,
	0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2b, 0x2e, 0x77, 0x68,
	0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68,
	0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73,
	0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48,
	0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x12, 0x3d,
	0x2f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74,
	0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x7b,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x2f, 0x7b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xeb, 0x01,
	0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74,
	0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x2e, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x69, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x63, 0x1a, 0x3d, 0x2f, 0x7a, 0x65, 0x72, 0x6f, 0x5f,
	0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2f, 0x7b, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74,
	0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0xc7, 0x01, 0x0a, 0x1d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a, 0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79,
	0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2e, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a,
	0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5a,
	0x65, 0x72, 0x6f, 0x53, 0x68, 0x6f, 0x74, 0x48, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3f, 0x2a, 0x3d, 0x2f, 0x7a, 0x65, 0x72, 0x6f, 0x5f, 0x73, 0x68,
	0x6f, 0x74, 0x5f, 0x68, 0x79, 0x70, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2f, 0x7b, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x8b, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x27, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0xaf, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x2a, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x33, 0x22, 0x16, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x3a, 0x19, 0x6e, 0x65, 0x77, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0xaa, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75,
	0x6c, 0x65, 0x12, 0x29, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x31, 0x22, 0x15, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x3a, 0x18, 0x6e, 0x65, 0x77, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0xb3, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x29,
	0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x77, 0x68, 0x61, 0x74,
	0x73, 0x6e, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x1a, 0x1a, 0x2f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x75, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x1c, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x29, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x2a, 0x1a, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42,
	0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x69, 0x73, 0x74, 0x2f, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x77, 0x68, 0x61, 0x74, 0x73, 0x6e, 0x65, 0x77,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_whatsnew_proto_rawDescOnce sync.Once
	file_whatsnew_proto_rawDescData = file_whatsnew_proto_rawDesc
)

func file_whatsnew_proto_rawDescGZIP() []byte {
	file_whatsnew_proto_rawDescOnce.Do(func() {
		file_whatsnew_proto_rawDescData = protoimpl.X.CompressGZIP(file_whatsnew_proto_rawDescData)
	})
	return file_whatsnew_proto_rawDescData
}

var file_whatsnew_proto_msgTypes = make([]protoimpl.MessageInfo, 132)
var file_whatsnew_proto_goTypes = []interface{}{
	(*ResponseErrors)(nil),                            // 0: whatsnew.ResponseErrors
	(*ResponseError)(nil),                             // 1: whatsnew.ResponseError
	(*NewFeeds)(nil),                                  // 2: whatsnew.NewFeeds
	(*NewFeed)(nil),                                   // 3: whatsnew.NewFeed
	(*CreateFeedsResponse)(nil),                       // 4: whatsnew.CreateFeedsResponse
	(*CreateFeedsData)(nil),                           // 5: whatsnew.CreateFeedsData
	(*GetFeedsResponse)(nil),                          // 6: whatsnew.GetFeedsResponse
	(*GetFeedsData)(nil),                              // 7: whatsnew.GetFeedsData
	(*CreateFeedResponse)(nil),                        // 8: whatsnew.CreateFeedResponse
	(*CreateFeedData)(nil),                            // 9: whatsnew.CreateFeedData
	(*GetFeedResponse)(nil),                           // 10: whatsnew.GetFeedResponse
	(*GetFeedData)(nil),                               // 11: whatsnew.GetFeedData
	(*UpdatedFeed)(nil),                               // 12: whatsnew.UpdatedFeed
	(*UpdateFeedResponse)(nil),                        // 13: whatsnew.UpdateFeedResponse
	(*UpdateFeedData)(nil),                            // 14: whatsnew.UpdateFeedData
	(*DeleteFeedResponse)(nil),                        // 15: whatsnew.DeleteFeedResponse
	(*DeleteFeedData)(nil),                            // 16: whatsnew.DeleteFeedData
	(*GetUserTwitterSourcesResponse)(nil),             // 17: whatsnew.GetUserTwitterSourcesResponse
	(*GetUserTwitterSourcesData)(nil),                 // 18: whatsnew.GetUserTwitterSourcesData
	(*NewUserTwitterSources)(nil),                     // 19: whatsnew.NewUserTwitterSources
	(*CreateUserTwitterSourcesResponse)(nil),          // 20: whatsnew.CreateUserTwitterSourcesResponse
	(*CreateUserTwitterSourcesData)(nil),              // 21: whatsnew.CreateUserTwitterSourcesData
	(*NewUserTwitterSource)(nil),                      // 22: whatsnew.NewUserTwitterSource
	(*CreateUserTwitterSourceResponse)(nil),           // 23: whatsnew.CreateUserTwitterSourceResponse
	(*CreateUserTwitterSourceData)(nil),               // 24: whatsnew.CreateUserTwitterSourceData
	(*GetUserTwitterSourceResponse)(nil),              // 25: whatsnew.GetUserTwitterSourceResponse
	(*GetUserTwitterSourceData)(nil),                  // 26: whatsnew.GetUserTwitterSourceData
	(*UpdatedUserTwitterSource)(nil),                  // 27: whatsnew.UpdatedUserTwitterSource
	(*UpdateUserTwitterSourceResponse)(nil),           // 28: whatsnew.UpdateUserTwitterSourceResponse
	(*UpdateUserTwitterSourceData)(nil),               // 29: whatsnew.UpdateUserTwitterSourceData
	(*DeleteUserTwitterSourceResponse)(nil),           // 30: whatsnew.DeleteUserTwitterSourceResponse
	(*DeleteUserTwitterSourceData)(nil),               // 31: whatsnew.DeleteUserTwitterSourceData
	(*GetQueryTwitterSourcesResponse)(nil),            // 32: whatsnew.GetQueryTwitterSourcesResponse
	(*GetQueryTwitterSourcesData)(nil),                // 33: whatsnew.GetQueryTwitterSourcesData
	(*NewQueryTwitterSources)(nil),                    // 34: whatsnew.NewQueryTwitterSources
	(*CreateQueryTwitterSourcesResponse)(nil),         // 35: whatsnew.CreateQueryTwitterSourcesResponse
	(*CreateQueryTwitterSourcesData)(nil),             // 36: whatsnew.CreateQueryTwitterSourcesData
	(*NewQueryTwitterSource)(nil),                     // 37: whatsnew.NewQueryTwitterSource
	(*CreateQueryTwitterSourceResponse)(nil),          // 38: whatsnew.CreateQueryTwitterSourceResponse
	(*CreateQueryTwitterSourceData)(nil),              // 39: whatsnew.CreateQueryTwitterSourceData
	(*GetQueryTwitterSourceResponse)(nil),             // 40: whatsnew.GetQueryTwitterSourceResponse
	(*GetQueryTwitterSourceData)(nil),                 // 41: whatsnew.GetQueryTwitterSourceData
	(*UpdatedQueryTwitterSource)(nil),                 // 42: whatsnew.UpdatedQueryTwitterSource
	(*UpdateQueryTwitterSourceResponse)(nil),          // 43: whatsnew.UpdateQueryTwitterSourceResponse
	(*UpdateQueryTwitterSourceData)(nil),              // 44: whatsnew.UpdateQueryTwitterSourceData
	(*DeleteQueryTwitterSourceResponse)(nil),          // 45: whatsnew.DeleteQueryTwitterSourceResponse
	(*DeleteQueryTwitterSourceData)(nil),              // 46: whatsnew.DeleteQueryTwitterSourceData
	(*GetZeroShotHypothesisTemplatesResponse)(nil),    // 47: whatsnew.GetZeroShotHypothesisTemplatesResponse
	(*GetZeroShotHypothesisTemplatesData)(nil),        // 48: whatsnew.GetZeroShotHypothesisTemplatesData
	(*NewZeroShotHypothesisTemplates)(nil),            // 49: whatsnew.NewZeroShotHypothesisTemplates
	(*NewZeroShotHypothesisTemplate)(nil),             // 50: whatsnew.NewZeroShotHypothesisTemplate
	(*NewZeroShotHypothesisTemplateLabel)(nil),        // 51: whatsnew.NewZeroShotHypothesisTemplateLabel
	(*CreateZeroShotHypothesisTemplatesResponse)(nil), // 52: whatsnew.CreateZeroShotHypothesisTemplatesResponse
	(*CreateZeroShotHypothesisTemplatesData)(nil),     // 53: whatsnew.CreateZeroShotHypothesisTemplatesData
	(*CreateZeroShotHypothesisTemplateResponse)(nil),  // 54: whatsnew.CreateZeroShotHypothesisTemplateResponse
	(*CreateZeroShotHypothesisTemplateData)(nil),      // 55: whatsnew.CreateZeroShotHypothesisTemplateData
	(*GetZeroShotHypothesisTemplateResponse)(nil),     // 56: whatsnew.GetZeroShotHypothesisTemplateResponse
	(*GetZeroShotHypothesisTemplateData)(nil),         // 57: whatsnew.GetZeroShotHypothesisTemplateData
	(*UpdatedZeroShotHypothesisTemplate)(nil),         // 58: whatsnew.UpdatedZeroShotHypothesisTemplate
	(*UpdateZeroShotHypothesisTemplateResponse)(nil),  // 59: whatsnew.UpdateZeroShotHypothesisTemplateResponse
	(*UpdateZeroShotHypothesisTemplateData)(nil),      // 60: whatsnew.UpdateZeroShotHypothesisTemplateData
	(*DeleteZeroShotHypothesisTemplateResponse)(nil),  // 61: whatsnew.DeleteZeroShotHypothesisTemplateResponse
	(*DeleteZeroShotHypothesisTemplateData)(nil),      // 62: whatsnew.DeleteZeroShotHypothesisTemplateData
	(*NewZeroShotHypothesisLabels)(nil),               // 63: whatsnew.NewZeroShotHypothesisLabels
	(*NewZeroShotHypothesisLabel)(nil),                // 64: whatsnew.NewZeroShotHypothesisLabel
	(*CreateZeroShotHypothesisLabelsResponse)(nil),    // 65: whatsnew.CreateZeroShotHypothesisLabelsResponse
	(*CreateZeroShotHypothesisLabelsData)(nil),        // 66: whatsnew.CreateZeroShotHypothesisLabelsData
	(*CreateZeroShotHypothesisLabelResponse)(nil),     // 67: whatsnew.CreateZeroShotHypothesisLabelResponse
	(*CreateZeroShotHypothesisLabelData)(nil),         // 68: whatsnew.CreateZeroShotHypothesisLabelData
	(*GetZeroShotHypothesisLabelResponse)(nil),        // 69: whatsnew.GetZeroShotHypothesisLabelResponse
	(*GetZeroShotHypothesisLabelData)(nil),            // 70: whatsnew.GetZeroShotHypothesisLabelData
	(*UpdatedZeroShotHypothesisLabel)(nil),            // 71: whatsnew.UpdatedZeroShotHypothesisLabel
	(*UpdateZeroShotHypothesisLabelResponse)(nil),     // 72: whatsnew.UpdateZeroShotHypothesisLabelResponse
	(*UpdateZeroShotHypothesisLabelData)(nil),         // 73: whatsnew.UpdateZeroShotHypothesisLabelData
	(*DeleteZeroShotHypothesisLabelResponse)(nil),     // 74: whatsnew.DeleteZeroShotHypothesisLabelResponse
	(*DeleteZeroShotHypothesisLabelData)(nil),         // 75: whatsnew.DeleteZeroShotHypothesisLabelData
	(*NewInfoExtractionRules)(nil),                    // 76: whatsnew.NewInfoExtractionRules
	(*NewInfoExtractionRule)(nil),                     // 77: whatsnew.NewInfoExtractionRule
	(*CreateInfoExtractionRulesResponse)(nil),         // 78: whatsnew.CreateInfoExtractionRulesResponse
	(*CreateInfoExtractionRulesData)(nil),             // 79: whatsnew.CreateInfoExtractionRulesData
	(*GetInfoExtractionRulesResponse)(nil),            // 80: whatsnew.GetInfoExtractionRulesResponse
	(*GetInfoExtractionRulesData)(nil),                // 81: whatsnew.GetInfoExtractionRulesData
	(*CreateInfoExtractionRuleResponse)(nil),          // 82: whatsnew.CreateInfoExtractionRuleResponse
	(*CreateInfoExtractionRuleData)(nil),              // 83: whatsnew.CreateInfoExtractionRuleData
	(*GetInfoExtractionRuleResponse)(nil),             // 84: whatsnew.GetInfoExtractionRuleResponse
	(*GetInfoExtractionRuleData)(nil),                 // 85: whatsnew.GetInfoExtractionRuleData
	(*UpdatedInfoExtractionRule)(nil),                 // 86: whatsnew.UpdatedInfoExtractionRule
	(*UpdateInfoExtractionRuleResponse)(nil),          // 87: whatsnew.UpdateInfoExtractionRuleResponse
	(*UpdateInfoExtractionRuleData)(nil),              // 88: whatsnew.UpdateInfoExtractionRuleData
	(*DeleteInfoExtractionRuleResponse)(nil),          // 89: whatsnew.DeleteInfoExtractionRuleResponse
	(*DeleteInfoExtractionRuleData)(nil),              // 90: whatsnew.DeleteInfoExtractionRuleData
	(*Feed)(nil),                                      // 91: whatsnew.Feed
	(*UserTwitterSource)(nil),                         // 92: whatsnew.UserTwitterSource
	(*QueryTwitterSource)(nil),                        // 93: whatsnew.QueryTwitterSource
	(*ZeroShotHypothesisTemplate)(nil),                // 94: whatsnew.ZeroShotHypothesisTemplate
	(*ZeroShotHypothesisLabel)(nil),                   // 95: whatsnew.ZeroShotHypothesisLabel
	(*InfoExtractionRule)(nil),                        // 96: whatsnew.InfoExtractionRule
	(*GetFeedsRequest)(nil),                           // 97: whatsnew.GetFeedsRequest
	(*CreateFeedsRequest)(nil),                        // 98: whatsnew.CreateFeedsRequest
	(*CreateFeedRequest)(nil),                         // 99: whatsnew.CreateFeedRequest
	(*GetFeedRequest)(nil),                            // 100: whatsnew.GetFeedRequest
	(*UpdateFeedRequest)(nil),                         // 101: whatsnew.UpdateFeedRequest
	(*DeleteFeedRequest)(nil),                         // 102: whatsnew.DeleteFeedRequest
	(*GetUserTwitterSourcesRequest)(nil),              // 103: whatsnew.GetUserTwitterSourcesRequest
	(*CreateUserTwitterSourcesRequest)(nil),           // 104: whatsnew.CreateUserTwitterSourcesRequest
	(*CreateUserTwitterSourceRequest)(nil),            // 105: whatsnew.CreateUserTwitterSourceRequest
	(*GetUserTwitterSourceRequest)(nil),               // 106: whatsnew.GetUserTwitterSourceRequest
	(*UpdateUserTwitterSourceRequest)(nil),            // 107: whatsnew.UpdateUserTwitterSourceRequest
	(*DeleteUserTwitterSourceRequest)(nil),            // 108: whatsnew.DeleteUserTwitterSourceRequest
	(*GetQueryTwitterSourcesRequest)(nil),             // 109: whatsnew.GetQueryTwitterSourcesRequest
	(*CreateQueryTwitterSourcesRequest)(nil),          // 110: whatsnew.CreateQueryTwitterSourcesRequest
	(*CreateQueryTwitterSourceRequest)(nil),           // 111: whatsnew.CreateQueryTwitterSourceRequest
	(*GetQueryTwitterSourceRequest)(nil),              // 112: whatsnew.GetQueryTwitterSourceRequest
	(*UpdateQueryTwitterSourceRequest)(nil),           // 113: whatsnew.UpdateQueryTwitterSourceRequest
	(*DeleteQueryTwitterSourceRequest)(nil),           // 114: whatsnew.DeleteQueryTwitterSourceRequest
	(*GetZeroShotHypothesisTemplatesRequest)(nil),     // 115: whatsnew.GetZeroShotHypothesisTemplatesRequest
	(*CreateZeroShotHypothesisTemplatesRequest)(nil),  // 116: whatsnew.CreateZeroShotHypothesisTemplatesRequest
	(*CreateZeroShotHypothesisTemplateRequest)(nil),   // 117: whatsnew.CreateZeroShotHypothesisTemplateRequest
	(*GetZeroShotHypothesisTemplateRequest)(nil),      // 118: whatsnew.GetZeroShotHypothesisTemplateRequest
	(*UpdateZeroShotHypothesisTemplateRequest)(nil),   // 119: whatsnew.UpdateZeroShotHypothesisTemplateRequest
	(*DeleteZeroShotHypothesisTemplateRequest)(nil),   // 120: whatsnew.DeleteZeroShotHypothesisTemplateRequest
	(*CreateZeroShotHypothesisLabelsRequest)(nil),     // 121: whatsnew.CreateZeroShotHypothesisLabelsRequest
	(*CreateZeroShotHypothesisLabelRequest)(nil),      // 122: whatsnew.CreateZeroShotHypothesisLabelRequest
	(*GetZeroShotHypothesisLabelRequest)(nil),         // 123: whatsnew.GetZeroShotHypothesisLabelRequest
	(*UpdateZeroShotHypothesisLabelRequest)(nil),      // 124: whatsnew.UpdateZeroShotHypothesisLabelRequest
	(*DeleteZeroShotHypothesisLabelRequest)(nil),      // 125: whatsnew.DeleteZeroShotHypothesisLabelRequest
	(*GetInfoExtractionRulesRequest)(nil),             // 126: whatsnew.GetInfoExtractionRulesRequest
	(*CreateInfoExtractionRulesRequest)(nil),          // 127: whatsnew.CreateInfoExtractionRulesRequest
	(*CreateInfoExtractionRuleRequest)(nil),           // 128: whatsnew.CreateInfoExtractionRuleRequest
	(*GetInfoExtractionRuleRequest)(nil),              // 129: whatsnew.GetInfoExtractionRuleRequest
	(*UpdateInfoExtractionRuleRequest)(nil),           // 130: whatsnew.UpdateInfoExtractionRuleRequest
	(*DeleteInfoExtractionRuleRequest)(nil),           // 131: whatsnew.DeleteInfoExtractionRuleRequest
}
var file_whatsnew_proto_depIdxs = []int32{
	1,   // 0: whatsnew.ResponseErrors.value:type_name -> whatsnew.ResponseError
	3,   // 1: whatsnew.NewFeeds.feeds:type_name -> whatsnew.NewFeed
	5,   // 2: whatsnew.CreateFeedsResponse.data:type_name -> whatsnew.CreateFeedsData
	0,   // 3: whatsnew.CreateFeedsResponse.errors:type_name -> whatsnew.ResponseErrors
	7,   // 4: whatsnew.GetFeedsResponse.data:type_name -> whatsnew.GetFeedsData
	0,   // 5: whatsnew.GetFeedsResponse.errors:type_name -> whatsnew.ResponseErrors
	91,  // 6: whatsnew.GetFeedsData.feeds:type_name -> whatsnew.Feed
	9,   // 7: whatsnew.CreateFeedResponse.data:type_name -> whatsnew.CreateFeedData
	0,   // 8: whatsnew.CreateFeedResponse.errors:type_name -> whatsnew.ResponseErrors
	11,  // 9: whatsnew.GetFeedResponse.data:type_name -> whatsnew.GetFeedData
	0,   // 10: whatsnew.GetFeedResponse.errors:type_name -> whatsnew.ResponseErrors
	91,  // 11: whatsnew.GetFeedData.feed:type_name -> whatsnew.Feed
	14,  // 12: whatsnew.UpdateFeedResponse.data:type_name -> whatsnew.UpdateFeedData
	0,   // 13: whatsnew.UpdateFeedResponse.errors:type_name -> whatsnew.ResponseErrors
	91,  // 14: whatsnew.UpdateFeedData.feed:type_name -> whatsnew.Feed
	16,  // 15: whatsnew.DeleteFeedResponse.data:type_name -> whatsnew.DeleteFeedData
	0,   // 16: whatsnew.DeleteFeedResponse.errors:type_name -> whatsnew.ResponseErrors
	18,  // 17: whatsnew.GetUserTwitterSourcesResponse.data:type_name -> whatsnew.GetUserTwitterSourcesData
	0,   // 18: whatsnew.GetUserTwitterSourcesResponse.errors:type_name -> whatsnew.ResponseErrors
	92,  // 19: whatsnew.GetUserTwitterSourcesData.user_twitter_sources:type_name -> whatsnew.UserTwitterSource
	22,  // 20: whatsnew.NewUserTwitterSources.user_twitter_sources:type_name -> whatsnew.NewUserTwitterSource
	21,  // 21: whatsnew.CreateUserTwitterSourcesResponse.data:type_name -> whatsnew.CreateUserTwitterSourcesData
	0,   // 22: whatsnew.CreateUserTwitterSourcesResponse.errors:type_name -> whatsnew.ResponseErrors
	24,  // 23: whatsnew.CreateUserTwitterSourceResponse.data:type_name -> whatsnew.CreateUserTwitterSourceData
	0,   // 24: whatsnew.CreateUserTwitterSourceResponse.errors:type_name -> whatsnew.ResponseErrors
	26,  // 25: whatsnew.GetUserTwitterSourceResponse.data:type_name -> whatsnew.GetUserTwitterSourceData
	0,   // 26: whatsnew.GetUserTwitterSourceResponse.errors:type_name -> whatsnew.ResponseErrors
	92,  // 27: whatsnew.GetUserTwitterSourceData.user_twitter_source:type_name -> whatsnew.UserTwitterSource
	29,  // 28: whatsnew.UpdateUserTwitterSourceResponse.data:type_name -> whatsnew.UpdateUserTwitterSourceData
	0,   // 29: whatsnew.UpdateUserTwitterSourceResponse.errors:type_name -> whatsnew.ResponseErrors
	92,  // 30: whatsnew.UpdateUserTwitterSourceData.user_twitter_source:type_name -> whatsnew.UserTwitterSource
	31,  // 31: whatsnew.DeleteUserTwitterSourceResponse.data:type_name -> whatsnew.DeleteUserTwitterSourceData
	0,   // 32: whatsnew.DeleteUserTwitterSourceResponse.errors:type_name -> whatsnew.ResponseErrors
	33,  // 33: whatsnew.GetQueryTwitterSourcesResponse.data:type_name -> whatsnew.GetQueryTwitterSourcesData
	0,   // 34: whatsnew.GetQueryTwitterSourcesResponse.errors:type_name -> whatsnew.ResponseErrors
	93,  // 35: whatsnew.GetQueryTwitterSourcesData.query_twitter_sources:type_name -> whatsnew.QueryTwitterSource
	37,  // 36: whatsnew.NewQueryTwitterSources.query_twitter_sources:type_name -> whatsnew.NewQueryTwitterSource
	36,  // 37: whatsnew.CreateQueryTwitterSourcesResponse.data:type_name -> whatsnew.CreateQueryTwitterSourcesData
	0,   // 38: whatsnew.CreateQueryTwitterSourcesResponse.errors:type_name -> whatsnew.ResponseErrors
	39,  // 39: whatsnew.CreateQueryTwitterSourceResponse.data:type_name -> whatsnew.CreateQueryTwitterSourceData
	0,   // 40: whatsnew.CreateQueryTwitterSourceResponse.errors:type_name -> whatsnew.ResponseErrors
	41,  // 41: whatsnew.GetQueryTwitterSourceResponse.data:type_name -> whatsnew.GetQueryTwitterSourceData
	0,   // 42: whatsnew.GetQueryTwitterSourceResponse.errors:type_name -> whatsnew.ResponseErrors
	93,  // 43: whatsnew.GetQueryTwitterSourceData.query_twitter_source:type_name -> whatsnew.QueryTwitterSource
	44,  // 44: whatsnew.UpdateQueryTwitterSourceResponse.data:type_name -> whatsnew.UpdateQueryTwitterSourceData
	0,   // 45: whatsnew.UpdateQueryTwitterSourceResponse.errors:type_name -> whatsnew.ResponseErrors
	93,  // 46: whatsnew.UpdateQueryTwitterSourceData.query_twitter_source:type_name -> whatsnew.QueryTwitterSource
	46,  // 47: whatsnew.DeleteQueryTwitterSourceResponse.data:type_name -> whatsnew.DeleteQueryTwitterSourceData
	0,   // 48: whatsnew.DeleteQueryTwitterSourceResponse.errors:type_name -> whatsnew.ResponseErrors
	48,  // 49: whatsnew.GetZeroShotHypothesisTemplatesResponse.data:type_name -> whatsnew.GetZeroShotHypothesisTemplatesData
	0,   // 50: whatsnew.GetZeroShotHypothesisTemplatesResponse.errors:type_name -> whatsnew.ResponseErrors
	94,  // 51: whatsnew.GetZeroShotHypothesisTemplatesData.zero_shot_hypothesis_templates:type_name -> whatsnew.ZeroShotHypothesisTemplate
	50,  // 52: whatsnew.NewZeroShotHypothesisTemplates.zero_shot_hypothesis_templates:type_name -> whatsnew.NewZeroShotHypothesisTemplate
	51,  // 53: whatsnew.NewZeroShotHypothesisTemplate.labels:type_name -> whatsnew.NewZeroShotHypothesisTemplateLabel
	53,  // 54: whatsnew.CreateZeroShotHypothesisTemplatesResponse.data:type_name -> whatsnew.CreateZeroShotHypothesisTemplatesData
	0,   // 55: whatsnew.CreateZeroShotHypothesisTemplatesResponse.errors:type_name -> whatsnew.ResponseErrors
	55,  // 56: whatsnew.CreateZeroShotHypothesisTemplateResponse.data:type_name -> whatsnew.CreateZeroShotHypothesisTemplateData
	0,   // 57: whatsnew.CreateZeroShotHypothesisTemplateResponse.errors:type_name -> whatsnew.ResponseErrors
	57,  // 58: whatsnew.GetZeroShotHypothesisTemplateResponse.data:type_name -> whatsnew.GetZeroShotHypothesisTemplateData
	0,   // 59: whatsnew.GetZeroShotHypothesisTemplateResponse.errors:type_name -> whatsnew.ResponseErrors
	94,  // 60: whatsnew.GetZeroShotHypothesisTemplateData.zero_shot_hypothesis_template:type_name -> whatsnew.ZeroShotHypothesisTemplate
	60,  // 61: whatsnew.UpdateZeroShotHypothesisTemplateResponse.data:type_name -> whatsnew.UpdateZeroShotHypothesisTemplateData
	0,   // 62: whatsnew.UpdateZeroShotHypothesisTemplateResponse.errors:type_name -> whatsnew.ResponseErrors
	94,  // 63: whatsnew.UpdateZeroShotHypothesisTemplateData.zero_shot_hypothesis_template:type_name -> whatsnew.ZeroShotHypothesisTemplate
	62,  // 64: whatsnew.DeleteZeroShotHypothesisTemplateResponse.data:type_name -> whatsnew.DeleteZeroShotHypothesisTemplateData
	0,   // 65: whatsnew.DeleteZeroShotHypothesisTemplateResponse.errors:type_name -> whatsnew.ResponseErrors
	64,  // 66: whatsnew.NewZeroShotHypothesisLabels.zero_shot_hypothesis_labels:type_name -> whatsnew.NewZeroShotHypothesisLabel
	66,  // 67: whatsnew.CreateZeroShotHypothesisLabelsResponse.data:type_name -> whatsnew.CreateZeroShotHypothesisLabelsData
	0,   // 68: whatsnew.CreateZeroShotHypothesisLabelsResponse.errors:type_name -> whatsnew.ResponseErrors
	68,  // 69: whatsnew.CreateZeroShotHypothesisLabelResponse.data:type_name -> whatsnew.CreateZeroShotHypothesisLabelData
	0,   // 70: whatsnew.CreateZeroShotHypothesisLabelResponse.errors:type_name -> whatsnew.ResponseErrors
	70,  // 71: whatsnew.GetZeroShotHypothesisLabelResponse.data:type_name -> whatsnew.GetZeroShotHypothesisLabelData
	0,   // 72: whatsnew.GetZeroShotHypothesisLabelResponse.errors:type_name -> whatsnew.ResponseErrors
	95,  // 73: whatsnew.GetZeroShotHypothesisLabelData.zero_shot_hypothesis_label:type_name -> whatsnew.ZeroShotHypothesisLabel
	73,  // 74: whatsnew.UpdateZeroShotHypothesisLabelResponse.data:type_name -> whatsnew.UpdateZeroShotHypothesisLabelData
	0,   // 75: whatsnew.UpdateZeroShotHypothesisLabelResponse.errors:type_name -> whatsnew.ResponseErrors
	95,  // 76: whatsnew.UpdateZeroShotHypothesisLabelData.zero_shot_hypothesis_label:type_name -> whatsnew.ZeroShotHypothesisLabel
	75,  // 77: whatsnew.DeleteZeroShotHypothesisLabelResponse.data:type_name -> whatsnew.DeleteZeroShotHypothesisLabelData
	0,   // 78: whatsnew.DeleteZeroShotHypothesisLabelResponse.errors:type_name -> whatsnew.ResponseErrors
	77,  // 79: whatsnew.NewInfoExtractionRules.info_extraction_rules:type_name -> whatsnew.NewInfoExtractionRule
	79,  // 80: whatsnew.CreateInfoExtractionRulesResponse.data:type_name -> whatsnew.CreateInfoExtractionRulesData
	0,   // 81: whatsnew.CreateInfoExtractionRulesResponse.errors:type_name -> whatsnew.ResponseErrors
	81,  // 82: whatsnew.GetInfoExtractionRulesResponse.data:type_name -> whatsnew.GetInfoExtractionRulesData
	0,   // 83: whatsnew.GetInfoExtractionRulesResponse.errors:type_name -> whatsnew.ResponseErrors
	96,  // 84: whatsnew.GetInfoExtractionRulesData.info_extraction_rules:type_name -> whatsnew.InfoExtractionRule
	83,  // 85: whatsnew.CreateInfoExtractionRuleResponse.data:type_name -> whatsnew.CreateInfoExtractionRuleData
	0,   // 86: whatsnew.CreateInfoExtractionRuleResponse.errors:type_name -> whatsnew.ResponseErrors
	85,  // 87: whatsnew.GetInfoExtractionRuleResponse.data:type_name -> whatsnew.GetInfoExtractionRuleData
	0,   // 88: whatsnew.GetInfoExtractionRuleResponse.errors:type_name -> whatsnew.ResponseErrors
	96,  // 89: whatsnew.GetInfoExtractionRuleData.info_extraction_rule:type_name -> whatsnew.InfoExtractionRule
	88,  // 90: whatsnew.UpdateInfoExtractionRuleResponse.data:type_name -> whatsnew.UpdateInfoExtractionRuleData
	0,   // 91: whatsnew.UpdateInfoExtractionRuleResponse.errors:type_name -> whatsnew.ResponseErrors
	96,  // 92: whatsnew.UpdateInfoExtractionRuleData.info_extraction_rule:type_name -> whatsnew.InfoExtractionRule
	90,  // 93: whatsnew.DeleteInfoExtractionRuleResponse.data:type_name -> whatsnew.DeleteInfoExtractionRuleData
	0,   // 94: whatsnew.DeleteInfoExtractionRuleResponse.errors:type_name -> whatsnew.ResponseErrors
	95,  // 95: whatsnew.ZeroShotHypothesisTemplate.labels:type_name -> whatsnew.ZeroShotHypothesisLabel
	2,   // 96: whatsnew.CreateFeedsRequest.new_feeds:type_name -> whatsnew.NewFeeds
	3,   // 97: whatsnew.CreateFeedRequest.new_feed:type_name -> whatsnew.NewFeed
	12,  // 98: whatsnew.UpdateFeedRequest.updated_feed:type_name -> whatsnew.UpdatedFeed
	19,  // 99: whatsnew.CreateUserTwitterSourcesRequest.new_user_twitter_sources:type_name -> whatsnew.NewUserTwitterSources
	22,  // 100: whatsnew.CreateUserTwitterSourceRequest.new_user_twitter_source:type_name -> whatsnew.NewUserTwitterSource
	27,  // 101: whatsnew.UpdateUserTwitterSourceRequest.updated_user_twitter_source:type_name -> whatsnew.UpdatedUserTwitterSource
	34,  // 102: whatsnew.CreateQueryTwitterSourcesRequest.new_query_twitter_sources:type_name -> whatsnew.NewQueryTwitterSources
	37,  // 103: whatsnew.CreateQueryTwitterSourceRequest.new_query_twitter_source:type_name -> whatsnew.NewQueryTwitterSource
	42,  // 104: whatsnew.UpdateQueryTwitterSourceRequest.updated_query_twitter_source:type_name -> whatsnew.UpdatedQueryTwitterSource
	49,  // 105: whatsnew.CreateZeroShotHypothesisTemplatesRequest.new_zero_shot_hypothesis_templates:type_name -> whatsnew.NewZeroShotHypothesisTemplates
	50,  // 106: whatsnew.CreateZeroShotHypothesisTemplateRequest.new_zero_shot_hypothesis_template:type_name -> whatsnew.NewZeroShotHypothesisTemplate
	58,  // 107: whatsnew.UpdateZeroShotHypothesisTemplateRequest.updated_zero_shot_hypothesis_template:type_name -> whatsnew.UpdatedZeroShotHypothesisTemplate
	63,  // 108: whatsnew.CreateZeroShotHypothesisLabelsRequest.new_zero_shot_hypothesis_labels:type_name -> whatsnew.NewZeroShotHypothesisLabels
	64,  // 109: whatsnew.CreateZeroShotHypothesisLabelRequest.new_zero_shot_hypothesis_label:type_name -> whatsnew.NewZeroShotHypothesisLabel
	71,  // 110: whatsnew.UpdateZeroShotHypothesisLabelRequest.updated_zero_shot_hypothesis_label:type_name -> whatsnew.UpdatedZeroShotHypothesisLabel
	76,  // 111: whatsnew.CreateInfoExtractionRulesRequest.new_info_extraction_rules:type_name -> whatsnew.NewInfoExtractionRules
	77,  // 112: whatsnew.CreateInfoExtractionRuleRequest.new_info_extraction_rule:type_name -> whatsnew.NewInfoExtractionRule
	86,  // 113: whatsnew.UpdateInfoExtractionRuleRequest.updated_info_extraction_rule:type_name -> whatsnew.UpdatedInfoExtractionRule
	97,  // 114: whatsnew.Whatsnew.GetFeeds:input_type -> whatsnew.GetFeedsRequest
	98,  // 115: whatsnew.Whatsnew.CreateFeeds:input_type -> whatsnew.CreateFeedsRequest
	99,  // 116: whatsnew.Whatsnew.CreateFeed:input_type -> whatsnew.CreateFeedRequest
	100, // 117: whatsnew.Whatsnew.GetFeed:input_type -> whatsnew.GetFeedRequest
	101, // 118: whatsnew.Whatsnew.UpdateFeed:input_type -> whatsnew.UpdateFeedRequest
	102, // 119: whatsnew.Whatsnew.DeleteFeed:input_type -> whatsnew.DeleteFeedRequest
	103, // 120: whatsnew.Whatsnew.GetUserTwitterSources:input_type -> whatsnew.GetUserTwitterSourcesRequest
	104, // 121: whatsnew.Whatsnew.CreateUserTwitterSources:input_type -> whatsnew.CreateUserTwitterSourcesRequest
	105, // 122: whatsnew.Whatsnew.CreateUserTwitterSource:input_type -> whatsnew.CreateUserTwitterSourceRequest
	106, // 123: whatsnew.Whatsnew.GetUserTwitterSource:input_type -> whatsnew.GetUserTwitterSourceRequest
	107, // 124: whatsnew.Whatsnew.UpdateUserTwitterSource:input_type -> whatsnew.UpdateUserTwitterSourceRequest
	108, // 125: whatsnew.Whatsnew.DeleteUserTwitterSource:input_type -> whatsnew.DeleteUserTwitterSourceRequest
	109, // 126: whatsnew.Whatsnew.GetQueryTwitterSources:input_type -> whatsnew.GetQueryTwitterSourcesRequest
	110, // 127: whatsnew.Whatsnew.CreateQueryTwitterSources:input_type -> whatsnew.CreateQueryTwitterSourcesRequest
	111, // 128: whatsnew.Whatsnew.CreateQueryTwitterSource:input_type -> whatsnew.CreateQueryTwitterSourceRequest
	112, // 129: whatsnew.Whatsnew.GetQueryTwitterSource:input_type -> whatsnew.GetQueryTwitterSourceRequest
	113, // 130: whatsnew.Whatsnew.UpdateQueryTwitterSource:input_type -> whatsnew.UpdateQueryTwitterSourceRequest
	114, // 131: whatsnew.Whatsnew.DeleteQueryTwitterSource:input_type -> whatsnew.DeleteQueryTwitterSourceRequest
	115, // 132: whatsnew.Whatsnew.GetZeroShotHypothesisTemplates:input_type -> whatsnew.GetZeroShotHypothesisTemplatesRequest
	116, // 133: whatsnew.Whatsnew.CreateZeroShotHypothesisTemplates:input_type -> whatsnew.CreateZeroShotHypothesisTemplatesRequest
	117, // 134: whatsnew.Whatsnew.CreateZeroShotHypothesisTemplate:input_type -> whatsnew.CreateZeroShotHypothesisTemplateRequest
	118, // 135: whatsnew.Whatsnew.GetZeroShotHypothesisTemplate:input_type -> whatsnew.GetZeroShotHypothesisTemplateRequest
	119, // 136: whatsnew.Whatsnew.UpdateZeroShotHypothesisTemplate:input_type -> whatsnew.UpdateZeroShotHypothesisTemplateRequest
	120, // 137: whatsnew.Whatsnew.DeleteZeroShotHypothesisTemplate:input_type -> whatsnew.DeleteZeroShotHypothesisTemplateRequest
	121, // 138: whatsnew.Whatsnew.CreateZeroShotHypothesisLabels:input_type -> whatsnew.CreateZeroShotHypothesisLabelsRequest
	122, // 139: whatsnew.Whatsnew.CreateZeroShotHypothesisLabel:input_type -> whatsnew.CreateZeroShotHypothesisLabelRequest
	123, // 140: whatsnew.Whatsnew.GetZeroShotHypothesisLabel:input_type -> whatsnew.GetZeroShotHypothesisLabelRequest
	124, // 141: whatsnew.Whatsnew.UpdateZeroShotHypothesisLabel:input_type -> whatsnew.UpdateZeroShotHypothesisLabelRequest
	125, // 142: whatsnew.Whatsnew.DeleteZeroShotHypothesisLabel:input_type -> whatsnew.DeleteZeroShotHypothesisLabelRequest
	126, // 143: whatsnew.Whatsnew.GetInfoExtractionRules:input_type -> whatsnew.GetInfoExtractionRulesRequest
	127, // 144: whatsnew.Whatsnew.CreateInfoExtractionRules:input_type -> whatsnew.CreateInfoExtractionRulesRequest
	128, // 145: whatsnew.Whatsnew.CreateInfoExtractionRule:input_type -> whatsnew.CreateInfoExtractionRuleRequest
	129, // 146: whatsnew.Whatsnew.GetInfoExtractionRule:input_type -> whatsnew.GetInfoExtractionRuleRequest
	130, // 147: whatsnew.Whatsnew.UpdateInfoExtractionRule:input_type -> whatsnew.UpdateInfoExtractionRuleRequest
	131, // 148: whatsnew.Whatsnew.DeleteInfoExtractionRule:input_type -> whatsnew.DeleteInfoExtractionRuleRequest
	6,   // 149: whatsnew.Whatsnew.GetFeeds:output_type -> whatsnew.GetFeedsResponse
	4,   // 150: whatsnew.Whatsnew.CreateFeeds:output_type -> whatsnew.CreateFeedsResponse
	8,   // 151: whatsnew.Whatsnew.CreateFeed:output_type -> whatsnew.CreateFeedResponse
	10,  // 152: whatsnew.Whatsnew.GetFeed:output_type -> whatsnew.GetFeedResponse
	13,  // 153: whatsnew.Whatsnew.UpdateFeed:output_type -> whatsnew.UpdateFeedResponse
	15,  // 154: whatsnew.Whatsnew.DeleteFeed:output_type -> whatsnew.DeleteFeedResponse
	17,  // 155: whatsnew.Whatsnew.GetUserTwitterSources:output_type -> whatsnew.GetUserTwitterSourcesResponse
	20,  // 156: whatsnew.Whatsnew.CreateUserTwitterSources:output_type -> whatsnew.CreateUserTwitterSourcesResponse
	23,  // 157: whatsnew.Whatsnew.CreateUserTwitterSource:output_type -> whatsnew.CreateUserTwitterSourceResponse
	25,  // 158: whatsnew.Whatsnew.GetUserTwitterSource:output_type -> whatsnew.GetUserTwitterSourceResponse
	28,  // 159: whatsnew.Whatsnew.UpdateUserTwitterSource:output_type -> whatsnew.UpdateUserTwitterSourceResponse
	30,  // 160: whatsnew.Whatsnew.DeleteUserTwitterSource:output_type -> whatsnew.DeleteUserTwitterSourceResponse
	32,  // 161: whatsnew.Whatsnew.GetQueryTwitterSources:output_type -> whatsnew.GetQueryTwitterSourcesResponse
	35,  // 162: whatsnew.Whatsnew.CreateQueryTwitterSources:output_type -> whatsnew.CreateQueryTwitterSourcesResponse
	38,  // 163: whatsnew.Whatsnew.CreateQueryTwitterSource:output_type -> whatsnew.CreateQueryTwitterSourceResponse
	40,  // 164: whatsnew.Whatsnew.GetQueryTwitterSource:output_type -> whatsnew.GetQueryTwitterSourceResponse
	43,  // 165: whatsnew.Whatsnew.UpdateQueryTwitterSource:output_type -> whatsnew.UpdateQueryTwitterSourceResponse
	45,  // 166: whatsnew.Whatsnew.DeleteQueryTwitterSource:output_type -> whatsnew.DeleteQueryTwitterSourceResponse
	47,  // 167: whatsnew.Whatsnew.GetZeroShotHypothesisTemplates:output_type -> whatsnew.GetZeroShotHypothesisTemplatesResponse
	52,  // 168: whatsnew.Whatsnew.CreateZeroShotHypothesisTemplates:output_type -> whatsnew.CreateZeroShotHypothesisTemplatesResponse
	54,  // 169: whatsnew.Whatsnew.CreateZeroShotHypothesisTemplate:output_type -> whatsnew.CreateZeroShotHypothesisTemplateResponse
	56,  // 170: whatsnew.Whatsnew.GetZeroShotHypothesisTemplate:output_type -> whatsnew.GetZeroShotHypothesisTemplateResponse
	59,  // 171: whatsnew.Whatsnew.UpdateZeroShotHypothesisTemplate:output_type -> whatsnew.UpdateZeroShotHypothesisTemplateResponse
	61,  // 172: whatsnew.Whatsnew.DeleteZeroShotHypothesisTemplate:output_type -> whatsnew.DeleteZeroShotHypothesisTemplateResponse
	65,  // 173: whatsnew.Whatsnew.CreateZeroShotHypothesisLabels:output_type -> whatsnew.CreateZeroShotHypothesisLabelsResponse
	67,  // 174: whatsnew.Whatsnew.CreateZeroShotHypothesisLabel:output_type -> whatsnew.CreateZeroShotHypothesisLabelResponse
	69,  // 175: whatsnew.Whatsnew.GetZeroShotHypothesisLabel:output_type -> whatsnew.GetZeroShotHypothesisLabelResponse
	72,  // 176: whatsnew.Whatsnew.UpdateZeroShotHypothesisLabel:output_type -> whatsnew.UpdateZeroShotHypothesisLabelResponse
	74,  // 177: whatsnew.Whatsnew.DeleteZeroShotHypothesisLabel:output_type -> whatsnew.DeleteZeroShotHypothesisLabelResponse
	80,  // 178: whatsnew.Whatsnew.GetInfoExtractionRules:output_type -> whatsnew.GetInfoExtractionRulesResponse
	78,  // 179: whatsnew.Whatsnew.CreateInfoExtractionRules:output_type -> whatsnew.CreateInfoExtractionRulesResponse
	82,  // 180: whatsnew.Whatsnew.CreateInfoExtractionRule:output_type -> whatsnew.CreateInfoExtractionRuleResponse
	84,  // 181: whatsnew.Whatsnew.GetInfoExtractionRule:output_type -> whatsnew.GetInfoExtractionRuleResponse
	87,  // 182: whatsnew.Whatsnew.UpdateInfoExtractionRule:output_type -> whatsnew.UpdateInfoExtractionRuleResponse
	89,  // 183: whatsnew.Whatsnew.DeleteInfoExtractionRule:output_type -> whatsnew.DeleteInfoExtractionRuleResponse
	149, // [149:184] is the sub-list for method output_type
	114, // [114:149] is the sub-list for method input_type
	114, // [114:114] is the sub-list for extension type_name
	114, // [114:114] is the sub-list for extension extendee
	0,   // [0:114] is the sub-list for field type_name
}

func init() { file_whatsnew_proto_init() }
func file_whatsnew_proto_init() {
	if File_whatsnew_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_whatsnew_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseErrors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewFeeds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeedsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeedsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTwitterSourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTwitterSourcesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewUserTwitterSources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserTwitterSourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserTwitterSourcesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewUserTwitterSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserTwitterSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserTwitterSourceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTwitterSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTwitterSourceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedUserTwitterSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserTwitterSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserTwitterSourceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserTwitterSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserTwitterSourceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueryTwitterSourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueryTwitterSourcesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewQueryTwitterSources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueryTwitterSourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueryTwitterSourcesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewQueryTwitterSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueryTwitterSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueryTwitterSourceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueryTwitterSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueryTwitterSourceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedQueryTwitterSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateQueryTwitterSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateQueryTwitterSourceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteQueryTwitterSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteQueryTwitterSourceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZeroShotHypothesisTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZeroShotHypothesisTemplatesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewZeroShotHypothesisTemplates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewZeroShotHypothesisTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewZeroShotHypothesisTemplateLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateZeroShotHypothesisTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateZeroShotHypothesisTemplatesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateZeroShotHypothesisTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateZeroShotHypothesisTemplateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZeroShotHypothesisTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZeroShotHypothesisTemplateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedZeroShotHypothesisTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateZeroShotHypothesisTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateZeroShotHypothesisTemplateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteZeroShotHypothesisTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteZeroShotHypothesisTemplateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewZeroShotHypothesisLabels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewZeroShotHypothesisLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateZeroShotHypothesisLabelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateZeroShotHypothesisLabelsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateZeroShotHypothesisLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateZeroShotHypothesisLabelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZeroShotHypothesisLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZeroShotHypothesisLabelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedZeroShotHypothesisLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateZeroShotHypothesisLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateZeroShotHypothesisLabelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteZeroShotHypothesisLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteZeroShotHypothesisLabelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewInfoExtractionRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewInfoExtractionRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInfoExtractionRulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInfoExtractionRulesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoExtractionRulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoExtractionRulesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInfoExtractionRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInfoExtractionRuleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoExtractionRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoExtractionRuleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedInfoExtractionRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInfoExtractionRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInfoExtractionRuleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInfoExtractionRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInfoExtractionRuleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTwitterSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTwitterSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZeroShotHypothesisTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZeroShotHypothesisLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoExtractionRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeedsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTwitterSourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserTwitterSourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserTwitterSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTwitterSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserTwitterSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserTwitterSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueryTwitterSourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueryTwitterSourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQueryTwitterSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueryTwitterSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateQueryTwitterSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteQueryTwitterSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZeroShotHypothesisTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateZeroShotHypothesisTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateZeroShotHypothesisTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZeroShotHypothesisTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateZeroShotHypothesisTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteZeroShotHypothesisTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateZeroShotHypothesisLabelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateZeroShotHypothesisLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZeroShotHypothesisLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateZeroShotHypothesisLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteZeroShotHypothesisLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoExtractionRulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInfoExtractionRulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInfoExtractionRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoExtractionRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateInfoExtractionRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whatsnew_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteInfoExtractionRuleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_whatsnew_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   132,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_whatsnew_proto_goTypes,
		DependencyIndexes: file_whatsnew_proto_depIdxs,
		MessageInfos:      file_whatsnew_proto_msgTypes,
	}.Build()
	File_whatsnew_proto = out.File
	file_whatsnew_proto_rawDesc = nil
	file_whatsnew_proto_goTypes = nil
	file_whatsnew_proto_depIdxs = nil
}
