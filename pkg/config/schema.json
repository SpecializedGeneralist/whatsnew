{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/SpecializedGeneralist/whatsnew/main/pkg/config/schema.json",
  "title": "WhatsNew Configuration",
  "description": "Configuration settings for WhatsNew",
  "type": "object",
  "properties": {
    "db": {
      "description": "Settings for connecting to the Postgres database.",
      "type": "object",
      "properties": {
        "dsn": {
          "description": "Connection Data Source Name (DSN). The database name MUST NOT be included.",
          "type": "string"
        },
        "dbname": {
          "description": "Name of the Postgres database.",
          "type": "string"
        },
        "loglevel": {
          "description": "Log level considered exclusively for database operations. The value is compatible with GORM logger.LogLevel.",
          "type": "string",
          "enum": ["silent", "error", "warn", "info"]
        }
      },
      "required": ["dsn", "dbname", "loglevel"]
    },
    "faktory": {
      "description": "Settings for connecting to Faktory and general properties for the workers.",
      "type": "object",
      "properties": {
        "url": {
          "description": "Faktory URL, internally exposed as environment variable FAKTORY_URL.",
          "type": "string"
        },
        "loglevel": {
          "$ref": "#/definitions/loglevel"
        }
      },
      "required": ["url", "loglevel"]
    },
    "hnsw": {
      "description": "Settings for connecting to HNSW server and handling vector indices.",
      "type": "object",
      "properties": {
        "server": {
          "$ref": "#/definitions/grpc_server"
        },
        "index": {
          "type": "object",
          "properties": {
            "name_prefix": {
              "type": "string"
            },
            "dim": {
              "type": "integer"
            },
            "ef_construction": {
              "type": "integer"
            },
            "m": {
              "type": "integer"
            },
            "max_elements": {
              "type": "integer"
            },
            "seed": {
              "type": "integer"
            },
            "space_type": {
              "type": "string",
              "enum": [
                "L2",
                "IP",
                "COSINE"
              ]
            }
          },
          "required": ["name_prefix", "dim", "ef_construction", "m", "max_elements", "seed", "space_type"]
        }
      },
      "required": ["server", "index"]
    },
    "server": {
      "description": "Settings for HTTP and gRPC server.",
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "tls_enabled": {
          "type": "boolean"
        },
        "tls_cert": {
          "type": "string"
        },
        "tls_key": {
          "type": "string"
        },
        "allowed_origins": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "loglevel": {
          "$ref": "#/definitions/loglevel"
        }
      },
      "required": ["address", "tls_enabled", "tls_cert", "tls_key", "allowed_origins", "loglevel"]
    },
    "tasks": {
      "description": "Settings for specific tasks.",
      "type": "object",
      "properties": {
        "feed_scheduler": {
          "description": "Settings for periodic scheduling of jobs for processing all feeds.",
          "type": "object",
          "properties": {
            "time_interval": {
              "description": "How frequently the 'jobs' should be scheduled, for each enabled feed. The value must be compatible with Go time.Duration.",
              "type": "string"
            },
            "jobs": {
              "description": "List of each job type to be periodically scheduled.",
              "$ref": "#/definitions/faktory_jobs"
            },
            "loglevel": {
              "$ref": "#/definitions/loglevel"
            }
          },
          "required": ["time_interval", "jobs", "loglevel"]
        },
        "twitter_scheduler": {
          "description": "Settings for periodic scheduling of jobs for processing all twitter sources.",
          "type": "object",
          "properties": {
            "time_interval": {
              "description": "How frequently the 'jobs' should be scheduled, for each enabled twitter source. The value must be compatible with Go time.Duration.",
              "type": "string"
            },
            "jobs": {
              "description": "List of each job type to be periodically scheduled.",
              "$ref": "#/definitions/faktory_jobs"
            },
            "loglevel": {
              "$ref": "#/definitions/loglevel"
            }
          },
          "required": ["time_interval", "jobs", "loglevel"]
        },
        "gdelt_fetcher": {
          "description": "Settings for periodic fetching of GDELT events and news reports extraction for further processing.",
          "type": "object",
          "properties": {
            "time_interval": {
              "description": "How frequently the GDELT events should be fetched and the 'jobs' scheduled, for each new piece of news. The value must be compatible with Go time.Duration.",
              "type": "string"
            },
            "event_root_code_whitelist": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "new_web_resource_jobs": {
              "description": "List of each job type to be scheduled for each piece of news.",
              "$ref": "#/definitions/faktory_jobs"
            },
            "loglevel": {
              "$ref": "#/definitions/loglevel"
            }
          },
          "required": ["time_interval", "new_web_resource_jobs", "event_root_code_whitelist", "loglevel"]
        },
        "jobs_recoverer": {
          "description": "Settings for periodic recovering of pending jobs.",
          "type": "object",
          "properties": {
            "time_interval": {
              "description": "How frequently the recovery process must run. The value must be compatible with Go time.Duration.",
              "type": "string"
            },
            "leeway_time": {
              "description": "Leeway time duration to exclude from recovery pending jobs created too recently. The value must be compatible with Go time.Duration.",
              "type": "string"
            },
            "loglevel": {
              "$ref": "#/definitions/loglevel"
            }
          },
          "required": ["time_interval", "leeway_time", "loglevel"]
        }
      },
      "required": ["feed_scheduler", "twitter_scheduler", "gdelt_fetcher", "jobs_recoverer"]
    },
    "workers": {
      "description": "Settings for specific workers.",
      "type": "object",
      "properties": {
        "feed_fetcher": {
          "description": "Settings for the feed-fetcher worker.",
          "type": "object",
          "properties": {
            "queues": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "concurrency": {
              "type": "integer"
            },
            "new_web_resource_jobs": {
              "$ref": "#/definitions/faktory_jobs"
            },
            "max_allowed_failures": {
              "type": "integer"
            },
            "omit_items_published_before": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "time": {
                  "type": "string"
                }
              },
              "required": ["enabled", "time"]
            },
            "language_filter": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "loglevel": {
              "$ref": "#/definitions/loglevel"
            }
          },
          "required": [
            "queues",
            "concurrency",
            "new_web_resource_jobs",
            "language_filter",
            "max_allowed_failures",
            "omit_items_published_before",
            "loglevel"
          ]
        },
        "twitter_scraper": {
          "description": "Settings for the twitter-scraper worker.",
          "type": "object",
          "properties": {
            "queues": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "concurrency": {
              "type": "integer"
            },
            "max_tweets_number": {
              "type": "integer"
            },
            "new_web_article_jobs": {
              "$ref": "#/definitions/faktory_jobs"
            },
            "omit_tweets_published_before": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "time": {
                  "type": "string"
                }
              },
              "required": ["enabled", "time"]
            },
            "language_filter": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "loglevel": {
              "$ref": "#/definitions/loglevel"
            }
          },
          "required": [
            "queues",
            "concurrency",
            "max_tweets_number",
            "new_web_article_jobs",
            "language_filter",
            "omit_tweets_published_before",
            "loglevel"
          ]
        },
        "web_scraper": {
          "description": "Settings for the web-scraper worker.",
          "type": "object",
          "properties": {
            "queues": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "concurrency": {
              "type": "integer"
            },
            "new_web_article_jobs": {
              "$ref": "#/definitions/faktory_jobs"
            },
            "language_filter": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "request_timeout": {
              "type": "string"
            },
            "user_agent": {
              "type": "string"
            },
            "loglevel": {
              "$ref": "#/definitions/loglevel"
            }
          },
          "required": [
            "queues",
            "concurrency",
            "new_web_article_jobs",
            "language_filter",
            "request_timeout",
            "user_agent",
            "loglevel"
          ]
        },
        "translator": {
          "description": "Settings for the translator worker.",
          "type": "object",
          "properties": {
            "queues": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "concurrency": {
              "type": "integer"
            },
            "translator_server": {
              "$ref": "#/definitions/grpc_server"
            },
            "processed_web_article_jobs": {
              "$ref": "#/definitions/faktory_jobs"
            },
            "language_whitelist": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "target_language": {
              "type": "string"
            },
            "loglevel": {
              "$ref": "#/definitions/loglevel"
            }
          },
          "required": [
            "queues",
            "concurrency",
            "processed_web_article_jobs",
            "translator_server",
            "language_whitelist",
            "target_language",
            "loglevel"
          ]
        },
        "zero_shot_classifier": {
          "description": "Settings for the zero-shot classifier worker.",
          "type": "object",
          "properties": {
            "queues": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "concurrency": {
              "type": "integer"
            },
            "processed_web_article_jobs": {
              "$ref": "#/definitions/faktory_jobs"
            },
            "spago_bart_server": {
              "$ref": "#/definitions/grpc_server"
            },
            "loglevel": {
              "$ref": "#/definitions/loglevel"
            }
          },
          "required": ["queues", "concurrency", "processed_web_article_jobs", "spago_bart_server", "loglevel"]
        },
        "text_classifier": {
          "description": "Settings for the text classifier worker.",
          "type": "object",
          "properties": {
            "queues": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "concurrency": {
              "type": "integer"
            },
            "processed_web_article_jobs": {
              "$ref": "#/definitions/faktory_jobs"
            },
            "classifier_server": {
              "$ref": "#/definitions/grpc_server"
            },
            "loglevel": {
              "$ref": "#/definitions/loglevel"
            }
          },
          "required": ["queues", "concurrency", "processed_web_article_jobs", "classifier_server", "loglevel"]
        },
        "vectorizer": {
          "description": "Settings for the vectorizer worker.",
          "type": "object",
          "properties": {
            "queues": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "concurrency": {
              "type": "integer"
            },
            "vectorized_web_article_jobs": {
              "$ref": "#/definitions/faktory_jobs"
            },
            "spago_bert_server": {
              "$ref": "#/definitions/grpc_server"
            },
            "loglevel": {
              "$ref": "#/definitions/loglevel"
            }
          },
          "required": ["queues", "concurrency", "vectorized_web_article_jobs", "spago_bert_server", "loglevel"]
        },
        "duplicate_detector": {
          "description": "Settings for the duplicate detector worker.",
          "type": "object",
          "properties": {
            "queues": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "timeframe_days": {
              "type": "integer"
            },
            "distance_threshold": {
              "type": "number"
            },
            "non_duplicate_web_article_jobs": {
              "$ref": "#/definitions/faktory_jobs"
            },
            "duplicate_web_article_jobs": {
              "$ref": "#/definitions/faktory_jobs"
            },
            "loglevel": {
              "$ref": "#/definitions/loglevel"
            }
          },
          "required": [
            "queues",
            "timeframe_days",
            "distance_threshold",
            "non_duplicate_web_article_jobs",
            "duplicate_web_article_jobs",
            "loglevel"
          ]
        },
        "information_extractor": {
          "description": "Settings for the information extractor worker.",
          "type": "object",
          "properties": {
            "queues": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "concurrency": {
              "type": "integer"
            },
            "spago_bert_server": {
              "$ref": "#/definitions/grpc_server"
            },
            "processed_web_article_jobs": {
              "$ref": "#/definitions/faktory_jobs"
            },
            "loglevel": {
              "$ref": "#/definitions/loglevel"
            }
          },
          "required": ["queues", "concurrency", "spago_bert_server", "processed_web_article_jobs", "loglevel"]
        }
      },
      "required": [
        "feed_fetcher",
        "twitter_scraper",
        "web_scraper",
        "translator",
        "zero_shot_classifier",
        "text_classifier",
        "vectorizer",
        "duplicate_detector",
        "information_extractor"
      ]
    }
  },
  "required": ["db", "faktory", "hnsw", "server", "tasks", "workers"],
  "definitions": {
    "loglevel": {
      "description": "Log level. The value is compatible with zerolog.Level.",
      "type": "string",
      "enum": [
        "trace",
        "debug",
        "info",
        "warn",
        "error",
        "fatal",
        "panic",
        "disabled"
      ]
    },
    "grpc_server": {
      "description": "Common settings for connecting to a gRPC server.",
      "type": "object",
      "properties": {
        "target": { "type": "string" },
        "tls_enabled": { "type": "boolean" }
      },
      "required": ["target", "tls_enabled"]
    },
    "faktory_jobs": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/faktory_job"
      }
    },
    "faktory_job": {
      "description": "A Faktory job to be scheduled for execution.",
      "type": "object",
      "properties": {
        "job_type": { "type": "string" },
        "queue": { "type": "string" }
      },
      "required": ["job_type", "queue"]
    }
  }
}
